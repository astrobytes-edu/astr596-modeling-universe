{"version":2,"kind":"Article","sha256":"eb1cb35abf47e261a844ef0a758fc1b4b8c7a2a745bedf607d313f17e1765a84","slug":"chapter3-functions","location":"/04-computational-methods/python-fundamentals-v1/python-fundamentals/chapter3-functions.md","dependencies":[],"frontmatter":{"title":"Chapter 3: Functions - The Art of Abstraction","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Anna Rosen","given":"Anna","family":"Rosen"},"name":"Anna Rosen","orcid":"0000-0003-4423-0660","email":"alrosen@sdsu.edu","affiliations":["San Diego State University"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/astrobytes-edu/astr596-modeling-universe","subject":"Modeling the Universe","venue":{"title":"ASTR 596 - Fall 2025","url":"https://www.anna-rosen.com"},"keywords":["computational astrophysics","python","numerical methods","machine learning","monte carlo","neural networks","radiative transfer","bayesian inference","JAX"],"affiliations":[{"id":"San Diego State University","name":"San Diego State University"}],"numbering":{"title":{"offset":3}},"edit_url":"https://github.com/astrobytes-edu/astr596-modeling-universe/blob/main/04-computational-methods/python-fundamentals-v1/python-fundamentals/chapter3-functions.md","exports":[{"format":"md","filename":"chapter3-functions.md","url":"/build/chapter3-functions-15e9e6413b9106ab13564a7c8b671c05.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"“The function of good software is to make the complex appear to be simple.” - Grady Booch","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"m1iKARyFaS"}],"key":"b8TIdny0Y5"}],"key":"qaL0GIuE51"},{"type":"heading","depth":2,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Table of Contents","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AVDNu0pQkz"}],"identifier":"table-of-contents","label":"Table of Contents","html_id":"table-of-contents","implicit":true,"key":"yQEF1NCJWb"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":41,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Learning Objectives","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"PJpGlUkJ8f"}],"identifier":"learning-objectives","label":"learning-objectives","kind":"heading","template":"{name}","resolved":true,"html_id":"learning-objectives","remote":true,"url":"/python-enrivonment-revised","dataUrl":"/python-enrivonment-revised.json","key":"Rysri68gQh"}],"key":"jW52lfb8Vd"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Why Functions Matter","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"xSSiqSKvUi"}],"identifier":"why-functions-matter","label":"why-functions-matter","kind":"heading","template":"{name}","resolved":true,"html_id":"why-functions-matter","key":"HV0GbE9zQt"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The Philosophy of Abstraction","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"CEfG2d3Rsi"}],"identifier":"the-philosophy-of-abstraction","label":"the-philosophy-of-abstraction","kind":"heading","template":"{name}","resolved":true,"html_id":"the-philosophy-of-abstraction","key":"x1R1jJNMma"}],"key":"tDREk7FpBh"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"DRY: Don’t Repeat Yourself","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"RPyHc30dGO"}],"identifier":"dry-dont-repeat-yourself","label":"dry-dont-repeat-yourself","kind":"heading","template":"{name}","resolved":true,"html_id":"dry-dont-repeat-yourself","key":"ADTMncP1Gz"}],"key":"INWfS1WuXn"}],"key":"UYajzYwOYM"}],"key":"OwUrHLIo9C"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Function Fundamentals","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"nyWdPQcp1j"}],"identifier":"function-fundamentals","label":"function-fundamentals","kind":"heading","template":"{name}","resolved":true,"html_id":"function-fundamentals","key":"CoS4vBUsZ4"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":12,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Basic Syntax and Return","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"jeDL2hAoXS"}],"identifier":"basic-syntax-and-return","label":"basic-syntax-and-return","kind":"heading","template":"{name}","resolved":true,"html_id":"basic-syntax-and-return","key":"xfl2qKX3Up"}],"key":"JH8sZidBXa"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Parameters vs Arguments","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"gwF4cLrswh"}],"identifier":"parameters-vs-arguments","label":"parameters-vs-arguments","kind":"heading","template":"{name}","resolved":true,"html_id":"parameters-vs-arguments","key":"Kw0R2SmiHO"}],"key":"HTW0agz4VR"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"The None Return","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"ZdaOpf8c0I"}],"identifier":"the-none-return","label":"the-none-return","kind":"heading","template":"{name}","resolved":true,"html_id":"the-none-return","key":"daQZtFtTHQ"}],"key":"uchn5Gx0k8"}],"key":"mZ6xYRTw9D"}],"key":"p26j5VzXEQ"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Function Arguments: The Full Story","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"OdyBqd9Gsz"}],"identifier":"function-arguments-the-full-story","label":"function-arguments-the-full-story","kind":"heading","template":"{name}","resolved":true,"html_id":"function-arguments-the-full-story","key":"BgMyy3cU4L"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":16,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Positional Arguments","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"wjuBmCnacf"}],"identifier":"positional-arguments","label":"positional-arguments","kind":"heading","template":"{name}","resolved":true,"html_id":"positional-arguments","key":"N7gJbokLGK"}],"key":"tk3k3NIAkO"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Default Arguments and Their Dangers","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"WUrvj15hoh"}],"identifier":"default-arguments-and-their-dangers","label":"default-arguments-and-their-dangers","kind":"heading","template":"{name}","resolved":true,"html_id":"default-arguments-and-their-dangers","key":"tPX6NTUXwd"}],"key":"ufa8Sx1hpZ"},{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Keyword Arguments","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"NVjpQTMfYF"}],"identifier":"keyword-arguments","label":"keyword-arguments","kind":"heading","template":"{name}","resolved":true,"html_id":"keyword-arguments","key":"b1ly1ETQAh"}],"key":"N3TnFkSCXp"},{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"link","url":"#args-variable-positional-arguments","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"*args: Variable Positional Arguments","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"C3igPJ1NIc"}],"urlSource":"#args-variable-positional-arguments","key":"xuukELaRnK"}],"key":"CSssYThRfK"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"link","url":"#kwargs-variable-keyword-arguments","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"**kwargs: Variable Keyword Arguments","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"FPTwH6Opoa"}],"urlSource":"#kwargs-variable-keyword-arguments","key":"yyFkuWlasN"}],"key":"kT5xb5t1Gt"},{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"The Complete Order","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"ddz8OzLBAb"}],"identifier":"the-complete-order","label":"the-complete-order","kind":"heading","template":"{name}","resolved":true,"html_id":"the-complete-order","key":"AhVJaYhpaJ"}],"key":"HMOzAl2nbk"}],"key":"LqUD5t8Yu5"}],"key":"i2gvL8MHXj"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Scope and Namespaces","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"vYXdHGZCDf"}],"identifier":"scope-and-namespaces","label":"scope-and-namespaces","kind":"heading","template":"{name}","resolved":true,"html_id":"scope-and-namespaces","key":"ztx0dQjhDH"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":23,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"The LEGB Rule","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"JLg0RciaVr"}],"identifier":"the-legb-rule","label":"the-legb-rule","kind":"heading","template":"{name}","resolved":true,"html_id":"the-legb-rule","remote":true,"url":"/python-functions-modules-orig","dataUrl":"/python-functions-modules-orig.json","key":"OzdkrRoR2D"}],"key":"ufe50XlvmJ"},{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Global Variables: Handle with Care","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"dZT97snLm8"}],"identifier":"global-variables-handle-with-care","label":"global-variables-handle-with-care","kind":"heading","template":"{name}","resolved":true,"html_id":"global-variables-handle-with-care","key":"DDiCYF4h53"}],"key":"t7d5TAhE1T"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Nonlocal: Nested Function Scopes","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"nlAE5tMfWz"}],"identifier":"nonlocal-nested-function-scopes","label":"nonlocal-nested-function-scopes","kind":"heading","template":"{name}","resolved":true,"html_id":"nonlocal-nested-function-scopes","key":"eru3eb61dV"}],"key":"Jos8H2lQf0"}],"key":"yDqC1MisSU"}],"key":"TVepfeKSJT"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Functions as First-Class Objects","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"d6MigfcvnH"}],"identifier":"functions-as-first-class-objects","label":"functions-as-first-class-objects","kind":"heading","template":"{name}","resolved":true,"html_id":"functions-as-first-class-objects","remote":true,"url":"/python-functions-modules-orig","dataUrl":"/python-functions-modules-orig.json","key":"GXnpueVHqn"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":27,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Functions as Arguments","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"YgUfugVNTp"}],"identifier":"functions-as-arguments","label":"functions-as-arguments","kind":"heading","template":"{name}","resolved":true,"html_id":"functions-as-arguments","key":"V2WywBDcTF"}],"key":"lFZ1HqsT3s"},{"type":"listItem","spread":true,"position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Functions Returning Functions","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"TXOn14OLlP"}],"identifier":"functions-returning-functions","label":"functions-returning-functions","kind":"heading","template":"{name}","resolved":true,"html_id":"functions-returning-functions","key":"DoubQRI4AS"}],"key":"viaAIk1kjh"},{"type":"listItem","spread":true,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Lambda Functions","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"S5AFKsLR8v"}],"identifier":"lambda-functions","label":"lambda-functions","kind":"heading","template":"{name}","resolved":true,"html_id":"lambda-functions","remote":true,"url":"/python-functions-modules-orig","dataUrl":"/python-functions-modules-orig.json","key":"GilYBr4P9D"}],"key":"JtHUh5HQ2Y"},{"type":"listItem","spread":true,"position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"Decorators: Function Transformers","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"HWsjiPWqIp"}],"identifier":"decorators-function-transformers","label":"decorators-function-transformers","kind":"heading","template":"{name}","resolved":true,"html_id":"decorators-function-transformers","key":"jltAfXfE1C"}],"key":"hOX0fmoelS"}],"key":"dtc0WcJ1qD"}],"key":"SJBRZMZswB"},{"type":"listItem","spread":true,"position":{"start":{"line":31,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Documentation and Type Hints","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"JT7F5JRj5P"}],"identifier":"documentation-and-type-hints","label":"documentation-and-type-hints","kind":"heading","template":"{name}","resolved":true,"html_id":"documentation-and-type-hints","key":"Sq3eYMlqSz"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":32,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Docstrings That Matter","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"FArhSyPnjX"}],"identifier":"docstrings-that-matter","label":"docstrings-that-matter","kind":"heading","template":"{name}","resolved":true,"html_id":"docstrings-that-matter","key":"TqhdWyD8iH"}],"key":"CzOEzrnMma"},{"type":"listItem","spread":true,"position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"Type Hints for Clarity","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"cgZi0gU99T"}],"identifier":"type-hints-for-clarity","label":"type-hints-for-clarity","kind":"heading","template":"{name}","resolved":true,"html_id":"type-hints-for-clarity","key":"QjKvnXOtGK"}],"key":"hKXYAPzX5N"}],"key":"PB9tLVr3z6"}],"key":"tj3p7Ik2Rp"},{"type":"listItem","spread":true,"position":{"start":{"line":34,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"Advanced Patterns","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"R9Jre9I3J0"}],"identifier":"advanced-patterns","label":"advanced-patterns","kind":"heading","template":"{name}","resolved":true,"html_id":"advanced-patterns","key":"hZeigNORzc"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":35,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"C6RbLYCNSE"}],"identifier":"recursion","label":"recursion","kind":"heading","template":"{name}","resolved":true,"html_id":"recursion","key":"EUmvmpQC1z"}],"key":"wpFdUKfTMY"},{"type":"listItem","spread":true,"position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"link","url":"#closures","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"Closures","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"Nf6mawHd7y"}],"urlSource":"#closures","key":"B0NOONx7tu"}],"key":"G2KKb5AdPL"},{"type":"listItem","spread":true,"position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"Partial Functions","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"iWgKXMoOjo"}],"identifier":"partial-functions","label":"partial-functions","kind":"heading","template":"{name}","resolved":true,"html_id":"partial-functions","key":"QhqtRpIdRO"}],"key":"RHw2sJJrq4"}],"key":"Y2pEUi06oa"}],"key":"clt9tBTvJN"},{"type":"listItem","spread":true,"position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"Common Pitfalls and Best Practices","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"d5p4NCsHVq"}],"identifier":"common-pitfalls-and-best-practices","label":"common-pitfalls-and-best-practices","kind":"heading","template":"{name}","resolved":true,"html_id":"common-pitfalls-and-best-practices","key":"aIy7brPpCh"}],"key":"bJSETHMyVY"},{"type":"listItem","spread":true,"position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"M1qKclocm9"}],"identifier":"exercises","label":"exercises","kind":"heading","template":"{name}","resolved":true,"html_id":"exercises","remote":true,"url":"/chapter1-python-calculator","dataUrl":"/chapter1-python-calculator.json","key":"er79pDEP7R"}],"key":"ufKieH3eWZ"},{"type":"listItem","spread":true,"position":{"start":{"line":40,"column":1},"end":{"line":41,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"Key Takeaways","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"cJCZ7bib4F"}],"identifier":"key-takeaways","label":"key-takeaways","kind":"heading","template":"{name}","resolved":true,"html_id":"key-takeaways","remote":true,"url":"/python-enrivonment-revised","dataUrl":"/python-enrivonment-revised.json","key":"LepHKYKvbH"}],"key":"wBsURf8YTE"}],"key":"j5sFDPuImB"},{"type":"thematicBreak","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"BGZNnhwGAD"},{"type":"heading","depth":2,"position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"children":[{"type":"text","value":"Learning Objectives","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"U1HwYaWm3d"}],"identifier":"learning-objectives","label":"Learning Objectives","html_id":"learning-objectives","implicit":true,"key":"uA9ySUkkyG"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"By the end of this chapter you will:","position":{"start":{"line":46,"column":1},"end":{"line":46,"column":1}},"key":"Ktv3zIvJyv"}],"key":"FH0C4mqJhm"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":48,"column":1},"end":{"line":54,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"Write functions that are modular, reusable, and testable","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"flnODztSVh"}],"key":"zd44x5IpvZ"},{"type":"listItem","spread":true,"position":{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},"children":[{"type":"text","value":"Master all argument types: positional, keyword, *args, **kwargs","position":{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},"key":"vpmrFiz2CQ"}],"key":"nTvDgbStHE"},{"type":"listItem","spread":true,"position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"children":[{"type":"text","value":"Understand scope rules and avoid common namespace pitfalls","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"O8A8yldCXb"}],"key":"CllcI2K2qm"},{"type":"listItem","spread":true,"position":{"start":{"line":51,"column":1},"end":{"line":51,"column":1}},"children":[{"type":"text","value":"Use functions as first-class objects (pass, return, transform)","position":{"start":{"line":51,"column":1},"end":{"line":51,"column":1}},"key":"xcPqpsdSr3"}],"key":"IQzl0F2ksU"},{"type":"listItem","spread":true,"position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"children":[{"type":"text","value":"Write comprehensive docstrings and use type hints","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"key":"nveWyfVZDU"}],"key":"NeFdZFTjiQ"},{"type":"listItem","spread":true,"position":{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},"children":[{"type":"text","value":"Apply functional programming concepts to scientific code","position":{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},"key":"A3M8OADfeW"}],"key":"QW2l5ugsik"},{"type":"listItem","spread":true,"position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"children":[{"type":"text","value":"Recognize when and how to use advanced patterns like decorators","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"bNhH4fCTef"}],"key":"h9Ma8YwWIp"}],"key":"ZAxaJELkvV"}],"class":"info","key":"f6PjQCa8gd"},{"type":"heading","depth":2,"position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"children":[{"type":"text","value":"Why Functions Matter","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"a4FuBg5Rep"}],"identifier":"why-functions-matter","label":"Why Functions Matter","html_id":"why-functions-matter","implicit":true,"key":"h6elHZesHH"},{"type":"heading","depth":3,"position":{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},"children":[{"type":"text","value":"The Philosophy of Abstraction","position":{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},"key":"lLbNhdKlO0"}],"identifier":"the-philosophy-of-abstraction","label":"The Philosophy of Abstraction","html_id":"the-philosophy-of-abstraction","implicit":true,"key":"kru2iCBgtn"},{"type":"paragraph","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"Functions are humanity’s tool for managing complexity. They let us think at different levels:","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"gGyv9537Vg"}],"key":"t8GeXqprRA"}],"key":"LoO0PTiuyF"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Level 1: The messy details\ndef calculate_schwarzschild_radius_verbose():\n    G = 6.67430e-11  # gravitational constant in m³/kg/s²\n    c = 299792458    # speed of light in m/s\n    M = 1.98892e30   # solar mass in kg\n    \n    # Schwarzschild radius formula\n    numerator = 2 * G * M\n    denominator = c * c\n    r_s = numerator / denominator\n    \n    print(f\"For calculation:\")\n    print(f\"  G = {G:.5e} m³/kg/s²\")\n    print(f\"  c = {c:.5e} m/s\")\n    print(f\"  M = {M:.5e} kg\")\n    print(f\"  r_s = 2GM/c² = {r_s:.3f} m\")\n    \n    return r_s\n\n# Level 2: The abstraction\ndef schwarzschild_radius(mass_kg):\n    \"\"\"Calculate Schwarzschild radius for given mass.\"\"\"\n    G = 6.67430e-11\n    c = 299792458\n    return 2 * G * mass_kg / c**2\n\n# Level 3: The application\ndef is_black_hole(mass_kg, radius_m):\n    \"\"\"Check if object is within its Schwarzschild radius.\"\"\"\n    return radius_m < schwarzschild_radius(mass_kg)\n\n# Now we can think at the problem level, not the math level\nsolar_mass = 1.98892e30\nprint(f\"Sun compressed to 1km: Black hole? {is_black_hole(solar_mass, 1000)}\")\nprint(f\"Sun compressed to 10km: Black hole? {is_black_hole(solar_mass, 10000)}\")","key":"LxxW4Mza3i"},{"type":"output","id":"3X1ov9lLZkly-rgX6uBcI","data":[],"key":"efptmSC7XP"}],"key":"fPnt6b6qj0"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"children":[{"type":"text","value":"DRY: Don’t Repeat Yourself","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"key":"motUESOyx6"}],"identifier":"dry-dont-repeat-yourself","label":"DRY: Don’t Repeat Yourself","html_id":"dry-dont-repeat-yourself","implicit":true,"key":"qW5mlcuAxu"},{"type":"paragraph","position":{"start":{"line":103,"column":1},"end":{"line":103,"column":1}},"children":[{"type":"text","value":"Every duplicated piece of code is a bug waiting to happen:","position":{"start":{"line":103,"column":1},"end":{"line":103,"column":1}},"key":"WtFETeKj5i"}],"key":"Evbki02wP6"}],"key":"X4rwuUWEtq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# ❌ BAD: Repeated code\nmag1 = 5.2\nflux1 = 100 * 10**(-0.4 * mag1)  # Pogson's formula\nprint(f\"Magnitude {mag1} → Flux {flux1:.2f}\")\n\nmag2 = 3.7\nflux2 = 100 * 10**(-0.4 * mag2)  # Same formula, repeated\nprint(f\"Magnitude {mag2} → Flux {flux2:.2f}\")\n\nmag3 = 6.1\nflux3 = 100 * 10**(-0.4 * mag3)  # And again...\nprint(f\"Magnitude {mag3} → Flux {flux3:.2f}\")\n\nprint(\"\\n\" + \"=\"*40 + \"\\n\")\n\n# ✅ GOOD: Function eliminates repetition\ndef magnitude_to_flux(magnitude, zero_point_flux=100):\n    \"\"\"Convert astronomical magnitude to flux using Pogson's formula.\"\"\"\n    return zero_point_flux * 10**(-0.4 * magnitude)\n\n# Now if we need to change the formula, we change it in ONE place\nfor mag in [5.2, 3.7, 6.1]:\n    flux = magnitude_to_flux(mag)\n    print(f\"Magnitude {mag} → Flux {flux:.2f}\")","key":"y6gs65g43T"},{"type":"output","id":"Fiw5QqfoEsYA0UJ9q8WXA","data":[],"key":"HuiqrC8Lh4"}],"key":"TuPVP4GEt4"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"key":"Da0PcQcqBm"},{"type":"heading","depth":2,"position":{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},"children":[{"type":"text","value":"Function Fundamentals","position":{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},"key":"C0yFl3v6AS"}],"identifier":"function-fundamentals","label":"Function Fundamentals","html_id":"function-fundamentals","implicit":true,"key":"blGc1Ci6Lm"},{"type":"heading","depth":3,"position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"children":[{"type":"text","value":"Basic Syntax and Return","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"hmuA8oOgXS"}],"identifier":"basic-syntax-and-return","label":"Basic Syntax and Return","html_id":"basic-syntax-and-return","implicit":true,"key":"piSVUNlqag"}],"key":"bV2tscJ5mH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def kinetic_energy(mass, velocity):\n    \"\"\"\n    Calculate kinetic energy.\n    \n    Parameters\n    ----------\n    mass : float\n        Mass in kg\n    velocity : float\n        Velocity in m/s\n        \n    Returns\n    -------\n    float\n        Kinetic energy in Joules\n    \"\"\"\n    return 0.5 * mass * velocity**2\n\n# Multiple return values\ndef orbital_parameters(semi_major_axis_au, eccentricity):\n    \"\"\"Calculate perihelion and aphelion distances.\"\"\"\n    perihelion = semi_major_axis_au * (1 - eccentricity)\n    aphelion = semi_major_axis_au * (1 + eccentricity)\n    return perihelion, aphelion  # Returns a tuple\n\n# Using the functions\nenergy = kinetic_energy(1000, 7900)  # 1000kg at orbital velocity\nprint(f\"Kinetic energy: {energy:.2e} J\")\n\nperi, aph = orbital_parameters(1.0, 0.0167)  # Earth's orbit\nprint(f\"Earth: Perihelion = {peri:.3f} AU, Aphelion = {aph:.3f} AU\")","key":"cDCtCRFCZx"},{"type":"output","id":"3wkEVCvl-s-LeC6k5hSPm","data":[],"key":"eqS25n1hqM"}],"key":"yzveAdfZKU"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":172,"column":1},"end":{"line":172,"column":1}},"children":[{"type":"text","value":"Parameters vs Arguments","position":{"start":{"line":172,"column":1},"end":{"line":172,"column":1}},"key":"Bj8D7iAwxe"}],"identifier":"parameters-vs-arguments","label":"Parameters vs Arguments","html_id":"parameters-vs-arguments","implicit":true,"key":"BeXqyT29KZ"}],"key":"Uv5nvalnlH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Parameters are the variables in the function definition\ndef greet(name, greeting=\"Hello\"):  # 'name' and 'greeting' are parameters\n    return f\"{greeting}, {name}!\"\n\n# Arguments are the actual values passed when calling\nresult = greet(\"Andromeda\", \"Greetings\")  # \"Andromeda\" and \"Greetings\" are arguments\nprint(result)\n\n# This distinction matters when discussing function behavior!","key":"uMVCsO3n1B"},{"type":"output","id":"zJTnFJFqERp2g88lB7kr7","data":[],"key":"asA73HiKEe"}],"key":"bM46eHA2Fi"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":186,"column":1},"end":{"line":186,"column":1}},"children":[{"type":"text","value":"The None Return","position":{"start":{"line":186,"column":1},"end":{"line":186,"column":1}},"key":"anVuX1NtHC"}],"identifier":"the-none-return","label":"The None Return","html_id":"the-none-return","implicit":true,"key":"AxvMKt1Hhh"},{"type":"paragraph","position":{"start":{"line":188,"column":1},"end":{"line":188,"column":1}},"children":[{"type":"text","value":"Functions always return something, even if you don’t specify:","position":{"start":{"line":188,"column":1},"end":{"line":188,"column":1}},"key":"qGqltVJvAU"}],"key":"guOzNRsRn3"}],"key":"xpVfD8U67Q"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def print_only(message):\n    \"\"\"This function doesn't explicitly return anything.\"\"\"\n    print(f\"Message: {message}\")\n    # Implicit: return None\n\nresult = print_only(\"Testing\")\nprint(f\"Return value: {result}\")\nprint(f\"Type: {type(result)}\")\n\n# Explicit None return for early exit\ndef safe_divide(a, b):\n    \"\"\"Divide with safety check.\"\"\"\n    if b == 0:\n        return None  # Explicit None for error case\n    return a / b\n\nprint(f\"10/2 = {safe_divide(10, 2)}\")\nprint(f\"10/0 = {safe_divide(10, 0)}\")","key":"scCFhan2iQ"},{"type":"output","id":"y7as8wF2bqzVq2aIHkU07","data":[],"key":"Gz2YK6yr1C"}],"key":"FOnGHawOcg"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":211,"column":1},"end":{"line":211,"column":1}},"key":"j8NfzJG5VZ"},{"type":"heading","depth":2,"position":{"start":{"line":213,"column":1},"end":{"line":213,"column":1}},"children":[{"type":"text","value":"Function Arguments: The Full Story","position":{"start":{"line":213,"column":1},"end":{"line":213,"column":1}},"key":"Bat9C5lZ6M"}],"identifier":"function-arguments-the-full-story","label":"Function Arguments: The Full Story","html_id":"function-arguments-the-full-story","implicit":true,"key":"ObkRX9ngWx"},{"type":"heading","depth":3,"position":{"start":{"line":215,"column":1},"end":{"line":215,"column":1}},"children":[{"type":"text","value":"Positional Arguments","position":{"start":{"line":215,"column":1},"end":{"line":215,"column":1}},"key":"BM0bzT5fYu"}],"identifier":"positional-arguments","label":"Positional Arguments","html_id":"positional-arguments","implicit":true,"key":"DN8jLxUegG"},{"type":"paragraph","position":{"start":{"line":217,"column":1},"end":{"line":217,"column":1}},"children":[{"type":"text","value":"Order matters for positional arguments:","position":{"start":{"line":217,"column":1},"end":{"line":217,"column":1}},"key":"GTeRy1a4OH"}],"key":"rYCChe4PTj"}],"key":"sXATtZ1inV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def calculate_redshift(observed_wavelength, rest_wavelength):\n    \"\"\"Calculate redshift z from wavelengths.\"\"\"\n    return (observed_wavelength - rest_wavelength) / rest_wavelength\n\n# Order matters!\nz1 = calculate_redshift(656.3, 486.1)  # Wrong order\nz2 = calculate_redshift(486.1, 656.3)  # Also wrong\nz_correct = calculate_redshift(750.0, 656.3)  # Correct: observed, then rest\n\nprint(f\"Wrong: z = {z1:.3f}\")\nprint(f\"Also wrong: z = {z2:.3f}\")\nprint(f\"Correct (H-alpha redshifted): z = {z_correct:.3f}\")","key":"C2pyWtx6uR"},{"type":"output","id":"TTA0_8SDcF3SIjOZA-ny_","data":[],"key":"wO8XLUloPG"}],"key":"JIoF8KuEYG"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":234,"column":1},"end":{"line":234,"column":1}},"children":[{"type":"text","value":"Default Arguments and Their Dangers","position":{"start":{"line":234,"column":1},"end":{"line":234,"column":1}},"key":"p2ixfPDbJX"}],"identifier":"default-arguments-and-their-dangers","label":"Default Arguments and Their Dangers","html_id":"default-arguments-and-their-dangers","implicit":true,"key":"vEHOat8GG9"},{"type":"paragraph","position":{"start":{"line":236,"column":1},"end":{"line":236,"column":1}},"children":[{"type":"text","value":"Default arguments are evaluated ONCE when the function is defined:","position":{"start":{"line":236,"column":1},"end":{"line":236,"column":1}},"key":"WX34WSb3yN"}],"key":"ZZYeof7KPm"}],"key":"R6U0NgdzMZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# ⚠️ DANGER: Mutable default argument\ndef add_observation_bad(obs, obs_list=[]):  # DON'T DO THIS!\n    obs_list.append(obs)\n    return obs_list\n\n# Watch what happens:\nlist1 = add_observation_bad(\"Galaxy A\")\nlist2 = add_observation_bad(\"Galaxy B\")  # Where did Galaxy A come from?!\nprint(f\"list1: {list1}\")\nprint(f\"list2: {list2}\")\nprint(f\"Same object? {list1 is list2}\")  # They're the same list!\n\nprint(\"\\n\" + \"=\"*40 + \"\\n\")\n\n# ✅ CORRECT: Use None as default for mutable objects\ndef add_observation_good(obs, obs_list=None):\n    if obs_list is None:\n        obs_list = []  # Create new list each time\n    obs_list.append(obs)\n    return obs_list\n\n# Now it works correctly:\nlist3 = add_observation_good(\"Galaxy C\")\nlist4 = add_observation_good(\"Galaxy D\")\nprint(f\"list3: {list3}\")\nprint(f\"list4: {list4}\")\nprint(f\"Same object? {list3 is list4}\")  # Different lists!","key":"ekBDdEO88D"},{"type":"output","id":"iiYT5chP5Lml0llbomis0","data":[],"key":"VaWz96PwGs"}],"key":"UnfnPfliUC"},{"type":"block","children":[{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"The Mutable Default Trap","position":{"start":{"line":268,"column":1},"end":{"line":268,"column":1}},"key":"MOAc2vb4YY"}],"key":"VMo7JHB863"},{"type":"paragraph","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"children":[{"type":"text","value":"This is one of Python’s most common gotchas!","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"DFlKwRNaSa"}],"key":"PBYB2TYNcf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":270,"column":1},"end":{"line":272,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":270,"column":1},"end":{"line":270,"column":1}},"children":[{"type":"text","value":"Default values are evaluated ONCE when the function is defined","position":{"start":{"line":270,"column":1},"end":{"line":270,"column":1}},"key":"T8IyQM4Fty"}],"key":"oBg3Y3KAii"},{"type":"listItem","spread":true,"position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"children":[{"type":"text","value":"Lists, dicts, and sets are mutable and will be shared across calls","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"key":"cdesViuHXf"}],"key":"FAhcwLcHBM"},{"type":"listItem","spread":true,"position":{"start":{"line":272,"column":1},"end":{"line":272,"column":1}},"children":[{"type":"text","value":"Always use ","position":{"start":{"line":272,"column":1},"end":{"line":272,"column":1}},"key":"qsUgqJMwpy"},{"type":"inlineCode","value":"None","position":{"start":{"line":272,"column":1},"end":{"line":272,"column":1}},"key":"tayhhVE5Kk"},{"type":"text","value":" as default for mutable objects","position":{"start":{"line":272,"column":1},"end":{"line":272,"column":1}},"key":"T7RDm05ntQ"}],"key":"tzRW13WtfS"}],"key":"g1v0XF3hss"}],"key":"ss8padysUQ"},{"type":"heading","depth":3,"position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"children":[{"type":"text","value":"Keyword Arguments","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"QwdLiYWf2m"}],"identifier":"keyword-arguments","label":"Keyword Arguments","html_id":"keyword-arguments","implicit":true,"key":"bT9rDJD5DS"},{"type":"paragraph","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"children":[{"type":"text","value":"Use names for clarity and flexibility:","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"key":"zSbaGgUtTQ"}],"key":"EJKX9ADad2"}],"key":"W0yYbwPh0d"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def simulate_orbit(\n    mass1, mass2,  # Positional arguments\n    eccentricity=0,  # Keyword arguments with defaults\n    inclination=0,\n    time_steps=1000,\n    integrator=\"verlet\"\n):\n    \"\"\"Simulate a two-body orbit.\"\"\"\n    print(f\"Simulating: M1={mass1}, M2={mass2}\")\n    print(f\"  e={eccentricity}, i={inclination}°\")\n    print(f\"  {time_steps} steps using {integrator}\")\n    return f\"Orbit data for {time_steps} steps\"\n\n# Can use positional and keyword arguments\nresult1 = simulate_orbit(1.0, 0.5)  # Just positional\nresult2 = simulate_orbit(1.0, 0.5, eccentricity=0.3)  # Mix\nresult3 = simulate_orbit(1.0, 0.5, time_steps=5000, eccentricity=0.1)  # Any order for keywords!","key":"jsMV2rgC44"},{"type":"output","id":"7SUSD9ncG2NNvosl-evVn","data":[],"key":"WvcT1iskKZ"}],"key":"Ly5M6F933V"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"children":[{"type":"text","value":"*args: Variable Positional Arguments","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"key":"TfhQVefBFJ"}],"identifier":"id-args-variable-positional-arguments","label":"*args: Variable Positional Arguments","html_id":"id-args-variable-positional-arguments","implicit":true,"key":"zbVbQzh3Cl"},{"type":"paragraph","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"children":[{"type":"text","value":"Accept any number of positional arguments:","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"key":"D4Uv0W55x3"}],"key":"YFQIqqEF7o"}],"key":"KKbc6IoZ44"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def total_luminosity(*star_luminosities):\n    \"\"\"\n    Calculate total luminosity of multiple stars.\n    \n    Parameters\n    ----------\n    *star_luminosities : float\n        Variable number of luminosity values (solar units)\n    \"\"\"\n    print(f\"Received {len(star_luminosities)} stars\")\n    print(f\"Type of args: {type(star_luminosities)}\")  # It's a tuple!\n    \n    total = sum(star_luminosities)\n    return total\n\n# Can call with any number of arguments\nprint(f\"Single star: {total_luminosity(1.0)} L☉\")\nprint(f\"Binary: {total_luminosity(1.0, 0.5)} L☉\")\nprint(f\"Cluster: {total_luminosity(1.0, 0.5, 2.3, 0.1, 3.5)} L☉\")\n\n# Can also unpack a list with *\ncluster = [1.0, 0.5, 2.3, 0.1, 3.5]\nprint(f\"From list: {total_luminosity(*cluster)} L☉\")  # Note the *","key":"l7DKbvikYL"},{"type":"output","id":"rLie9oSTpzongwfzGTBmq","data":[],"key":"wEAmPXjZR9"}],"key":"DHWp4uMVL8"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":329,"column":1},"end":{"line":329,"column":1}},"children":[{"type":"text","value":"**kwargs: Variable Keyword Arguments","position":{"start":{"line":329,"column":1},"end":{"line":329,"column":1}},"key":"jusCvDthf0"}],"identifier":"id-kwargs-variable-keyword-arguments","label":"**kwargs: Variable Keyword Arguments","html_id":"id-kwargs-variable-keyword-arguments","implicit":true,"key":"EneYy00I28"},{"type":"paragraph","position":{"start":{"line":331,"column":1},"end":{"line":331,"column":1}},"children":[{"type":"text","value":"Accept any number of keyword arguments:","position":{"start":{"line":331,"column":1},"end":{"line":331,"column":1}},"key":"Rm2yvFVDUG"}],"key":"KmR4v1xHSZ"}],"key":"gEQNmrbepQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def create_star_catalog(**star_properties):\n    \"\"\"\n    Create a star catalog with arbitrary properties.\n    \n    Parameters\n    ----------\n    **star_properties : various\n        Arbitrary keyword arguments for star properties\n    \"\"\"\n    print(f\"Type of kwargs: {type(star_properties)}\")  # It's a dict!\n    \n    catalog = \"Star Catalog:\\n\"\n    for property_name, value in star_properties.items():\n        catalog += f\"  {property_name}: {value}\\n\"\n    \n    return catalog\n\n# Can pass any keyword arguments\nprint(create_star_catalog(\n    name=\"Sirius A\",\n    spectral_type=\"A1V\",\n    magnitude=-1.46,\n    distance_pc=2.64\n))\n\n# Can also unpack a dictionary with **\nvega_data = {\n    'name': 'Vega',\n    'spectral_type': 'A0V',\n    'magnitude': 0.03,\n    'distance_pc': 7.68,\n    'rotation_km_s': 236\n}\nprint(create_star_catalog(**vega_data))  # Note the **","key":"I3vs5qggEo"},{"type":"output","id":"ZOhq4udYTGIqk5Pc1YCVl","data":[],"key":"UPEEk8MQZt"}],"key":"e1RtJxqoOH"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":370,"column":1},"end":{"line":370,"column":1}},"children":[{"type":"text","value":"The Complete Order","position":{"start":{"line":370,"column":1},"end":{"line":370,"column":1}},"key":"ljkLimjkyl"}],"identifier":"the-complete-order","label":"The Complete Order","html_id":"the-complete-order","implicit":true,"key":"CdrB147ZAj"},{"type":"paragraph","position":{"start":{"line":372,"column":1},"end":{"line":372,"column":1}},"children":[{"type":"text","value":"When combining all argument types, they must appear in this order:","position":{"start":{"line":372,"column":1},"end":{"line":372,"column":1}},"key":"SdkSbN016g"}],"key":"HPLylqdRNf"}],"key":"bxuVGkG24e"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def ultimate_function(\n    pos1, pos2,           # Regular positional arguments\n    *args,                # Variable positional arguments\n    kwonly1, kwonly2=10,  # Keyword-only arguments (after *args)\n    **kwargs              # Variable keyword arguments\n):\n    \"\"\"Demonstrates the complete argument order.\"\"\"\n    print(f\"Positional: {pos1}, {pos2}\")\n    print(f\"*args: {args}\")\n    print(f\"Keyword-only: {kwonly1}, {kwonly2}\")\n    print(f\"**kwargs: {kwargs}\")\n\n# Must provide keyword-only arguments by name\nultimate_function(\n    1, 2,                    # Positional\n    3, 4, 5,                 # Extra positional (*args)\n    kwonly1=\"required\",      # Keyword-only (required)\n    kwonly2=\"optional\",      # Keyword-only (has default)\n    extra1=\"bonus\",          # Extra keywords (**kwargs)\n    extra2=\"more\"\n)\n\n# Force keyword-only without *args using bare *\ndef keyword_only_example(*, name, value=0):\n    \"\"\"After *, all arguments must be passed by name.\"\"\"\n    return f\"{name} = {value}\"\n\n# keyword_only_example(\"test\", 5)  # ERROR: won't work\nprint(keyword_only_example(name=\"test\", value=5))  # Must use names","key":"sTbYo2UWUi"},{"type":"output","id":"rhy-qyc5GtBS1dnk8LQlb","data":[],"key":"JbwOvpKqQC"}],"key":"qv1qpawboV"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":406,"column":1},"end":{"line":406,"column":1}},"key":"rlgdjtLeKy"},{"type":"heading","depth":2,"position":{"start":{"line":408,"column":1},"end":{"line":408,"column":1}},"children":[{"type":"text","value":"Scope and Namespaces","position":{"start":{"line":408,"column":1},"end":{"line":408,"column":1}},"key":"UYOFlO4wWI"}],"identifier":"scope-and-namespaces","label":"Scope and Namespaces","html_id":"scope-and-namespaces","implicit":true,"key":"umoCxssdUX"},{"type":"heading","depth":3,"position":{"start":{"line":410,"column":1},"end":{"line":410,"column":1}},"children":[{"type":"text","value":"The LEGB Rule","position":{"start":{"line":410,"column":1},"end":{"line":410,"column":1}},"key":"UprLjYgG8p"}],"identifier":"the-legb-rule","label":"The LEGB Rule","html_id":"the-legb-rule","implicit":true,"key":"FTgykyz4hK"},{"type":"paragraph","position":{"start":{"line":412,"column":1},"end":{"line":412,"column":1}},"children":[{"type":"text","value":"Python searches for variables in this order: Local → Enclosing → Global → Built-in","position":{"start":{"line":412,"column":1},"end":{"line":412,"column":1}},"key":"USYy2iMIV2"}],"key":"jxzzxYxzs8"}],"key":"FdYAYtWSNb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Global scope\ngalaxy_name = \"Milky Way\"  # Global variable\n\ndef outer_function():\n    # Enclosing scope\n    star_count = 400_000_000_000  # Enclosing for inner_function\n    \n    def inner_function():\n        # Local scope\n        planet_count = 8  # Local variable\n        \n        # LEGB in action\n        print(f\"Local: {planet_count} planets\")\n        print(f\"Enclosing: {star_count} stars\")\n        print(f\"Global: In the {galaxy_name}\")\n        print(f\"Built-in: sum function is {sum}\")\n        \n    inner_function()\n\nouter_function()\n\n# Shadowing: Local variables can hide outer ones\ndef shadow_example():\n    galaxy_name = \"Andromeda\"  # Shadows global galaxy_name\n    print(f\"Inside function: {galaxy_name}\")\n\nshadow_example()\nprint(f\"Outside function: {galaxy_name}\")  # Global unchanged","key":"VUn2prDMUk"},{"type":"output","id":"ZIdLJdUkIQUsu31gOVW6b","data":[],"key":"ekqZxfpLI8"}],"key":"NciiuvbvG3"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":445,"column":1},"end":{"line":445,"column":1}},"children":[{"type":"text","value":"Global Variables: Handle with Care","position":{"start":{"line":445,"column":1},"end":{"line":445,"column":1}},"key":"AVXiwsNAJS"}],"identifier":"global-variables-handle-with-care","label":"Global Variables: Handle with Care","html_id":"global-variables-handle-with-care","implicit":true,"key":"dmOZo2I2xQ"}],"key":"MdSpemxPyg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Global variable (generally avoid these!)\nobservation_count = 0\n\ndef add_observation_global():\n    global observation_count  # Declare we're modifying global\n    observation_count += 1\n    return observation_count\n\n# Modifying global state (usually bad practice)\nprint(f\"Initial count: {observation_count}\")\nadd_observation_global()\nadd_observation_global()\nprint(f\"After two calls: {observation_count}\")\n\n# Better approach: Pass and return state\ndef add_observation_pure(count):\n    \"\"\"Pure function - no side effects.\"\"\"\n    return count + 1\n\n# Much cleaner and testable\ncount = 0\ncount = add_observation_pure(count)\ncount = add_observation_pure(count)\nprint(f\"Pure function result: {count}\")","key":"z7Rchj6Lzs"},{"type":"output","id":"SpQEfyeq00-1H7sjBXi9c","data":[],"key":"Y4abekDLG2"}],"key":"sYRJjb4zrz"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Why Avoid Global Variables?","position":{"start":{"line":474,"column":1},"end":{"line":474,"column":1}},"key":"BXnF8ZbVRS"}],"key":"Zw4lfHKMMR"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":476,"column":1},"end":{"line":480,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":476,"column":1},"end":{"line":476,"column":1}},"children":[{"type":"text","value":"Makes code hard to test (tests affect each other)","position":{"start":{"line":476,"column":1},"end":{"line":476,"column":1}},"key":"j0vhaorTP0"}],"key":"lfNaewU6MD"},{"type":"listItem","spread":true,"position":{"start":{"line":477,"column":1},"end":{"line":477,"column":1}},"children":[{"type":"text","value":"Creates hidden dependencies","position":{"start":{"line":477,"column":1},"end":{"line":477,"column":1}},"key":"HUas4DiKyf"}],"key":"KPHQXMl8y3"},{"type":"listItem","spread":true,"position":{"start":{"line":478,"column":1},"end":{"line":478,"column":1}},"children":[{"type":"text","value":"Concurrent code becomes dangerous","position":{"start":{"line":478,"column":1},"end":{"line":478,"column":1}},"key":"DqsQdES6tb"}],"key":"PLlNN3COfm"},{"type":"listItem","spread":true,"position":{"start":{"line":479,"column":1},"end":{"line":480,"column":1}},"children":[{"type":"text","value":"Debugging becomes difficult","position":{"start":{"line":479,"column":1},"end":{"line":479,"column":1}},"key":"NQD9zFjG88"}],"key":"PwUeXMxmkA"}],"key":"KF0veOYbbW"},{"type":"paragraph","position":{"start":{"line":481,"column":1},"end":{"line":481,"column":1}},"children":[{"type":"strong","position":{"start":{"line":481,"column":1},"end":{"line":481,"column":1}},"children":[{"type":"text","value":"Better alternatives:","position":{"start":{"line":481,"column":1},"end":{"line":481,"column":1}},"key":"MdCFGqksAh"}],"key":"ubCvxRPhEJ"}],"key":"cfjK9RYB6g"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":482,"column":1},"end":{"line":484,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":482,"column":1},"end":{"line":482,"column":1}},"children":[{"type":"text","value":"Pass parameters explicitly","position":{"start":{"line":482,"column":1},"end":{"line":482,"column":1}},"key":"mNWjjG48tC"}],"key":"XQlkDdffgf"},{"type":"listItem","spread":true,"position":{"start":{"line":483,"column":1},"end":{"line":483,"column":1}},"children":[{"type":"text","value":"Use classes to encapsulate state","position":{"start":{"line":483,"column":1},"end":{"line":483,"column":1}},"key":"zcPlCo8kHi"}],"key":"IcUhXM0lpc"},{"type":"listItem","spread":true,"position":{"start":{"line":484,"column":1},"end":{"line":484,"column":1}},"children":[{"type":"text","value":"Return updated values","position":{"start":{"line":484,"column":1},"end":{"line":484,"column":1}},"key":"oVbGYas8cH"}],"key":"Z6AHWiy0aH"}],"key":"bOQFLiLq40"}],"class":"warning","key":"w1YO8T7wba"},{"type":"heading","depth":3,"position":{"start":{"line":487,"column":1},"end":{"line":487,"column":1}},"children":[{"type":"text","value":"Nonlocal: Nested Function Scopes","position":{"start":{"line":487,"column":1},"end":{"line":487,"column":1}},"key":"SBIGXYgALm"}],"identifier":"nonlocal-nested-function-scopes","label":"Nonlocal: Nested Function Scopes","html_id":"nonlocal-nested-function-scopes","implicit":true,"key":"t99oDejzFm"}],"key":"raXHXm2H8R"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def make_counter():\n    \"\"\"Create a closure that counts calls.\"\"\"\n    count = 0\n    \n    def increment():\n        nonlocal count  # Modify enclosing scope variable\n        count += 1\n        return count\n    \n    return increment\n\n# Create independent counters\ncounter1 = make_counter()\ncounter2 = make_counter()\n\nprint(f\"Counter1: {counter1()}, {counter1()}, {counter1()}\")\nprint(f\"Counter2: {counter2()}, {counter2()}\")  # Independent!","key":"zihiirbN80"},{"type":"output","id":"TJd08m_HFppC4KaRWPiJQ","data":[],"key":"N9tw3QsgrN"}],"key":"sihHH0PXAD"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":509,"column":1},"end":{"line":509,"column":1}},"key":"Q9k24OK1jH"},{"type":"heading","depth":2,"position":{"start":{"line":511,"column":1},"end":{"line":511,"column":1}},"children":[{"type":"text","value":"Functions as First-Class Objects","position":{"start":{"line":511,"column":1},"end":{"line":511,"column":1}},"key":"bIwcyvBxn5"}],"identifier":"functions-as-first-class-objects","label":"Functions as First-Class Objects","html_id":"functions-as-first-class-objects","implicit":true,"key":"PTtkyZ4ZBz"},{"type":"paragraph","position":{"start":{"line":513,"column":1},"end":{"line":513,"column":1}},"children":[{"type":"text","value":"In Python, functions are objects like any other - you can pass them, return them, and store them:","position":{"start":{"line":513,"column":1},"end":{"line":513,"column":1}},"key":"EpaOQBfmSA"}],"key":"oknDpbu1NN"},{"type":"heading","depth":3,"position":{"start":{"line":515,"column":1},"end":{"line":515,"column":1}},"children":[{"type":"text","value":"Functions as Arguments","position":{"start":{"line":515,"column":1},"end":{"line":515,"column":1}},"key":"hTIUqgFAtk"}],"identifier":"functions-as-arguments","label":"Functions as Arguments","html_id":"functions-as-arguments","implicit":true,"key":"PG22OeAm9M"}],"key":"pkIjCJDAUD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import math\n\ndef apply_to_list(data, function):\n    \"\"\"Apply a function to each element in a list.\"\"\"\n    return [function(x) for x in data]\n\n# Different functions to apply\nmagnitudes = [1.5, 2.3, 0.8, 3.1]\n\n# Pass different functions\nfluxes = apply_to_list(magnitudes, lambda m: 10**(-0.4 * m))\nlogs = apply_to_list(magnitudes, math.log10)\nsquares = apply_to_list(magnitudes, lambda x: x**2)\n\nprint(f\"Magnitudes: {magnitudes}\")\nprint(f\"To fluxes: {[f'{f:.3f}' for f in fluxes]}\")\nprint(f\"Logarithms: {[f'{l:.3f}' for l in logs]}\")\nprint(f\"Squares: {[f'{s:.3f}' for s in squares]}\")\n\n# Real example: Numerical integration with different functions\ndef integrate(func, a, b, n=1000):\n    \"\"\"Simple numerical integration using rectangles.\"\"\"\n    dx = (b - a) / n\n    total = 0\n    for i in range(n):\n        x = a + i * dx\n        total += func(x) * dx\n    return total\n\n# Integrate different functions\nresult1 = integrate(math.sin, 0, math.pi)  # ∫sin(x) from 0 to π\nresult2 = integrate(lambda x: x**2, 0, 1)  # ∫x² from 0 to 1\n\nprint(f\"\\n∫sin(x) from 0 to π = {result1:.4f} (expected: 2)\")\nprint(f\"∫x² from 0 to 1 = {result2:.4f} (expected: 0.333...)\")","key":"czoV6IRHr5"},{"type":"output","id":"f7qEbsxYd1WNGjVwa2MrG","data":[],"key":"R0L4jRSRYu"}],"key":"VKw91llQds"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":555,"column":1},"end":{"line":555,"column":1}},"children":[{"type":"text","value":"Functions Returning Functions","position":{"start":{"line":555,"column":1},"end":{"line":555,"column":1}},"key":"sHLfIp9suX"}],"identifier":"functions-returning-functions","label":"Functions Returning Functions","html_id":"functions-returning-functions","implicit":true,"key":"U6xKnTR4XS"}],"key":"hIdac5LDVz"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def make_magnitude_converter(zero_point_flux):\n    \"\"\"\n    Create a magnitude-to-flux converter for a specific zero point.\n    \n    This is a 'function factory' - it returns customized functions.\n    \"\"\"\n    def converter(magnitude):\n        return zero_point_flux * 10**(-0.4 * magnitude)\n    \n    # Return the inner function\n    return converter\n\n# Create converters for different photometric systems\nvega_converter = make_magnitude_converter(3.631e-20)  # Vega system\nab_converter = make_magnitude_converter(3.631e-23)    # AB system\n\nmag = 20.0\nprint(f\"Magnitude {mag}:\")\nprint(f\"  Vega system: {vega_converter(mag):.3e} W/m²/Hz\")\nprint(f\"  AB system: {ab_converter(mag):.3e} W/m²/Hz\")\n\n# Another example: Creating custom filters\ndef make_filter(lower, upper):\n    \"\"\"Create a filter function for a wavelength range.\"\"\"\n    def filter_func(wavelength):\n        return lower <= wavelength <= upper\n    \n    filter_func.__name__ = f\"filter_{lower}_{upper}\"\n    return filter_func\n\n# Create filters for different bands\nu_band = make_filter(300, 400)  # U band in nm\ng_band = make_filter(400, 550)  # G band in nm\n\nwavelength = 450\nprint(f\"\\nWavelength {wavelength}nm:\")\nprint(f\"  In U band? {u_band(wavelength)}\")\nprint(f\"  In G band? {g_band(wavelength)}\")","key":"RSlkGUT84E"},{"type":"output","id":"o2LLHfB62YJ7VrCwxdhNe","data":[],"key":"BDa9PGypAK"}],"key":"Da36EcMihp"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":598,"column":1},"end":{"line":598,"column":1}},"children":[{"type":"text","value":"Lambda Functions","position":{"start":{"line":598,"column":1},"end":{"line":598,"column":1}},"key":"jdNPNuBV1h"}],"identifier":"lambda-functions","label":"Lambda Functions","html_id":"lambda-functions","implicit":true,"key":"eGvr3YQVDt"},{"type":"paragraph","position":{"start":{"line":600,"column":1},"end":{"line":600,"column":1}},"children":[{"type":"text","value":"Anonymous functions for simple operations:","position":{"start":{"line":600,"column":1},"end":{"line":600,"column":1}},"key":"fsQQbyCTSd"}],"key":"F6yGD6UxP9"}],"key":"dj6qszKQzr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Lambda syntax: lambda arguments: expression\n\n# Regular function\ndef square(x):\n    return x**2\n\n# Equivalent lambda\nsquare_lambda = lambda x: x**2\n\nprint(f\"Regular: {square(5)}\")\nprint(f\"Lambda: {square_lambda(5)}\")\n\n# Lambdas shine in functional programming\ndata = [\n    {'name': 'Sirius', 'mag': -1.46},\n    {'name': 'Canopus', 'mag': -0.74},\n    {'name': 'Arcturus', 'mag': -0.05},\n    {'name': 'Vega', 'mag': 0.03}\n]\n\n# Sort by magnitude\ndata_sorted = sorted(data, key=lambda star: star['mag'])\nprint(\"\\nStars by brightness:\")\nfor star in data_sorted:\n    print(f\"  {star['name']}: {star['mag']}\")\n\n# Filter bright stars\nbright = filter(lambda s: s['mag'] < 0, data)\nprint(\"\\nBright stars (mag < 0):\")\nfor star in bright:\n    print(f\"  {star['name']}\")","key":"ivW6wkdBrr"},{"type":"output","id":"mgWsCkDv68wgGSNdRLzlT","data":[],"key":"OAwEjDoPeP"}],"key":"MWmqKcokBY"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":636,"column":1},"end":{"line":636,"column":1}},"children":[{"type":"text","value":"Decorators: Function Transformers","position":{"start":{"line":636,"column":1},"end":{"line":636,"column":1}},"key":"CJB0foNNhj"}],"identifier":"decorators-function-transformers","label":"Decorators: Function Transformers","html_id":"decorators-function-transformers","implicit":true,"key":"aui7ma9uLx"},{"type":"paragraph","position":{"start":{"line":638,"column":1},"end":{"line":638,"column":1}},"children":[{"type":"text","value":"Decorators modify or enhance functions:","position":{"start":{"line":638,"column":1},"end":{"line":638,"column":1}},"key":"eMD5n0qgCv"}],"key":"L3TpsISBJR"}],"key":"qrjF9LLqmG"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import time\nimport functools\n\n# Simple decorator to time function execution\ndef timer(func):\n    \"\"\"Decorator to measure function execution time.\"\"\"\n    @functools.wraps(func)  # Preserves function metadata\n    def wrapper(*args, **kwargs):\n        start = time.perf_counter()\n        result = func(*args, **kwargs)\n        end = time.perf_counter()\n        print(f\"{func.__name__} took {end-start:.6f} seconds\")\n        return result\n    return wrapper\n\n# Apply decorator with @\n@timer\ndef slow_calculation(n):\n    \"\"\"Simulate a slow calculation.\"\"\"\n    total = 0\n    for i in range(n):\n        total += i**2\n    return total\n\nresult = slow_calculation(1000000)\nprint(f\"Result: {result}\")\n\n# Decorator with arguments\ndef validate_range(min_val, max_val):\n    \"\"\"Decorator factory that validates input range.\"\"\"\n    def decorator(func):\n        @functools.wraps(func)\n        def wrapper(value):\n            if not min_val <= value <= max_val:\n                raise ValueError(f\"Value {value} outside range [{min_val}, {max_val}]\")\n            return func(value)\n        return wrapper\n    return decorator\n\n@validate_range(0, 1)\ndef calculate_probability(p):\n    \"\"\"Calculate something with probability.\"\"\"\n    return p * (1 - p)\n\nprint(f\"\\nProbability(0.3) = {calculate_probability(0.3):.3f}\")\n# calculate_probability(1.5)  # Would raise ValueError","key":"V1DVdHYqip"},{"type":"output","id":"_K6nv-uCNUHeYo95bXRVg","data":[],"key":"x1v1lGA16Q"}],"key":"P9gbvCFtGl"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":689,"column":1},"end":{"line":689,"column":1}},"key":"Ic0Qe3mgzQ"},{"type":"heading","depth":2,"position":{"start":{"line":691,"column":1},"end":{"line":691,"column":1}},"children":[{"type":"text","value":"Documentation and Type Hints","position":{"start":{"line":691,"column":1},"end":{"line":691,"column":1}},"key":"Lrmhq58jlM"}],"identifier":"documentation-and-type-hints","label":"Documentation and Type Hints","html_id":"documentation-and-type-hints","implicit":true,"key":"FFdLxaRkEY"},{"type":"heading","depth":3,"position":{"start":{"line":693,"column":1},"end":{"line":693,"column":1}},"children":[{"type":"text","value":"Docstrings That Matter","position":{"start":{"line":693,"column":1},"end":{"line":693,"column":1}},"key":"YTb9CFiJIh"}],"identifier":"docstrings-that-matter","label":"Docstrings That Matter","html_id":"docstrings-that-matter","implicit":true,"key":"XaY02dr8nL"}],"key":"MWW6VMBrCW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def calculate_orbital_period(semi_major_axis: float, \n                           total_mass: float) -> float:\n    \"\"\"\n    Calculate orbital period using Kepler's third law.\n    \n    For a two-body system, calculates the orbital period given\n    the semi-major axis and total system mass.\n    \n    Parameters\n    ----------\n    semi_major_axis : float\n        Semi-major axis in AU\n    total_mass : float\n        Total mass of system in solar masses\n    \n    Returns\n    -------\n    float\n        Orbital period in years\n        \n    Notes\n    -----\n    Uses the simplified form of Kepler's third law:\n    P² = a³/M where P is in years, a in AU, M in solar masses\n    \n    Examples\n    --------\n    >>> calculate_orbital_period(1.0, 1.0)  # Earth around Sun\n    1.0\n    >>> calculate_orbital_period(5.2, 1.0)  # Jupiter around Sun\n    11.86\n    \n    References\n    ----------\n    .. [1] Carroll & Ostlie, \"An Introduction to Modern Astrophysics\"\n    \"\"\"\n    return (semi_major_axis**3 / total_mass)**0.5\n\n# Access docstring\nprint(calculate_orbital_period.__doc__)","key":"QT8T8QJgWL"},{"type":"output","id":"0P3uHThkRa70hn_g_WtFi","data":[],"key":"oJ5xof9gna"}],"key":"ncopvGjVzg"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":738,"column":1},"end":{"line":738,"column":1}},"children":[{"type":"text","value":"Type Hints for Clarity","position":{"start":{"line":738,"column":1},"end":{"line":738,"column":1}},"key":"XN2qcOuzFY"}],"identifier":"type-hints-for-clarity","label":"Type Hints for Clarity","html_id":"type-hints-for-clarity","implicit":true,"key":"HewAdl9u67"}],"key":"H7UKWZKpMs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from typing import List, Tuple, Optional, Union, Callable, Dict\n\ndef process_spectrum(\n    wavelengths: List[float],\n    fluxes: List[float],\n    normalize: bool = True,\n    smooth_window: Optional[int] = None\n) -> Tuple[List[float], List[float]]:\n    \"\"\"\n    Process a spectrum with optional normalization and smoothing.\n    \n    Type hints make the expected inputs and outputs clear!\n    \"\"\"\n    # Processing would happen here\n    return wavelengths, fluxes\n\ndef find_spectral_lines(\n    spectrum: Dict[str, List[float]],\n    threshold: float = 3.0,\n    method: Callable[[List[float]], float] = max\n) -> Union[List[float], None]:\n    \"\"\"\n    Find spectral lines in a spectrum.\n    \n    Shows complex type hints including Callable and Union.\n    \"\"\"\n    if not spectrum:\n        return None\n    \n    # Line finding logic here\n    return [656.3, 486.1]  # H-alpha, H-beta\n\n# Type hints help IDEs provide better autocomplete and catch errors!","key":"wTNy2pq2IE"},{"type":"output","id":"0kj3PEKu1IAiNE_7EzQa2","data":[],"key":"FbTD49YNQG"}],"key":"xiz6UL7evI"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":776,"column":1},"end":{"line":776,"column":1}},"key":"MBsLj3cdZh"},{"type":"heading","depth":2,"position":{"start":{"line":778,"column":1},"end":{"line":778,"column":1}},"children":[{"type":"text","value":"Advanced Patterns","position":{"start":{"line":778,"column":1},"end":{"line":778,"column":1}},"key":"uPJmBgzgaO"}],"identifier":"advanced-patterns","label":"Advanced Patterns","html_id":"advanced-patterns","implicit":true,"key":"AcHKDhEm4v"},{"type":"heading","depth":3,"position":{"start":{"line":780,"column":1},"end":{"line":780,"column":1}},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":780,"column":1},"end":{"line":780,"column":1}},"key":"ZwDS80oi8C"}],"identifier":"recursion","label":"Recursion","html_id":"recursion","implicit":true,"key":"torNKdxwYP"},{"type":"paragraph","position":{"start":{"line":782,"column":1},"end":{"line":782,"column":1}},"children":[{"type":"text","value":"Functions calling themselves - elegant but use with care:","position":{"start":{"line":782,"column":1},"end":{"line":782,"column":1}},"key":"r8UF6Ovs2Q"}],"key":"XlgZsXUGJA"}],"key":"L9BuCm4EJO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def factorial(n: int) -> int:\n    \"\"\"Calculate factorial recursively.\"\"\"\n    if n <= 1:  # Base case\n        return 1\n    return n * factorial(n - 1)  # Recursive case\n\nprint(f\"5! = {factorial(5)}\")\n\n# More complex: Binary tree traversal for hierarchical structures\ndef calculate_cluster_mass(cluster):\n    \"\"\"\n    Recursively calculate mass of hierarchical structure.\n    \n    Each cluster can contain stars or sub-clusters.\n    \"\"\"\n    if isinstance(cluster, (int, float)):  # Base case: single star\n        return cluster\n    \n    # Recursive case: sum all components\n    total_mass = 0\n    for component in cluster:\n        total_mass += calculate_cluster_mass(component)\n    return total_mass\n\n# Hierarchical cluster structure\nglobular_cluster = [\n    1.5,  # Single star\n    [0.8, 1.2],  # Binary system\n    [0.5, [0.3, 0.4]],  # Triple system\n    [[0.9, 1.1], [1.3, 0.7]]  # Two binaries\n]\n\ntotal = calculate_cluster_mass(globular_cluster)\nprint(f\"Total cluster mass: {total:.1f} M☉\")","key":"LbtsophsSL"},{"type":"output","id":"R-hY9Ig6VdGrQ9ME2cvGq","data":[],"key":"g3uvqn23Uk"}],"key":"dtn66tRS70"},{"type":"block","children":[{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Recursion Limits","position":{"start":{"line":821,"column":1},"end":{"line":821,"column":1}},"key":"ASf1QxuqcH"}],"key":"vYYzvFguw6"},{"type":"paragraph","position":{"start":{"line":822,"column":1},"end":{"line":822,"column":1}},"children":[{"type":"text","value":"Python has a recursion limit (usually 1000) to prevent stack overflow:","position":{"start":{"line":822,"column":1},"end":{"line":822,"column":1}},"key":"fgiGxy7WW5"}],"key":"wnW2vlmmX9"},{"type":"code","lang":"python","value":"import sys\nprint(sys.getrecursionlimit())  # Usually 1000","position":{"start":{"line":823,"column":1},"end":{"line":825,"column":1}},"key":"vReuKB150e"}],"key":"hVdDs6XM5c"},{"type":"paragraph","position":{"start":{"line":827,"column":1},"end":{"line":827,"column":1}},"children":[{"type":"text","value":"For deep recursion, use iteration or increase the limit carefully.","position":{"start":{"line":827,"column":1},"end":{"line":827,"column":1}},"key":"xDp0hdnUQW"}],"key":"fwqgtUlfA4"},{"type":"code","lang":"","value":"\n### Closures\n\nFunctions that \"remember\" their environment:\n\n```{code-cell} ipython3\ndef make_doppler_calculator(rest_wavelength):\n    \"\"\"\n    Create a Doppler shift calculator for a specific spectral line.\n    \n    This is a closure - the inner function 'remembers' rest_wavelength.\n    \"\"\"\n    def calculate_velocity(observed_wavelength):\n        # This function has access to rest_wavelength from outer scope\n        z = (observed_wavelength - rest_wavelength) / rest_wavelength\n        c = 299792.458  # km/s\n        return z * c\n    \n    # Add some metadata\n    calculate_velocity.rest_wavelength = rest_wavelength\n    calculate_velocity.__name__ = f\"doppler_{rest_wavelength}\"\n    \n    return calculate_velocity\n\n# Create specialized calculators\nh_alpha_doppler = make_doppler_calculator(656.28)  # H-alpha line\nh_beta_doppler = make_doppler_calculator(486.13)   # H-beta line\n\n# Use them\nobserved = 658.0\nprint(f\"Observed wavelength: {observed} nm\")\nprint(f\"H-alpha velocity: {h_alpha_doppler(observed):.1f} km/s\")\nprint(f\"H-beta velocity: {h_beta_doppler(observed):.1f} km/s\")\nprint(f\"H-alpha rest λ: {h_alpha_doppler.rest_wavelength} nm\")","position":{"start":{"line":828,"column":1},"end":{"line":863,"column":1}},"key":"SDbGhYpdUB"},{"type":"heading","depth":3,"position":{"start":{"line":865,"column":1},"end":{"line":865,"column":1}},"children":[{"type":"text","value":"Partial Functions","position":{"start":{"line":865,"column":1},"end":{"line":865,"column":1}},"key":"FqJgJjptj1"}],"identifier":"partial-functions","label":"Partial Functions","html_id":"partial-functions","implicit":true,"key":"jkLzUCUMc7"},{"type":"paragraph","position":{"start":{"line":867,"column":1},"end":{"line":867,"column":1}},"children":[{"type":"text","value":"Pre-fill some arguments of a function:","position":{"start":{"line":867,"column":1},"end":{"line":867,"column":1}},"key":"W71gDvXSSG"}],"key":"Qx4Q58Ft3F"}],"key":"RqWrhkrCMw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from functools import partial\n\ndef planck_law(wavelength, temperature, scale=1e-9):\n    \"\"\"\n    Planck's law for blackbody radiation.\n    \n    Parameters\n    ----------\n    wavelength : float\n        Wavelength in meters\n    temperature : float\n        Temperature in Kelvin\n    scale : float\n        Scale factor for units\n    \"\"\"\n    import math\n    h = 6.626e-34  # Planck constant\n    c = 2.998e8    # Speed of light\n    k = 1.381e-23  # Boltzmann constant\n    \n    numerator = 2 * h * c**2 / wavelength**5\n    denominator = math.exp(h * c / (wavelength * k * temperature)) - 1\n    return scale * numerator / denominator\n\n# Create specialized functions for specific temperatures\nsun_spectrum = partial(planck_law, temperature=5778)  # Sun\nsirius_spectrum = partial(planck_law, temperature=9940)  # Sirius\n\n# Now we can use them easily\nwavelength = 500e-9  # 500 nm (green light)\nprint(f\"At {wavelength*1e9:.0f} nm:\")\nprint(f\"  Sun: {sun_spectrum(wavelength):.2e} W/m²/m\")\nprint(f\"  Sirius: {sirius_spectrum(wavelength):.2e} W/m²/m\")","key":"VhP54BbWmv"},{"type":"output","id":"x952RjB6PkM3OyvlKMk-Z","data":[],"key":"rIZNlD7h6F"}],"key":"G2QNBB5mXL"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":905,"column":1},"end":{"line":905,"column":1}},"key":"qKwM2mMiS2"},{"type":"heading","depth":2,"position":{"start":{"line":907,"column":1},"end":{"line":907,"column":1}},"children":[{"type":"text","value":"Common Pitfalls and Best Practices","position":{"start":{"line":907,"column":1},"end":{"line":907,"column":1}},"key":"ZOXqsOiTTW"}],"identifier":"common-pitfalls-and-best-practices","label":"Common Pitfalls and Best Practices","html_id":"common-pitfalls-and-best-practices","implicit":true,"key":"icXD8p0mpN"}],"key":"XDOsj4mExo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Pitfall 1: Modifying arguments\ndef bad_append(item, lst=[]):  # DON'T: mutable default\n    lst.append(item)\n    return lst\n\ndef good_append(item, lst=None):  # DO: None default\n    if lst is None:\n        lst = []\n    lst.append(item)\n    return lst\n\n# Pitfall 2: Too many parameters\ndef bad_function(a, b, c, d, e, f, g, h):  # Too many!\n    pass\n\ndef good_function(config_dict):  # Group related parameters\n    pass\n\n# Pitfall 3: Side effects in unexpected places\ntotal = 0\ndef bad_accumulator(value):\n    global total  # Hidden side effect!\n    total += value\n    return total\n\ndef good_accumulator(value, running_total):  # Explicit\n    return running_total + value\n\n# Pitfall 4: Functions doing too much\ndef bad_do_everything(data):\n    # Load data\n    # Process data\n    # Analyze data\n    # Plot results\n    # Save output\n    pass  # Too many responsibilities!\n\n# Better: Single responsibility\ndef load_data(filename): pass\ndef process_data(data): pass\ndef analyze_data(processed): pass\ndef plot_results(analysis): pass\ndef save_output(results, filename): pass","key":"dlvcktBxev"},{"type":"output","id":"-jeId_PDToaBri7OECd_g","data":[],"key":"nhsd75O6tD"}],"key":"XtjqAVuq6X"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":955,"column":1},"end":{"line":955,"column":1}},"key":"hh4YBB9MMi"},{"type":"heading","depth":2,"position":{"start":{"line":957,"column":1},"end":{"line":957,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":957,"column":1},"end":{"line":957,"column":1}},"key":"YddeXTWrYC"}],"identifier":"exercises","label":"Exercises","html_id":"exercises","implicit":true,"key":"YE6SCMpdVR"},{"type":"heading","depth":3,"position":{"start":{"line":959,"column":1},"end":{"line":959,"column":1}},"children":[{"type":"text","value":"Exercise 1: Advanced Argument Handling","position":{"start":{"line":959,"column":1},"end":{"line":959,"column":1}},"key":"fYpCxC7DMB"}],"identifier":"exercise-1-advanced-argument-handling","label":"Exercise 1: Advanced Argument Handling","html_id":"exercise-1-advanced-argument-handling","implicit":true,"key":"yslF621bPR"},{"type":"exercise","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Flexible Data Processor","position":{"start":{"line":961,"column":1},"end":{"line":961,"column":1}},"key":"iXzHSnXDKG"}],"key":"ZFcfm45Zqf"},{"type":"paragraph","position":{"start":{"line":962,"column":1},"end":{"line":962,"column":1}},"children":[{"type":"text","value":"Create a function that:","position":{"start":{"line":962,"column":1},"end":{"line":962,"column":1}},"key":"oRxOqImvdt"}],"key":"W9npwydfbM"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":963,"column":1},"end":{"line":967,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":963,"column":1},"end":{"line":963,"column":1}},"children":[{"type":"text","value":"Takes required positional arguments for data and method","position":{"start":{"line":963,"column":1},"end":{"line":963,"column":1}},"key":"Rmcx2jrBeF"}],"key":"jlYaGmEk31"},{"type":"listItem","spread":true,"position":{"start":{"line":964,"column":1},"end":{"line":964,"column":1}},"children":[{"type":"text","value":"Accepts any number of filters as *args","position":{"start":{"line":964,"column":1},"end":{"line":964,"column":1}},"key":"WqrbWhGhHC"}],"key":"xlW2bfEvU8"},{"type":"listItem","spread":true,"position":{"start":{"line":965,"column":1},"end":{"line":965,"column":1}},"children":[{"type":"text","value":"Takes optional keyword arguments for configuration","position":{"start":{"line":965,"column":1},"end":{"line":965,"column":1}},"key":"VefZ9hPUA1"}],"key":"Pb9NPDKMuQ"},{"type":"listItem","spread":true,"position":{"start":{"line":966,"column":1},"end":{"line":967,"column":1}},"children":[{"type":"text","value":"Accepts any additional metadata as **kwargs","position":{"start":{"line":966,"column":1},"end":{"line":966,"column":1}},"key":"hqeP4Gxeqx"}],"key":"Y3BFgF2oIM"}],"key":"eSw7oMEiqv"},{"type":"paragraph","position":{"start":{"line":968,"column":1},"end":{"line":968,"column":1}},"children":[{"type":"text","value":"The function should:","position":{"start":{"line":968,"column":1},"end":{"line":968,"column":1}},"key":"d9KFQ7sZI8"}],"key":"Dq5hngnGov"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":969,"column":1},"end":{"line":972,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":969,"column":1},"end":{"line":969,"column":1}},"children":[{"type":"text","value":"Apply all filters to the data","position":{"start":{"line":969,"column":1},"end":{"line":969,"column":1}},"key":"zs0QPAWcA1"}],"key":"Kx5xgYXcl8"},{"type":"listItem","spread":true,"position":{"start":{"line":970,"column":1},"end":{"line":970,"column":1}},"children":[{"type":"text","value":"Process using the specified method","position":{"start":{"line":970,"column":1},"end":{"line":970,"column":1}},"key":"IgXFVUf98Z"}],"key":"CPsqJ9Jj7X"},{"type":"listItem","spread":true,"position":{"start":{"line":971,"column":1},"end":{"line":972,"column":1}},"children":[{"type":"text","value":"Return results with metadata attached","position":{"start":{"line":971,"column":1},"end":{"line":971,"column":1}},"key":"FFLLL1oMpF"}],"key":"s16pRjNNT8"}],"key":"w09A9GwHs9"},{"type":"paragraph","position":{"start":{"line":973,"column":1},"end":{"line":973,"column":1}},"children":[{"type":"text","value":"Test with astronomical data filtering scenarios.","position":{"start":{"line":973,"column":1},"end":{"line":973,"column":1}},"key":"sAxgBWOeSM"}],"key":"gJN2mJ47SG"}],"enumerated":true,"label":"exercise-O5VwAJIfSS","identifier":"exercise-o5vwajifss","enumerator":"1","html_id":"exercise-o5vwajifss","key":"WwVc4hfZeV"},{"type":"heading","depth":3,"position":{"start":{"line":976,"column":1},"end":{"line":976,"column":1}},"children":[{"type":"text","value":"Exercise 2: Function Factory","position":{"start":{"line":976,"column":1},"end":{"line":976,"column":1}},"key":"Ah9U8mEnjL"}],"identifier":"exercise-2-function-factory","label":"Exercise 2: Function Factory","html_id":"exercise-2-function-factory","implicit":true,"key":"txKFVQ6C5r"},{"type":"exercise","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Custom Integrator Generator","position":{"start":{"line":978,"column":1},"end":{"line":978,"column":1}},"key":"OBqC3frimo"}],"key":"egAwkCz5MD"},{"type":"paragraph","position":{"start":{"line":979,"column":1},"end":{"line":979,"column":1}},"children":[{"type":"text","value":"Write a function that returns customized numerical integrators:","position":{"start":{"line":979,"column":1},"end":{"line":979,"column":1}},"key":"qPr4rze1rr"}],"key":"smM04pC3nF"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":980,"column":1},"end":{"line":983,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":980,"column":1},"end":{"line":980,"column":1}},"children":[{"type":"text","value":"Takes integration method (‘euler’, ‘rk4’, ‘verlet’) as input","position":{"start":{"line":980,"column":1},"end":{"line":980,"column":1}},"key":"Mul3NBTx4z"}],"key":"DFffHkUQE8"},{"type":"listItem","spread":true,"position":{"start":{"line":981,"column":1},"end":{"line":981,"column":1}},"children":[{"type":"text","value":"Returns a function configured for that method","position":{"start":{"line":981,"column":1},"end":{"line":981,"column":1}},"key":"X1OHjrWrJZ"}],"key":"pfIyxDF4c1"},{"type":"listItem","spread":true,"position":{"start":{"line":982,"column":1},"end":{"line":983,"column":1}},"children":[{"type":"text","value":"The returned function should integrate any differential equation","position":{"start":{"line":982,"column":1},"end":{"line":982,"column":1}},"key":"VshpGUwOnf"}],"key":"JzLXny9Gun"}],"key":"tZW54Z8OCd"},{"type":"paragraph","position":{"start":{"line":984,"column":1},"end":{"line":984,"column":1}},"children":[{"type":"text","value":"Example usage:","position":{"start":{"line":984,"column":1},"end":{"line":984,"column":1}},"key":"LyneMLnlUh"}],"key":"cT2kIueUNO"},{"type":"code","lang":"python","value":"euler_integrator = make_integrator('euler')\nresult = euler_integrator(dydt, y0, t_span)","position":{"start":{"line":985,"column":1},"end":{"line":987,"column":1}},"key":"sgtQmimg5o"}],"enumerated":true,"label":"exercise-wRHPH28RLP","identifier":"exercise-wrhph28rlp","enumerator":"2","html_id":"exercise-wrhph28rlp","key":"iFV7qgtpIO"},{"type":"paragraph","position":{"start":{"line":990,"column":1},"end":{"line":990,"column":1}},"children":[{"type":"text","value":"Test with orbital dynamics equations.","position":{"start":{"line":990,"column":1},"end":{"line":990,"column":1}},"key":"Jh7BIUyq8Q"}],"key":"igolfVXgB7"},{"type":"code","lang":"","value":"\n### Exercise 3: Decorator Challenge\n\n```{exercise} Performance Monitor Decorator\nCreate a decorator that:\n1. Times function execution\n2. Logs input arguments\n3. Catches and logs exceptions\n4. Can be configured with verbosity level\n\nApply to various astronomical calculations and analyze performance.","position":{"start":{"line":991,"column":1},"end":{"line":1003,"column":1}},"key":"YYUlYNOGjl"},{"type":"heading","depth":3,"position":{"start":{"line":1005,"column":1},"end":{"line":1005,"column":1}},"children":[{"type":"text","value":"Exercise 4: Recursive Tree Search","position":{"start":{"line":1005,"column":1},"end":{"line":1005,"column":1}},"key":"FEl8swUPLn"}],"identifier":"exercise-4-recursive-tree-search","label":"Exercise 4: Recursive Tree Search","html_id":"exercise-4-recursive-tree-search","implicit":true,"key":"dXSShLZmFf"},{"type":"exercise","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Galaxy Cluster Finder","position":{"start":{"line":1007,"column":1},"end":{"line":1007,"column":1}},"key":"rY3MliROmp"}],"key":"RWAwn36yUT"},{"type":"paragraph","position":{"start":{"line":1008,"column":1},"end":{"line":1008,"column":1}},"children":[{"type":"text","value":"Galaxies form hierarchical structures. Write a recursive function that:","position":{"start":{"line":1008,"column":1},"end":{"line":1008,"column":1}},"key":"MmguxuneR1"}],"key":"WTOTRg0TJF"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":1009,"column":1},"end":{"line":1012,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1009,"column":1},"end":{"line":1009,"column":1}},"children":[{"type":"text","value":"Takes a tree structure of galaxy positions","position":{"start":{"line":1009,"column":1},"end":{"line":1009,"column":1}},"key":"p0yk5ugQUF"}],"key":"r9nxVdw3NJ"},{"type":"listItem","spread":true,"position":{"start":{"line":1010,"column":1},"end":{"line":1010,"column":1}},"children":[{"type":"text","value":"Finds all groups within a given distance threshold","position":{"start":{"line":1010,"column":1},"end":{"line":1010,"column":1}},"key":"FZBjqe7DmZ"}],"key":"DkRPMcZJ2m"},{"type":"listItem","spread":true,"position":{"start":{"line":1011,"column":1},"end":{"line":1012,"column":1}},"children":[{"type":"text","value":"Returns nested structure of identified clusters","position":{"start":{"line":1011,"column":1},"end":{"line":1011,"column":1}},"key":"UQLbNkElcy"}],"key":"FzxzbCHIlb"}],"key":"CnnVCI2ZVH"},{"type":"paragraph","position":{"start":{"line":1013,"column":1},"end":{"line":1013,"column":1}},"children":[{"type":"text","value":"Handle edge cases like empty regions and single galaxies.","position":{"start":{"line":1013,"column":1},"end":{"line":1013,"column":1}},"key":"o8bBseceJO"}],"key":"KW0xMrkAj0"}],"enumerated":true,"label":"exercise-GgA3UfGEB2","identifier":"exercise-gga3ufgeb2","enumerator":"3","html_id":"exercise-gga3ufgeb2","key":"jNs3MmERd5"},{"type":"thematicBreak","position":{"start":{"line":1016,"column":1},"end":{"line":1016,"column":1}},"key":"zbOZJf78WE"},{"type":"heading","depth":2,"position":{"start":{"line":1018,"column":1},"end":{"line":1018,"column":1}},"children":[{"type":"text","value":"Key Takeaways","position":{"start":{"line":1018,"column":1},"end":{"line":1018,"column":1}},"key":"khXHE6xRcU"}],"identifier":"key-takeaways","label":"Key Takeaways","html_id":"key-takeaways","implicit":true,"key":"ae4bngM8Ma"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Chapter 3 Summary","position":{"start":{"line":1020,"column":1},"end":{"line":1020,"column":1}},"key":"Fpfq0G6ZKH"}],"key":"MwyelQIBHz"},{"type":"paragraph","position":{"start":{"line":1023,"column":1},"end":{"line":1023,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1023,"column":1},"end":{"line":1023,"column":1}},"key":"FlkMzJVtX2"},{"type":"strong","position":{"start":{"line":1023,"column":1},"end":{"line":1023,"column":1}},"children":[{"type":"text","value":"Functions are abstractions","position":{"start":{"line":1023,"column":1},"end":{"line":1023,"column":1}},"key":"I5NBBx8foH"}],"key":"zQ54KasUXs"},{"type":"text","value":": Hide complexity, expose simplicity","position":{"start":{"line":1023,"column":1},"end":{"line":1023,"column":1}},"key":"Pdl45xGu6h"}],"key":"uK6vjbZmiZ"},{"type":"paragraph","position":{"start":{"line":1025,"column":1},"end":{"line":1025,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1025,"column":1},"end":{"line":1025,"column":1}},"key":"m1xLKFYxKE"},{"type":"strong","position":{"start":{"line":1025,"column":1},"end":{"line":1025,"column":1}},"children":[{"type":"text","value":"DRY Principle","position":{"start":{"line":1025,"column":1},"end":{"line":1025,"column":1}},"key":"vaN6hPvVBF"}],"key":"LFTzDa2oXl"},{"type":"text","value":": Don’t Repeat Yourself - factor out common code","position":{"start":{"line":1025,"column":1},"end":{"line":1025,"column":1}},"key":"uSPfrgOQs8"}],"key":"mL4nIfBfiN"},{"type":"paragraph","position":{"start":{"line":1027,"column":1},"end":{"line":1027,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1027,"column":1},"end":{"line":1027,"column":1}},"key":"qee0Rycopc"},{"type":"strong","position":{"start":{"line":1027,"column":1},"end":{"line":1027,"column":1}},"children":[{"type":"text","value":"Argument mastery","position":{"start":{"line":1027,"column":1},"end":{"line":1027,"column":1}},"key":"nJD92U7QKy"}],"key":"V0f9J4PVru"},{"type":"text","value":": Positional, keyword, *args, **kwargs - know when to use each","position":{"start":{"line":1027,"column":1},"end":{"line":1027,"column":1}},"key":"ycNgRNhgR8"}],"key":"aIPJh1DwiC"},{"type":"paragraph","position":{"start":{"line":1029,"column":1},"end":{"line":1029,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1029,"column":1},"end":{"line":1029,"column":1}},"key":"sxVCpoLo8B"},{"type":"strong","position":{"start":{"line":1029,"column":1},"end":{"line":1029,"column":1}},"children":[{"type":"text","value":"Beware mutable defaults","position":{"start":{"line":1029,"column":1},"end":{"line":1029,"column":1}},"key":"FbBMmBNsNi"}],"key":"sgaFNsDjJ0"},{"type":"text","value":": Use None and create inside function","position":{"start":{"line":1029,"column":1},"end":{"line":1029,"column":1}},"key":"FC0Q0YFeGL"}],"key":"tsVIQQAaMR"},{"type":"paragraph","position":{"start":{"line":1031,"column":1},"end":{"line":1031,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1031,"column":1},"end":{"line":1031,"column":1}},"key":"i8OzayYNhl"},{"type":"strong","position":{"start":{"line":1031,"column":1},"end":{"line":1031,"column":1}},"children":[{"type":"text","value":"LEGB scope rule","position":{"start":{"line":1031,"column":1},"end":{"line":1031,"column":1}},"key":"ioSDMx2eWU"}],"key":"gVEKwH1Rv6"},{"type":"text","value":": Local → Enclosing → Global → Built-in","position":{"start":{"line":1031,"column":1},"end":{"line":1031,"column":1}},"key":"UBpEDcwMAE"}],"key":"JznmdPm1SJ"},{"type":"paragraph","position":{"start":{"line":1033,"column":1},"end":{"line":1033,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1033,"column":1},"end":{"line":1033,"column":1}},"key":"Pvrt3L16gD"},{"type":"strong","position":{"start":{"line":1033,"column":1},"end":{"line":1033,"column":1}},"children":[{"type":"text","value":"Functions are objects","position":{"start":{"line":1033,"column":1},"end":{"line":1033,"column":1}},"key":"fHYCR1abew"}],"key":"zimmeKb661"},{"type":"text","value":": Pass them, return them, transform them","position":{"start":{"line":1033,"column":1},"end":{"line":1033,"column":1}},"key":"uaX1htchaI"}],"key":"EQsBTKzVoe"},{"type":"paragraph","position":{"start":{"line":1035,"column":1},"end":{"line":1035,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1035,"column":1},"end":{"line":1035,"column":1}},"key":"ARqRzS4jZO"},{"type":"strong","position":{"start":{"line":1035,"column":1},"end":{"line":1035,"column":1}},"children":[{"type":"text","value":"Decorators enhance functions","position":{"start":{"line":1035,"column":1},"end":{"line":1035,"column":1}},"key":"BTNr9rAaEX"}],"key":"ivhYohEfNk"},{"type":"text","value":": Add functionality without modifying code","position":{"start":{"line":1035,"column":1},"end":{"line":1035,"column":1}},"key":"eSAO3j6Nw3"}],"key":"oTo8x7xIMg"},{"type":"paragraph","position":{"start":{"line":1037,"column":1},"end":{"line":1037,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1037,"column":1},"end":{"line":1037,"column":1}},"key":"H4NlhGPVmr"},{"type":"strong","position":{"start":{"line":1037,"column":1},"end":{"line":1037,"column":1}},"children":[{"type":"text","value":"Type hints clarify intent","position":{"start":{"line":1037,"column":1},"end":{"line":1037,"column":1}},"key":"UK4TPzRyXC"}],"key":"qLRmNuudH0"},{"type":"text","value":": Make your code self-documenting","position":{"start":{"line":1037,"column":1},"end":{"line":1037,"column":1}},"key":"PZnvZbDDbg"}],"key":"Eccyak3eZm"},{"type":"paragraph","position":{"start":{"line":1039,"column":1},"end":{"line":1039,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1039,"column":1},"end":{"line":1039,"column":1}},"key":"JUNOdWlrml"},{"type":"strong","position":{"start":{"line":1039,"column":1},"end":{"line":1039,"column":1}},"children":[{"type":"text","value":"Single responsibility","position":{"start":{"line":1039,"column":1},"end":{"line":1039,"column":1}},"key":"ykQhx8i4ts"}],"key":"jjT4cKFtOx"},{"type":"text","value":": Each function should do one thing well","position":{"start":{"line":1039,"column":1},"end":{"line":1039,"column":1}},"key":"iRaB2Igq3w"}],"key":"Uw3TcJup1s"}],"class":"success","key":"KqszTpf0JQ"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Next Chapter Preview","position":{"start":{"line":1042,"column":1},"end":{"line":1042,"column":1}},"key":"dOjfLI8gDm"}],"key":"tDjwcZvF4P"},{"type":"paragraph","position":{"start":{"line":1044,"column":1},"end":{"line":1044,"column":1}},"children":[{"type":"text","value":"Chapter 4: Data Structures & Algorithms - Choosing the right tool for astronomical data","position":{"start":{"line":1044,"column":1},"end":{"line":1044,"column":1}},"key":"ijZxrYssDS"}],"key":"Q3rZMtb1Ls"}],"class":"info","key":"kCIFFINBXT"},{"type":"heading","depth":2,"position":{"start":{"line":1047,"column":1},"end":{"line":1047,"column":1}},"children":[{"type":"text","value":"Quick Reference Card","position":{"start":{"line":1047,"column":1},"end":{"line":1047,"column":1}},"key":"vglWoBuWfb"}],"identifier":"quick-reference-card","label":"Quick Reference Card","html_id":"quick-reference-card","implicit":true,"key":"GljT4k9HgR"},{"type":"code","lang":"python","value":"# Function definition\ndef func(pos, default=None, *args, **kwargs):\n    \"\"\"Docstring here.\"\"\"\n    return result\n\n# Argument unpacking\nfunc(*list_args, **dict_kwargs)\n\n# Lambda functions\nlambda x: x**2\n\n# Decorators\n@decorator\ndef func():\n    pass\n\n# Type hints\ndef func(x: int, y: float = 0.0) -> str:\n    pass\n\n# Scope modifiers\nglobal var_name\nnonlocal var_name\n\n# Function as argument\nmap(func, iterable)\nfilter(func, iterable)\nsorted(items, key=func)\n\n# Partial functions\nfrom functools import partial\nnew_func = partial(old_func, arg1=value)\n\n# Common patterns\nif param is None:\n    param = []  # Mutable default pattern","position":{"start":{"line":1049,"column":1},"end":{"line":1086,"column":1}},"key":"Pz9rHVSP8c"}],"key":"U5y9behjz1"}],"key":"CIO7ZjhSA2"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Chapter 2: Control Flow & Logic - Teaching Computers to Think","url":"/chapter2-control-flow","group":"Python Fundamentals"},"next":{"title":"Astrophysics Applications","url":"/index-6","group":"Astrophysics"}}},"domain":"http://localhost:3001"}