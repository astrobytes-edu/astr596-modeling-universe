{"version":2,"kind":"Notebook","sha256":"100d10fd105e6c2070062f53c3abfeba4d728fa2301d1801220cecb60bbb31c6","slug":"chapter3-control-flow-updated","location":"/03-scientific-computing-with-python/01-python-fundamentals/chapter3-control-flow-updated.md","dependencies":[],"frontmatter":{"title":"Chapter 3: Control Flow & Logic","kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"jupytext":{"formats":"md:myst","text_representation":{"extension":".md","format_name":"myst"}},"content_includes_title":false,"authors":[{"nameParsed":{"literal":"Anna Rosen","given":"Anna","family":"Rosen"},"name":"Anna Rosen","orcid":"0000-0003-4423-0660","email":"alrosen@sdsu.edu","affiliations":["San Diego State University"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/astrobytes-edu/astr596-modeling-universe","subject":"Modeling the Universe","venue":{"title":"ASTR 596 - Fall 2025","url":"https://www.anna-rosen.com"},"keywords":["computational astrophysics","python","numerical methods","machine learning","monte carlo","neural networks","radiative transfer","bayesian inference","JAX"],"affiliations":[{"id":"San Diego State University","name":"San Diego State University"}],"numbering":{"title":{"offset":2}},"edit_url":"https://github.com/astrobytes-edu/astr596-modeling-universe/blob/main/03-scientific-computing-with-python/01-python-fundamentals/chapter3-control-flow-updated.md","exports":[{"format":"md","filename":"chapter3-control-flow-updated.md","url":"/chapter3-control-flo-cdac780ea0eb5a2a1dd70d78ed73020e.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Learning Objectives","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"JPCqjwKsU9"}],"identifier":"learning-objectives","label":"Learning Objectives","html_id":"learning-objectives","implicit":true,"key":"pUujsKMJQo"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"By the end of this chapter, you will be able to:","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"pzXh2116Wd"}],"key":"mOvI3Zq9Ot"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":19,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Design algorithms using structured pseudocode before writing any Python code","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"LuMXjsC1pw"}],"key":"ZAbE0fbCUh"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Implement conditional statements (","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"MGYk5VwZYG"},{"type":"strong","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"if","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"jkfMdLgGBo"}],"key":"OtDcBf0c92"},{"type":"text","value":"/","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"zu0nDaSSzX"},{"type":"strong","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"elif","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"X0wfRtfnLT"}],"key":"ElGigwIMaJ"},{"type":"text","value":"/","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"zSWR1jON2i"},{"type":"strong","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"else","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"T156vck6TA"}],"key":"LJp7OxIIUI"},{"type":"text","value":") with proper handling of edge cases","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"wjJz3ZCLIi"}],"key":"f81X2MFfyM"},{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Choose appropriate loop structures (","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"epcdAU9LMy"},{"type":"strong","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"for","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"liyBijEh6F"}],"key":"rtZEFtWn5L"},{"type":"text","value":" vs ","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"T1v689HS1b"},{"type":"strong","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"while","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"dqTihfqs3j"}],"key":"kVfbcfJjgL"},{"type":"text","value":") based on problem requirements","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"aGmGtF3KmW"}],"key":"TD04FNnQTC"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Master all comparison operators (","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Puo3wK8PBu"},{"type":"inlineCode","value":">","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Um1cqhNjiH"},{"type":"text","value":", ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"eVKfiM7vox"},{"type":"inlineCode","value":"<","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"EKnznz95VH"},{"type":"text","value":", ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"WiFMJUjTGp"},{"type":"inlineCode","value":">=","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"XSyZQXPgTh"},{"type":"text","value":", ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"YGLLb6cw55"},{"type":"inlineCode","value":"<=","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"ZX87v4fM9G"},{"type":"text","value":", ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"x1AQqIorGX"},{"type":"inlineCode","value":"==","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"kM1dE1R3qR"},{"type":"text","value":", ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"UbdTFMg1pt"},{"type":"inlineCode","value":"!=","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"OOSdR4kO7S"},{"type":"text","value":") and logical operators (","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"hYjorKlPtR"},{"type":"strong","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"and","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"wAANCAGM9j"}],"key":"QLvGCEYbC6"},{"type":"text","value":", ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"FpUgIQlfxW"},{"type":"strong","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"or","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"rwJHS8NFx3"}],"key":"HfzDE8VcJw"},{"type":"text","value":", ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"NhyUZLjk9g"},{"type":"strong","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"XNXOYA7Gk8"}],"key":"P3z6yKQ72O"},{"type":"text","value":")","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"G3R0fbxqBF"}],"key":"Qnu48bAlar"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Handle floating-point comparisons safely in conditional statements","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"Pexcxr0rR6"}],"key":"lRPJSSLlsE"},{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Debug logic errors systematically using IPython’s debugger and ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"U8DK1hS2ps"},{"type":"strong","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"assert","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"baBMDcO4cW"}],"key":"pWvVbMfHH4"},{"type":"text","value":" statements","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"y3dHQkJ66U"}],"key":"OPqo9MSJLW"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Write efficient list comprehensions while knowing when to avoid them","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"sHAYlJEuW3"}],"key":"BkTMZwVoxZ"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Recognize and apply universal algorithmic patterns across different problems","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"LYSwP9yCA3"}],"key":"sDE9J8lWXI"},{"type":"listItem","spread":true,"position":{"start":{"line":27,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Build defensive code that validates assumptions and catches errors early","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"CSGRMuiu32"}],"key":"Iv2FsYpJQF"}],"key":"tn45Qvu5Oz"},{"type":"heading","depth":2,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Prerequisites Check","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"mzSKSzbSk6"}],"identifier":"prerequisites-check","label":"Prerequisites Check","html_id":"prerequisites-check","implicit":true,"key":"hjPekJqrmq"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"✅ Before Starting This Chapter","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"gHvdpoNHp0"}],"key":"V40MN3LUFX"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":34,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"You can launch IPython and use magic commands like %timeit (Chapter 1)","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"hHluPcF7GW"}],"checked":false,"key":"hm54UgpxwM"},{"type":"listItem","spread":true,"position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"You understand floating-point precision and comparison issues (Chapter 2)","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"zaUYiJsXg5"}],"checked":false,"key":"toVwSQx7SH"},{"type":"listItem","spread":true,"position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"You can write and run Python scripts from the terminal (Chapter 1)","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"c3moP8Of5T"}],"checked":false,"key":"zwiSY3s5dd"},{"type":"listItem","spread":true,"position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"You can use f-strings for formatted output (Chapter 2)","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"kGEtnjidea"}],"checked":false,"key":"vk3vmnvtHV"},{"type":"listItem","spread":true,"position":{"start":{"line":38,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"Your ","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"MPmcXNinhe"},{"type":"inlineCode","value":"astr596","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"sDJiF1p64d"},{"type":"text","value":" environment is activated and working","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"VDaMt3y2fv"}],"checked":false,"key":"oCpPCze2DA"}],"key":"MZEq05km7q"},{"type":"paragraph","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"If any boxes are unchecked, review the indicated chapters first.","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"L6lNWnDFkw"}],"key":"oxwdbmszSH"}],"class":"note","key":"BZmCejZf0E"},{"type":"heading","depth":2,"position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"children":[{"type":"text","value":"Chapter Overview","position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"key":"P9OpPK0Sgb"}],"identifier":"chapter-overview","label":"Chapter Overview","html_id":"chapter-overview","implicit":true,"key":"pGVyFCFy5d"},{"type":"paragraph","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"text","value":"Programming is fundamentally about teaching computers to make decisions and repeat tasks. When you write an ","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"key":"KeFFW2KOsT"},{"type":"strong","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"text","value":"if","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"key":"XfCTbemEKj"}],"key":"dl7ykBLx1i"},{"type":"text","value":" statement or a loop, you’re translating human logic into instructions a machine can follow. But here’s the critical insight that separates computational thinkers from mere coders: the logic must be designed before it’s implemented. This chapter transforms you from someone who writes code to someone who designs algorithms.","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"key":"jaUCR9w9ni"}],"key":"wSfZ3HAafU"},{"type":"paragraph","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"children":[{"type":"text","value":"We’ll start with the lost art of pseudocode — not as a bureaucratic exercise, but as the difference between code that works by accident and code that works by design. You’ll learn to recognize universal patterns that appear across all of computational physics: iteration, accumulation, filtering, mapping, and reduction. These patterns will appear in every project you build, from N-body simulations to neural networks. Whether you’re folding light curves to find exoplanet periods or iterating until your stellar model converges, these patterns form the backbone of computational astronomy.","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"YcRskblduE"}],"key":"re42VvwGED"},{"type":"paragraph","position":{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},"children":[{"type":"text","value":"The control flow structures we explore here are where your numerical calculations from Chapter 2 become dynamic algorithms. Every convergence test, every adaptive timestep, every Monte Carlo acceptance criterion depends on mastering these concepts deeply, not just syntactically. By chapter’s end, you’ll see code not as a sequence of commands, but as a carefully orchestrated flow of decisions and iterations that solve real scientific problems. You’ll write algorithms that could process data from the James Webb Space Telescope or control the adaptive optics on the next generation of ground-based observatories.","position":{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},"key":"YaOePbLRmW"}],"key":"ylBCM9VHhd"},{"type":"heading","depth":2,"position":{"start":{"line":51,"column":1},"end":{"line":51,"column":1}},"children":[{"type":"text","value":"3.1 Algorithmic Thinking: The Lost Art of Pseudocode","position":{"start":{"line":51,"column":1},"end":{"line":51,"column":1}},"key":"wvf8xqiVnY"}],"identifier":"id-3-1-algorithmic-thinking-the-lost-art-of-pseudocode","label":"3.1 Algorithmic Thinking: The Lost Art of Pseudocode","html_id":"id-3-1-algorithmic-thinking-the-lost-art-of-pseudocode","implicit":true,"key":"wxK5esyeu9"},{"type":"aside","children":[{"type":"paragraph","position":{"start":{"line":54,"column":1},"end":{"line":55,"column":1}},"children":[{"type":"strong","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"children":[{"type":"text","value":"pseudocode","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"dziOOebt73"}],"key":"o3RcLa3Rci"},{"type":"text","value":"\nHuman-readable algorithm description focusing on logic over syntax","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"VEfWjktaTD"}],"key":"GLc8uFP9zA"}],"key":"PUlaVPHNnm"},{"type":"paragraph","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"Most students jump straight from problem to code, then wonder why they spend hours debugging. Professional computational scientists spend more time thinking than typing. ","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"MFr0NhWHne"},{"type":"strong","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"Pseudocode","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"FOW2dGVk6c"}],"key":"VsP29N2uHo"},{"type":"text","value":" is how we think precisely about algorithms without getting distracted by syntax. Think of it as your algorithm’s blueprint — you wouldn’t build a telescope without optical designs, so why write code without algorithmic designs?","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"IzGozTsRNo"}],"key":"iHfnoMqi9J"},{"type":"heading","depth":3,"position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"Why Pseudocode Matters in Scientific Computing","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"sPzMi8Z9qG"}],"identifier":"why-pseudocode-matters-in-scientific-computing","label":"Why Pseudocode Matters in Scientific Computing","html_id":"why-pseudocode-matters-in-scientific-computing","implicit":true,"key":"fU3HWTRbZd"},{"type":"paragraph","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"text","value":"Consider this scenario: You need to implement adaptive timestepping for an orbital integrator. Without pseudocode, you’ll likely write code, run it, watch orbits spiral incorrectly, debug for hours, and maybe get it working through trial and error. With pseudocode, you’ll identify edge cases, boundary conditions, and logical flaws before writing a single line of Python.","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"VKQP4rqOlp"}],"key":"FnH8uGnd6k"}],"key":"GDugib2jY9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# WITHOUT PSEUDOCODE (typical student approach):\n# \"I'll figure it out as I code...\"\ndef integrate_naive(state, t_end):\n    dt = 0.01\n    while state.time < t_end:\n        new_state = step(state, dt)\n        error = estimate_error(state, new_state)\n        if error > tolerance:\n            dt = dt * 0.5  # Seems reasonable?\n        state = new_state\n    return state\n# Wait, this doesn't work... infinite loop when error is bad!\n# Also, dt never increases... hours of debugging ahead","key":"z2tRpBrq51"},{"type":"output","id":"7gyWMyoo8r8ohqsR0pDBJ","data":[],"key":"l9zJuAjhlP"}],"key":"gCYYnZPNXy"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"Now let’s see how pseudocode reveals problems immediately! This is exactly how professional astronomers design algorithms for everything from orbit calculations to galaxy simulations. You’re about to learn the same systematic approach used at NASA’s Jet Propulsion Laboratory for spacecraft navigation and at the Space Telescope Science Institute for Hubble’s scheduling algorithms.","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"KmpmPvQoMB"}],"key":"lEskJxH8d5"},{"type":"heading","depth":3,"position":{"start":{"line":82,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"text","value":"The Three Levels of Pseudocode Refinement","position":{"start":{"line":82,"column":1},"end":{"line":82,"column":1}},"key":"D6Y2u60zML"}],"identifier":"the-three-levels-of-pseudocode-refinement","label":"The Three Levels of Pseudocode Refinement","html_id":"the-three-levels-of-pseudocode-refinement","implicit":true,"key":"vsgwjilqeo"},{"type":"paragraph","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"Professional algorithm development happens in stages, each revealing different issues. Don’t worry if this feels strange at first — every programmer has felt that way! But once you embrace pseudocode, you’ll save countless hours of debugging. Let’s build this skill together:","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"X20WExlvIB"}],"key":"W86EjXRFKy"},{"type":"paragraph","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"children":[{"type":"strong","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"children":[{"type":"text","value":"Level 1: Conceptual Overview (The Big Picture)","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"key":"YduvFzDUhL"}],"key":"ZTnKgtRJr0"}],"key":"E8GQ5my40F"},{"type":"code","lang":"","value":"WHILE simulation not done:       # WHILE means \"repeat as long as condition is true\"\n    Take a step\n    Check IF step was good        # IF means \"only do this when condition is true\"\n    Adjust timestep","position":{"start":{"line":87,"column":1},"end":{"line":92,"column":1}},"key":"e6H5jp2yPx"},{"type":"paragraph","position":{"start":{"line":94,"column":1},"end":{"line":94,"column":1}},"children":[{"type":"text","value":"This level helps you understand the overall flow. The ","position":{"start":{"line":94,"column":1},"end":{"line":94,"column":1}},"key":"bjpn4giOBo"},{"type":"strong","position":{"start":{"line":94,"column":1},"end":{"line":94,"column":1}},"children":[{"type":"text","value":"WHILE","position":{"start":{"line":94,"column":1},"end":{"line":94,"column":1}},"key":"e4nIra2o9O"}],"key":"Ifn9AWpqQO"},{"type":"text","value":" construct creates a loop that continues until some condition becomes false. The ","position":{"start":{"line":94,"column":1},"end":{"line":94,"column":1}},"key":"EOzG1sHXK2"},{"type":"strong","position":{"start":{"line":94,"column":1},"end":{"line":94,"column":1}},"children":[{"type":"text","value":"IF","position":{"start":{"line":94,"column":1},"end":{"line":94,"column":1}},"key":"Zispv1jOyW"}],"key":"iw2wSZmzC8"},{"type":"text","value":" construct makes a decision based on a condition. Already, we can ask critical questions: What defines “done”? What makes a step “good”? How much should we adjust? These questions matter!","position":{"start":{"line":94,"column":1},"end":{"line":94,"column":1}},"key":"pg94AsDHEn"}],"key":"hMRcuAvH7G"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"🤔 Check Your Understanding","position":{"start":{"line":96,"column":1},"end":{"line":96,"column":1}},"key":"Sfbh6riNlR"}],"key":"zkxMe7JGSv"},{"type":"paragraph","position":{"start":{"line":99,"column":1},"end":{"line":99,"column":1}},"children":[{"type":"text","value":"Before continuing, identify at least two problems with the Level 1 pseudocode above. What could go wrong?","position":{"start":{"line":99,"column":1},"end":{"line":99,"column":1}},"key":"Dl6ZJSftvK"}],"key":"bbnGFF48kT"}],"class":"hint","key":"ACc4sWv4zA"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Solution","position":{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},"key":"znWmkx23em"}],"key":"eH9sRUNcls"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":105,"column":1},"end":{"line":109,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":105,"column":1},"end":{"line":105,"column":1}},"children":[{"type":"strong","position":{"start":{"line":105,"column":1},"end":{"line":105,"column":1}},"children":[{"type":"text","value":"No exit condition if step is never “good”","position":{"start":{"line":105,"column":1},"end":{"line":105,"column":1}},"key":"ku3nRy9oWS"}],"key":"bUYLpzkwa7"},{"type":"text","value":" — infinite loop risk!","position":{"start":{"line":105,"column":1},"end":{"line":105,"column":1}},"key":"rsHOw40riU"}],"key":"Wl9XPPEFe7"},{"type":"listItem","spread":true,"position":{"start":{"line":106,"column":1},"end":{"line":106,"column":1}},"children":[{"type":"strong","position":{"start":{"line":106,"column":1},"end":{"line":106,"column":1}},"children":[{"type":"text","value":"No bounds on timestep adjustment","position":{"start":{"line":106,"column":1},"end":{"line":106,"column":1}},"key":"hPHJr21d5f"}],"key":"aC3cKsOQt0"},{"type":"text","value":" — could grow infinitely or shrink to zero","position":{"start":{"line":106,"column":1},"end":{"line":106,"column":1}},"key":"Tykku3AokJ"}],"key":"xDSuvbE2r4"},{"type":"listItem","spread":true,"position":{"start":{"line":107,"column":1},"end":{"line":107,"column":1}},"children":[{"type":"strong","position":{"start":{"line":107,"column":1},"end":{"line":107,"column":1}},"children":[{"type":"text","value":"“Simulation done” is vague","position":{"start":{"line":107,"column":1},"end":{"line":107,"column":1}},"key":"Ape5LEP0Us"}],"key":"DJISOtpUVk"},{"type":"text","value":" — need precise termination condition","position":{"start":{"line":107,"column":1},"end":{"line":107,"column":1}},"key":"STN5iqXVVm"}],"key":"fcr4ErLCPB"},{"type":"listItem","spread":true,"position":{"start":{"line":108,"column":1},"end":{"line":109,"column":1}},"children":[{"type":"strong","position":{"start":{"line":108,"column":1},"end":{"line":108,"column":1}},"children":[{"type":"text","value":"No error handling","position":{"start":{"line":108,"column":1},"end":{"line":108,"column":1}},"key":"TDcQ4mXIW8"}],"key":"We3yzeWfnR"},{"type":"text","value":" — what if the integration fails completely?","position":{"start":{"line":108,"column":1},"end":{"line":108,"column":1}},"key":"gghzTG623d"}],"key":"jpuwb3XPmU"}],"key":"IFWz7eggtw"},{"type":"paragraph","position":{"start":{"line":110,"column":1},"end":{"line":110,"column":1}},"children":[{"type":"text","value":"These aren’t nitpicks — they’re the difference between code that runs and code that runs correctly!","position":{"start":{"line":110,"column":1},"end":{"line":110,"column":1}},"key":"ulKyHkBaXt"}],"key":"qmp8aOWF4d"}],"class":"tip, dropdown","key":"HI2Y3XK7VB"},{"type":"paragraph","position":{"start":{"line":113,"column":1},"end":{"line":113,"column":1}},"children":[{"type":"strong","position":{"start":{"line":113,"column":1},"end":{"line":113,"column":1}},"children":[{"type":"text","value":"Level 2: Structural Detail (The Flow)","position":{"start":{"line":113,"column":1},"end":{"line":113,"column":1}},"key":"eWLcoCxHQh"}],"key":"id0yEyO1cv"}],"key":"hsgVaXhd96"},{"type":"code","lang":"","value":"FUNCTION adaptive_integrate(initial_state, end_time):  # FUNCTION groups reusable code\n    state ← initial_state                              # ← means \"assign value to variable\"\n    dt ← estimate_initial_timestep(state)\n    \n    WHILE time < end_time:                             # Loop continues while time hasn't reached end\n        DO:                                             # DO-UNTIL creates a loop that runs at least once\n            trial_step = integrate(state, dt)\n            error = compute_error(trial_step)\n        UNTIL error < tolerance OR dt < dt_min         # OR means \"either condition can be true\"\n        \n        state = trial_step\n        dt = adjust_timestep(error, dt)\n    \n    RETURN state                                        # RETURN sends value back to caller","position":{"start":{"line":114,"column":1},"end":{"line":129,"column":1}},"key":"tI2h1VlkYa"},{"type":"paragraph","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"children":[{"type":"text","value":"Now we see the retry logic and minimum timestep safeguard. The ","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"key":"WiPRCCIUwc"},{"type":"strong","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"children":[{"type":"text","value":"DO-UNTIL","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"key":"bg6m3OPrYA"}],"key":"VJUNIADgZx"},{"type":"text","value":" construct ensures we attempt at least one integration step. The ","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"key":"IhADSvR4Ny"},{"type":"strong","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"children":[{"type":"text","value":"OR","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"key":"tsSXgvUzEO"}],"key":"EmAEJlo2me"},{"type":"text","value":" operator means either condition being true will exit the inner loop. ","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"key":"AvabMrA9gy"},{"type":"strong","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"children":[{"type":"text","value":"FUNCTION","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"key":"TnQCmw3ax6"}],"key":"kxxcHFcHxN"},{"type":"text","value":" defines a reusable block of code that can be called with arguments and ","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"key":"ycW3VMtIr4"},{"type":"strong","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"children":[{"type":"text","value":"RETURN","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"key":"VkYNlxu6d2"}],"key":"p9qDxDiL4m"},{"type":"text","value":" a result.","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"key":"q4QrYFwGuG"}],"key":"iGOTyC1oJW"},{"type":"paragraph","position":{"start":{"line":133,"column":1},"end":{"line":133,"column":1}},"children":[{"type":"strong","position":{"start":{"line":133,"column":1},"end":{"line":133,"column":1}},"children":[{"type":"text","value":"Level 3: Implementation-Ready (Stage 1: Core Logic - 10 lines)","position":{"start":{"line":133,"column":1},"end":{"line":133,"column":1}},"key":"ujCC75T8a7"}],"key":"usmxpAR3Zm"}],"key":"MIfOutbL4z"},{"type":"code","lang":"","value":"FUNCTION adaptive_integrate(initial_state, end_time, tolerance):\n    state ← initial_state\n    dt ← estimate_initial_timestep(state)\n    \n    WHILE state.time < end_time:\n        trial_state ← rk4_step(state, dt)\n        error ← estimate_error(state, trial_state)\n        \n        IF error < tolerance:                          # Decision point\n            state ← trial_state\n            dt ← min(dt * 1.5, dt_max)                # Can grow\n        ELSE:                                          # ELSE handles \"otherwise\" case\n            dt ← max(dt * 0.5, dt_min)                # Must shrink","position":{"start":{"line":134,"column":1},"end":{"line":148,"column":1}},"key":"QhmL94YFrT"},{"type":"paragraph","position":{"start":{"line":150,"column":1},"end":{"line":150,"column":1}},"children":[{"type":"strong","position":{"start":{"line":150,"column":1},"end":{"line":150,"column":1}},"children":[{"type":"text","value":"Level 3: Implementation-Ready (Stage 2: Add Safety - 15 lines)","position":{"start":{"line":150,"column":1},"end":{"line":150,"column":1}},"key":"DsimDKOpUh"}],"key":"GHDRRsmhED"}],"key":"DLHwkd5ldR"},{"type":"code","lang":"","value":"FUNCTION adaptive_integrate(initial_state, end_time, tolerance):\n    state ← initial_state\n    dt ← estimate_initial_timestep(state)\n    dt_min ← 1e-10 * (end_time - initial_state.time)\n    dt_max ← 0.1 * (end_time - initial_state.time)\n    \n    WHILE state.time < end_time:\n        step_accepted ← False                          # Boolean flag (True/False)\n        attempts ← 0\n        \n        WHILE NOT step_accepted AND attempts < MAX_ATTEMPTS:  # NOT inverts, AND requires both\n            trial_state ← rk4_step(state, dt)\n            error ← estimate_error(state, trial_state)\n            \n            IF error < tolerance:\n                step_accepted ← True\n                state ← trial_state\n            ELSE:\n                dt ← max(dt * 0.5, dt_min)\n            attempts ← attempts + 1","position":{"start":{"line":151,"column":1},"end":{"line":172,"column":1}},"key":"tkArm3Sv3D"},{"type":"paragraph","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"children":[{"type":"text","value":"Each refinement level reveals new issues and solutions. The ","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"key":"HhWBBSxxzO"},{"type":"strong","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"children":[{"type":"text","value":"NOT","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"key":"cocKuyc5MJ"}],"key":"XYrnWGgA6w"},{"type":"text","value":" operator inverts a boolean value (True becomes False, False becomes True). The ","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"key":"CeKXoybgku"},{"type":"strong","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"children":[{"type":"text","value":"AND","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"key":"jpy1ZWU3Bk"}],"key":"juEVEjfCg6"},{"type":"text","value":" operator requires both conditions to be true. This is computational thinking in action!","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"key":"HN7uahwJJL"}],"key":"f7bVwQbM4R"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"💡 Computational Thinking: The Sentinel Pattern","position":{"start":{"line":176,"column":1},"end":{"line":176,"column":1}},"key":"ZAuiY3Mxvx"}],"key":"bJZok8sQFB"},{"type":"paragraph","position":{"start":{"line":179,"column":1},"end":{"line":179,"column":1}},"children":[{"type":"strong","position":{"start":{"line":179,"column":1},"end":{"line":179,"column":1}},"children":[{"type":"text","value":"PATTERN: Sentinel Values","position":{"start":{"line":179,"column":1},"end":{"line":179,"column":1}},"key":"mqkgWKfd6l"}],"key":"n8gGJAYCdS"}],"key":"LlCxxNvw6e"},{"type":"paragraph","position":{"start":{"line":181,"column":1},"end":{"line":181,"column":1}},"children":[{"type":"text","value":"A sentinel is a special value that signals “stop processing.” This pattern appears everywhere in computing:","position":{"start":{"line":181,"column":1},"end":{"line":181,"column":1}},"key":"APlMC20G0J"}],"key":"Fum2IhG5pQ"},{"type":"code","lang":"python","value":"# Reading until special marker\ndata = []\nwhile True:\n    value = get_next_value()\n    if value == -999:  # Sentinel value\n        break\n    data.append(value)","position":{"start":{"line":183,"column":1},"end":{"line":191,"column":1}},"key":"Z9xMU7DCdK"},{"type":"paragraph","position":{"start":{"line":193,"column":1},"end":{"line":193,"column":1}},"children":[{"type":"text","value":"Real-world applications:","position":{"start":{"line":193,"column":1},"end":{"line":193,"column":1}},"key":"BGlCltY2Wn"}],"key":"BUPAHQfqfU"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":194,"column":1},"end":{"line":198,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":194,"column":1},"end":{"line":194,"column":1}},"children":[{"type":"strong","position":{"start":{"line":194,"column":1},"end":{"line":194,"column":1}},"children":[{"type":"text","value":"FITS files","position":{"start":{"line":194,"column":1},"end":{"line":194,"column":1}},"key":"lByDcW8VzZ"}],"key":"mAiv2s716f"},{"type":"text","value":": END keyword marks end of header","position":{"start":{"line":194,"column":1},"end":{"line":194,"column":1}},"key":"qlO6iQ1Y2u"}],"key":"TR9uFqYbOf"},{"type":"listItem","spread":true,"position":{"start":{"line":195,"column":1},"end":{"line":195,"column":1}},"children":[{"type":"strong","position":{"start":{"line":195,"column":1},"end":{"line":195,"column":1}},"children":[{"type":"text","value":"Network protocols","position":{"start":{"line":195,"column":1},"end":{"line":195,"column":1}},"key":"B2xkmauexZ"}],"key":"HNXDdLuaF6"},{"type":"text","value":": Message terminators like “\\r\\n”","position":{"start":{"line":195,"column":1},"end":{"line":195,"column":1}},"key":"wLil6DCGsr"}],"key":"DHDlKUvSJN"},{"type":"listItem","spread":true,"position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"children":[{"type":"strong","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"children":[{"type":"text","value":"Telescope data","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"f4qPx7B2Cl"}],"key":"d6QULMD4Sx"},{"type":"text","value":": -999 for missing observations","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"XjMADu3xCC"}],"key":"WuueX11gSU"},{"type":"listItem","spread":true,"position":{"start":{"line":197,"column":1},"end":{"line":198,"column":1}},"children":[{"type":"strong","position":{"start":{"line":197,"column":1},"end":{"line":197,"column":1}},"children":[{"type":"text","value":"String processing","position":{"start":{"line":197,"column":1},"end":{"line":197,"column":1}},"key":"PMENIrY90U"}],"key":"rCua0UDlLX"},{"type":"text","value":": Null terminators in C strings","position":{"start":{"line":197,"column":1},"end":{"line":197,"column":1}},"key":"npg2fTuS2V"}],"key":"B4SfBPxGIE"}],"key":"DjstFJGlIh"},{"type":"paragraph","position":{"start":{"line":199,"column":1},"end":{"line":199,"column":1}},"children":[{"type":"text","value":"The sentinel pattern is how computers know when to stop! You’re using the same technique that controls internet data packets and spacecraft telemetry streams.","position":{"start":{"line":199,"column":1},"end":{"line":199,"column":1}},"key":"RiVAmn5H7h"}],"key":"c7kmvfFRHG"}],"class":"important","key":"L4L7UrDb9j"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"💡 Computational Thinking: The Universal Pattern of Adaptive Algorithms","position":{"start":{"line":202,"column":1},"end":{"line":202,"column":1}},"key":"pSnM34ACrP"}],"key":"qob23G8Zc6"},{"type":"paragraph","position":{"start":{"line":205,"column":1},"end":{"line":205,"column":1}},"children":[{"type":"text","value":"Adaptive timestepping is an instance of a universal pattern:","position":{"start":{"line":205,"column":1},"end":{"line":205,"column":1}},"key":"fEXZJh3WhB"}],"key":"paxv05Sk9X"},{"type":"paragraph","position":{"start":{"line":207,"column":1},"end":{"line":207,"column":1}},"children":[{"type":"strong","position":{"start":{"line":207,"column":1},"end":{"line":207,"column":1}},"children":[{"type":"text","value":"PATTERN: Adaptive Refinement","position":{"start":{"line":207,"column":1},"end":{"line":207,"column":1}},"key":"a9cOmIKhyn"}],"key":"wINRjDH7ov"}],"key":"T6a48ZEOJt"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":208,"column":1},"end":{"line":213,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":208,"column":1},"end":{"line":208,"column":1}},"children":[{"type":"text","value":"Attempt action with current parameters","position":{"start":{"line":208,"column":1},"end":{"line":208,"column":1}},"key":"QZFiDeA8HI"}],"key":"JUuBhBhjgg"},{"type":"listItem","spread":true,"position":{"start":{"line":209,"column":1},"end":{"line":209,"column":1}},"children":[{"type":"text","value":"Evaluate quality of result","position":{"start":{"line":209,"column":1},"end":{"line":209,"column":1}},"key":"hAQYl797LK"}],"key":"OgQkZFiGOD"},{"type":"listItem","spread":true,"position":{"start":{"line":210,"column":1},"end":{"line":210,"column":1}},"children":[{"type":"text","value":"If quality insufficient: refine parameters and retry","position":{"start":{"line":210,"column":1},"end":{"line":210,"column":1}},"key":"mbaWb2Ww7X"}],"key":"pv6DeIZT1n"},{"type":"listItem","spread":true,"position":{"start":{"line":211,"column":1},"end":{"line":211,"column":1}},"children":[{"type":"text","value":"If quality acceptable: proceed and possibly coarsen","position":{"start":{"line":211,"column":1},"end":{"line":211,"column":1}},"key":"nS0C4wFf0g"}],"key":"fCWWZUB7y1"},{"type":"listItem","spread":true,"position":{"start":{"line":212,"column":1},"end":{"line":213,"column":1}},"children":[{"type":"text","value":"Include safeguards against infinite refinement","position":{"start":{"line":212,"column":1},"end":{"line":212,"column":1}},"key":"dwuJOprC4z"}],"key":"H8rB95S27U"}],"key":"Ctk7RglfCy"},{"type":"paragraph","position":{"start":{"line":214,"column":1},"end":{"line":214,"column":1}},"children":[{"type":"text","value":"This pattern appears everywhere in computational astrophysics:","position":{"start":{"line":214,"column":1},"end":{"line":214,"column":1}},"key":"KXQG2qmHZi"}],"key":"ivtWRdme45"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":215,"column":1},"end":{"line":220,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":215,"column":1},"end":{"line":215,"column":1}},"children":[{"type":"strong","position":{"start":{"line":215,"column":1},"end":{"line":215,"column":1}},"children":[{"type":"text","value":"Adaptive mesh refinement (AMR)","position":{"start":{"line":215,"column":1},"end":{"line":215,"column":1}},"key":"Ak15H8CxWS"}],"key":"RezFvYpF6l"},{"type":"text","value":" in galaxy formation simulations","position":{"start":{"line":215,"column":1},"end":{"line":215,"column":1}},"key":"OSwxUZSFbe"}],"key":"trkB0MTXac"},{"type":"listItem","spread":true,"position":{"start":{"line":216,"column":1},"end":{"line":216,"column":1}},"children":[{"type":"strong","position":{"start":{"line":216,"column":1},"end":{"line":216,"column":1}},"children":[{"type":"text","value":"Step size control","position":{"start":{"line":216,"column":1},"end":{"line":216,"column":1}},"key":"TCEgDbcH71"}],"key":"iW0BcrnZ2V"},{"type":"text","value":" in stellar evolution codes like MESA","position":{"start":{"line":216,"column":1},"end":{"line":216,"column":1}},"key":"bA0NrJYuBN"}],"key":"m1ndtQRC17"},{"type":"listItem","spread":true,"position":{"start":{"line":217,"column":1},"end":{"line":217,"column":1}},"children":[{"type":"strong","position":{"start":{"line":217,"column":1},"end":{"line":217,"column":1}},"children":[{"type":"text","value":"Learning rate scheduling","position":{"start":{"line":217,"column":1},"end":{"line":217,"column":1}},"key":"AkfLsx47za"}],"key":"bOcfyXHI4I"},{"type":"text","value":" in neural networks for photometric redshifts","position":{"start":{"line":217,"column":1},"end":{"line":217,"column":1}},"key":"If0xz65UJH"}],"key":"M8MEyRRa2r"},{"type":"listItem","spread":true,"position":{"start":{"line":218,"column":1},"end":{"line":218,"column":1}},"children":[{"type":"strong","position":{"start":{"line":218,"column":1},"end":{"line":218,"column":1}},"children":[{"type":"text","value":"Convergence acceleration","position":{"start":{"line":218,"column":1},"end":{"line":218,"column":1}},"key":"cfSDRXGVWQ"}],"key":"KitWZlukX4"},{"type":"text","value":" in self-consistent field calculations","position":{"start":{"line":218,"column":1},"end":{"line":218,"column":1}},"key":"pMriy9Nhro"}],"key":"cfCAAdrABZ"},{"type":"listItem","spread":true,"position":{"start":{"line":219,"column":1},"end":{"line":220,"column":1}},"children":[{"type":"strong","position":{"start":{"line":219,"column":1},"end":{"line":219,"column":1}},"children":[{"type":"text","value":"Importance sampling","position":{"start":{"line":219,"column":1},"end":{"line":219,"column":1}},"key":"ykBSg1exqz"}],"key":"hRPnfHzz3W"},{"type":"text","value":" in Monte Carlo radiative transfer","position":{"start":{"line":219,"column":1},"end":{"line":219,"column":1}},"key":"i3WpeXeMwD"}],"key":"VxyWaGakPQ"}],"key":"XMuzZU0bI1"},{"type":"paragraph","position":{"start":{"line":221,"column":1},"end":{"line":221,"column":1}},"children":[{"type":"text","value":"Once you recognize this pattern, you’ll see it in every sophisticated astronomical code!","position":{"start":{"line":221,"column":1},"end":{"line":221,"column":1}},"key":"UtYAmhL1b2"}],"key":"IB6Aep5qMA"}],"class":"important","key":"AC5ImG4Gdd"},{"type":"heading","depth":2,"position":{"start":{"line":224,"column":1},"end":{"line":224,"column":1}},"children":[{"type":"text","value":"3.2 Boolean Logic in Scientific Computing","position":{"start":{"line":224,"column":1},"end":{"line":224,"column":1}},"key":"XvLOERorwE"}],"identifier":"id-3-2-boolean-logic-in-scientific-computing","label":"3.2 Boolean Logic in Scientific Computing","html_id":"id-3-2-boolean-logic-in-scientific-computing","implicit":true,"key":"G69oBiRMBj"},{"type":"paragraph","position":{"start":{"line":226,"column":1},"end":{"line":226,"column":1}},"children":[{"type":"text","value":"Every decision in your code ultimately reduces to true or false. But in scientific computing, these decisions often involve floating-point numbers, where equality is treacherous and precision is limited. Let’s master this fundamental building block that underlies everything from data quality checks to convergence criteria!","position":{"start":{"line":226,"column":1},"end":{"line":226,"column":1}},"key":"SgrcjPNi5T"}],"key":"H3OgaefVIO"},{"type":"heading","depth":3,"position":{"start":{"line":228,"column":1},"end":{"line":228,"column":1}},"children":[{"type":"text","value":"The Complete Set of Comparison Operators","position":{"start":{"line":228,"column":1},"end":{"line":228,"column":1}},"key":"dxoNMq1qPl"}],"identifier":"the-complete-set-of-comparison-operators","label":"The Complete Set of Comparison Operators","html_id":"the-complete-set-of-comparison-operators","implicit":true,"key":"TmppyksljR"},{"type":"paragraph","position":{"start":{"line":230,"column":1},"end":{"line":230,"column":1}},"children":[{"type":"text","value":"Python provides six comparison operators that return boolean values (True or False):","position":{"start":{"line":230,"column":1},"end":{"line":230,"column":1}},"key":"qAvsIE4IFd"}],"key":"QHjrFBSBsq"}],"key":"OGkbVt5eG7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# All comparison operators in Python\ntemperature = 5778  # Kelvin (Sun's surface)\n\n# The six fundamental comparisons\nprint(f\"Greater than: {temperature > 6000}\")           # False\nprint(f\"Less than: {temperature < 6000}\")              # True\nprint(f\"Greater or equal: {temperature >= 5778}\")      # True\nprint(f\"Less or equal: {temperature <= 5778}\")         # True\nprint(f\"Equal to: {temperature == 5778}\")              # True\nprint(f\"Not equal to: {temperature != 6000}\")          # True\n\n# Chaining comparisons (Python's elegant feature!)\nprint(f\"\\nMain sequence star? {3000 < temperature < 50000}\")  # True\n# This is equivalent to: (3000 < temperature) AND (temperature < 50000)","key":"Srm1GWHyjA"},{"type":"output","id":"FWzU4nMguqD9Z2sWIDCqU","data":[],"key":"m6MDUlMWz0"}],"key":"TV1vWHMVBx"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":249,"column":1},"end":{"line":249,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":249,"column":1},"end":{"line":249,"column":1}},"key":"tqb8L3OXlz"},{"type":"strong","position":{"start":{"line":249,"column":1},"end":{"line":249,"column":1}},"children":[{"type":"text","value":"!=","position":{"start":{"line":249,"column":1},"end":{"line":249,"column":1}},"key":"FSrPCWFzzx"}],"key":"h3ZjGLfick"},{"type":"text","value":" operator (not equal) is particularly useful for filtering out sentinel values or checking if something has changed. The ability to chain comparisons like ","position":{"start":{"line":249,"column":1},"end":{"line":249,"column":1}},"key":"V759fCVcZ4"},{"type":"inlineCode","value":"3000 < temperature < 50000","position":{"start":{"line":249,"column":1},"end":{"line":249,"column":1}},"key":"VdE5sOshsL"},{"type":"text","value":" is a Python feature that makes code more readable and matches mathematical notation.","position":{"start":{"line":249,"column":1},"end":{"line":249,"column":1}},"key":"pYwcBYiTkI"}],"key":"ZTCihVsrJk"},{"type":"heading","depth":3,"position":{"start":{"line":251,"column":1},"end":{"line":251,"column":1}},"children":[{"type":"text","value":"The Three Logical Operators: AND, OR, NOT","position":{"start":{"line":251,"column":1},"end":{"line":251,"column":1}},"key":"ZtfdcNtFhH"}],"identifier":"the-three-logical-operators-and-or-not","label":"The Three Logical Operators: AND, OR, NOT","html_id":"the-three-logical-operators-and-or-not","implicit":true,"key":"bD3RLb377r"},{"type":"paragraph","position":{"start":{"line":253,"column":1},"end":{"line":253,"column":1}},"children":[{"type":"text","value":"Python’s logical operators combine or modify boolean values:","position":{"start":{"line":253,"column":1},"end":{"line":253,"column":1}},"key":"UWDeMmoLrW"}],"key":"zoThSptGLE"}],"key":"TolJVE6fzw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Demonstrating all three logical operators\nis_bright = True\nis_variable = False\n\n# AND: Both conditions must be true\nprint(f\"Bright AND variable: {is_bright and is_variable}\")  # False\n\n# OR: At least one condition must be true  \nprint(f\"Bright OR variable: {is_bright or is_variable}\")     # True\n\n# NOT: Inverts the boolean value\nprint(f\"NOT bright: {not is_bright}\")                       # False\nprint(f\"NOT variable: {not is_variable}\")                   # True\n\n# Complex combinations (real telescope scheduling logic!)\nobservable = True\nweather_good = True\ncalibrated = False\n\ncan_observe = observable and weather_good and (not calibrated or calibrated)\nprint(f\"\\nCan observe? {can_observe}\")\n\n# Truth table demonstration\nprint(\"\\nTruth Table for AND:\")\nfor a in [True, False]:\n    for b in [True, False]:\n        print(f\"  {a:5} AND {b:5} = {a and b}\")","key":"jzNcFpPeJY"},{"type":"output","id":"1QwY9sv7NtjioQb98TP-F","data":[],"key":"Iplp73NjFq"}],"key":"Q8wqJ1FInl"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"children":[{"type":"text","value":"Special Comparison Operators: is, in","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"key":"a7iscT903z"}],"identifier":"special-comparison-operators-is-in","label":"Special Comparison Operators: is, in","html_id":"special-comparison-operators-is-in","implicit":true,"key":"hfInQVelmp"},{"type":"paragraph","position":{"start":{"line":287,"column":1},"end":{"line":287,"column":1}},"children":[{"type":"text","value":"Python has two special operators that are incredibly useful in scientific programming:","position":{"start":{"line":287,"column":1},"end":{"line":287,"column":1}},"key":"GrioT0ZY3m"}],"key":"iZEmIKpQn3"}],"key":"ShaKWOoqy3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import math\n\n# The 'is' operator checks identity (same object in memory)\na = [1, 2, 3]\nb = [1, 2, 3]\nc = a\n\nprint(f\"a == b: {a == b}\")  # True - same values\nprint(f\"a is b: {a is b}\")  # False - different objects\nprint(f\"a is c: {a is c}\")  # True - same object\n\n# Special case: None should always use 'is'\nresult = None\nprint(f\"Checking None: {result is None}\")  # Preferred\n# Don't use: result == None\n\n# The 'in' operator checks membership\nstellar_types = ['O', 'B', 'A', 'F', 'G', 'K', 'M']\nprint(f\"\\nIs 'G' a stellar type? {'G' in stellar_types}\")  # True\nprint(f\"Is 'X' a stellar type? {'X' in stellar_types}\")    # False\n\n# Works with strings too!\nfilename = \"observations_2024.fits\"\nprint(f\"Is FITS file? {'fits' in filename}\")  # True","key":"HTTjFSZHnH"},{"type":"output","id":"OI3Qri1wpxK82krGeRiHf","data":[],"key":"yV2RDHQsK2"}],"key":"ZD0921rpup"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":316,"column":1},"end":{"line":316,"column":1}},"children":[{"type":"text","value":"The Walrus Operator: Assignment Expressions (Python 3.8+)","position":{"start":{"line":316,"column":1},"end":{"line":316,"column":1}},"key":"DrfxmgaANJ"}],"identifier":"the-walrus-operator-assignment-expressions-python-3-8","label":"The Walrus Operator: Assignment Expressions (Python 3.8+)","html_id":"the-walrus-operator-assignment-expressions-python-3-8","implicit":true,"key":"nhEQInCZl1"},{"type":"paragraph","position":{"start":{"line":318,"column":1},"end":{"line":318,"column":1}},"children":[{"type":"text","value":"Python 3.8 introduced the ","position":{"start":{"line":318,"column":1},"end":{"line":318,"column":1}},"key":"pJ5I3YQ2Dk"},{"type":"strong","position":{"start":{"line":318,"column":1},"end":{"line":318,"column":1}},"children":[{"type":"text","value":"walrus operator","position":{"start":{"line":318,"column":1},"end":{"line":318,"column":1}},"key":"V3rMSkCv4N"}],"key":"paGfFI4xzI"},{"type":"text","value":" (","position":{"start":{"line":318,"column":1},"end":{"line":318,"column":1}},"key":"kS4nkYCwtK"},{"type":"inlineCode","value":":=","position":{"start":{"line":318,"column":1},"end":{"line":318,"column":1}},"key":"BETcNYzcdM"},{"type":"text","value":") which allows assignment within expressions:","position":{"start":{"line":318,"column":1},"end":{"line":318,"column":1}},"key":"Y0oFBGeMPj"}],"key":"M2tMwcOLIT"}],"key":"qjJGZ4ejeI"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Traditional approach - two steps\ndata = get_observations()  # Assume this function exists\nif len(data) > 100:\n    print(f\"Large dataset: {len(data)} observations\")\n    # Notice we call len(data) twice!\n\n# With walrus operator - assign and test in one line\n# if (n := len(data)) > 100:\n#     print(f\"Large dataset: {n} observations\")\n#     # Now n contains the length, no need to recalculate!\n\n# Real astronomical example (simulated)\ndef check_observation_quality(observations):\n    \"\"\"Check if we have enough high-quality observations.\"\"\"\n    # Without walrus operator:\n    good_obs = [obs for obs in observations if obs['snr'] > 5]\n    if len(good_obs) >= 10:\n        print(f\"Found {len(good_obs)} good observations\")\n        return good_obs\n    \n    # With walrus operator (Python 3.8+):\n    # if (good_count := len(good_obs)) >= 10:\n    #     print(f\"Found {good_count} good observations\")\n    #     return good_obs\n    \n    return None\n\n# Useful in while loops too\n# while (line := file.readline()):  # Read and check in one step\n#     process(line)\n\nprint(\"Note: Walrus operator requires Python 3.8+\")\nprint(\"It's useful but not essential - all code can be written without it\")","key":"Njprey8bUK"},{"type":"output","id":"OyHAv6ZGW_Vm5H7OmIU7N","data":[],"key":"pDG1iaK26C"}],"key":"U6ZVpWOdt5"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"📝 Note on the Walrus Operator","position":{"start":{"line":356,"column":1},"end":{"line":356,"column":1}},"key":"ZtdPpz2bhQ"}],"key":"UpjbvDtxsO"},{"type":"paragraph","position":{"start":{"line":359,"column":1},"end":{"line":359,"column":1}},"children":[{"type":"text","value":"The walrus operator (","position":{"start":{"line":359,"column":1},"end":{"line":359,"column":1}},"key":"O7eC9hJonT"},{"type":"inlineCode","value":":=","position":{"start":{"line":359,"column":1},"end":{"line":359,"column":1}},"key":"xWfnGfBtlP"},{"type":"text","value":") is optional syntactic sugar introduced in Python 3.8. While it can make some code more concise, it’s perfectly fine to write code without it. Many astronomers still use Python 3.7 or earlier, so don’t rely on it for shared code.","position":{"start":{"line":359,"column":1},"end":{"line":359,"column":1}},"key":"jdmveGOCCo"}],"key":"RgkYoKZRDk"},{"type":"paragraph","position":{"start":{"line":361,"column":1},"end":{"line":361,"column":1}},"children":[{"type":"text","value":"Use it when:","position":{"start":{"line":361,"column":1},"end":{"line":361,"column":1}},"key":"pOB53vCPF6"}],"key":"jdghLZdww8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":362,"column":1},"end":{"line":365,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":362,"column":1},"end":{"line":362,"column":1}},"children":[{"type":"text","value":"You need to use a value in a condition and then reuse it in the body","position":{"start":{"line":362,"column":1},"end":{"line":362,"column":1}},"key":"RbpM0iMJXC"}],"key":"iDhsh1CS3t"},{"type":"listItem","spread":true,"position":{"start":{"line":363,"column":1},"end":{"line":363,"column":1}},"children":[{"type":"text","value":"Reading files line by line in a while loop","position":{"start":{"line":363,"column":1},"end":{"line":363,"column":1}},"key":"EGLeZsEaGY"}],"key":"GcTbKtZlFu"},{"type":"listItem","spread":true,"position":{"start":{"line":364,"column":1},"end":{"line":365,"column":1}},"children":[{"type":"text","value":"Avoiding repeated expensive calculations","position":{"start":{"line":364,"column":1},"end":{"line":364,"column":1}},"key":"nQ8mxwtpUn"}],"key":"bGfcgA3mp8"}],"key":"zKjJ19Glwu"},{"type":"paragraph","position":{"start":{"line":366,"column":1},"end":{"line":366,"column":1}},"children":[{"type":"text","value":"Avoid it when:","position":{"start":{"line":366,"column":1},"end":{"line":366,"column":1}},"key":"SRFSws5DW0"}],"key":"awqKp1GXRG"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":367,"column":1},"end":{"line":369,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":367,"column":1},"end":{"line":367,"column":1}},"children":[{"type":"text","value":"It makes the code harder to read","position":{"start":{"line":367,"column":1},"end":{"line":367,"column":1}},"key":"gi0Q0kf27Y"}],"key":"BkAC7CwWRU"},{"type":"listItem","spread":true,"position":{"start":{"line":368,"column":1},"end":{"line":368,"column":1}},"children":[{"type":"text","value":"Working with Python < 3.8","position":{"start":{"line":368,"column":1},"end":{"line":368,"column":1}},"key":"zUIJ3RDPjG"}],"key":"qJ7KG6B1cR"},{"type":"listItem","spread":true,"position":{"start":{"line":369,"column":1},"end":{"line":369,"column":1}},"children":[{"type":"text","value":"The traditional approach is clearer","position":{"start":{"line":369,"column":1},"end":{"line":369,"column":1}},"key":"Eq6oOLa8rG"}],"key":"hDvv6abDoT"}],"key":"KAvdtzEmdh"}],"class":"note","key":"QiiWZ1Mn7Y"},{"type":"heading","depth":3,"position":{"start":{"line":372,"column":1},"end":{"line":372,"column":1}},"children":[{"type":"text","value":"The Floating-Point Equality Trap","position":{"start":{"line":372,"column":1},"end":{"line":372,"column":1}},"key":"RXyrngt83t"}],"identifier":"the-floating-point-equality-trap","label":"The Floating-Point Equality Trap","html_id":"the-floating-point-equality-trap","implicit":true,"key":"dN9Zgy6mey"},{"type":"paragraph","position":{"start":{"line":374,"column":1},"end":{"line":374,"column":1}},"children":[{"type":"text","value":"Never use ","position":{"start":{"line":374,"column":1},"end":{"line":374,"column":1}},"key":"cXpQpuwfB5"},{"type":"strong","position":{"start":{"line":374,"column":1},"end":{"line":374,"column":1}},"children":[{"type":"text","value":"==","position":{"start":{"line":374,"column":1},"end":{"line":374,"column":1}},"key":"GTZ3I1JfsU"}],"key":"Y3fM3NCmqA"},{"type":"text","value":" with floating-point numbers! Even tiny rounding errors break equality:","position":{"start":{"line":374,"column":1},"end":{"line":374,"column":1}},"key":"pkxOgZqnqP"}],"key":"hqxZvG3JIQ"}],"key":"OfVS2Y2icp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# The floating-point trap strikes!\ncalculated_temp = 5778.0000000001\nexpected_temp = 5778.0\n\nprint(f\"Calculated == Expected? {calculated_temp == expected_temp}\")  # False!\nprint(f\"Tiny difference: {calculated_temp - expected_temp:.2e}\")\n\n# The solution: tolerance-based comparison\ndef safe_equal(a, b, rel_tol=1e-9, abs_tol=1e-12):\n    \"\"\"\n    Safe floating-point comparison for scientific computing.\n    Used in actual telescope pointing systems!\n    \"\"\"\n    # Handle exact equality (includes infinities)\n    if a == b:\n        return True\n    \n    # Handle NaN (NaN != NaN by IEEE standard)\n    if math.isnan(a) or math.isnan(b):\n        return False\n    \n    # Handle infinity cases\n    if math.isinf(a) or math.isinf(b):\n        return a == b\n    \n    # Normal comparison with tolerance\n    # Note: math.isclose() does this internally, but understanding it matters!\n    return abs(a - b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)\n\n# Test our safe comparison\nprint(f\"\\n0.1 + 0.2 == 0.3? {0.1 + 0.2 == 0.3}\")  # False!\nprint(f\"Safe equal? {safe_equal(0.1 + 0.2, 0.3)}\")  # True!\nprint(f\"math.isclose? {math.isclose(0.1 + 0.2, 0.3)}\")  # True!","key":"SNvd9MXLj4"},{"type":"output","id":"Y4KHjj7Rww5lYE_JHRDfo","data":[],"key":"L1qv9yq525"}],"key":"pS6D4MUk8t"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"⚠️ Common Bug Alert: The Equality Trap","position":{"start":{"line":412,"column":1},"end":{"line":412,"column":1}},"key":"RmAlKpRI7K"}],"key":"GDkxs49JjH"},{"type":"paragraph","position":{"start":{"line":415,"column":1},"end":{"line":415,"column":1}},"children":[{"type":"strong","position":{"start":{"line":415,"column":1},"end":{"line":415,"column":1}},"children":[{"type":"text","value":"Never use ","position":{"start":{"line":415,"column":1},"end":{"line":415,"column":1}},"key":"Y2otkmdodF"},{"type":"inlineCode","value":"==","position":{"start":{"line":415,"column":1},"end":{"line":415,"column":1}},"key":"O1XG1ZNyl9"},{"type":"text","value":" with floating-point numbers!","position":{"start":{"line":415,"column":1},"end":{"line":415,"column":1}},"key":"LN5lXfrAsq"}],"key":"xInAollD9j"},{"type":"text","value":" Even tiny rounding errors break equality.","position":{"start":{"line":415,"column":1},"end":{"line":415,"column":1}},"key":"wiKW2e1cXe"}],"key":"fE0g6K817D"},{"type":"paragraph","position":{"start":{"line":417,"column":1},"end":{"line":417,"column":1}},"children":[{"type":"strong","position":{"start":{"line":417,"column":1},"end":{"line":417,"column":1}},"children":[{"type":"text","value":"Wrong (caused real satellite collision near-miss):","position":{"start":{"line":417,"column":1},"end":{"line":417,"column":1}},"key":"OGO4rIumjR"}],"key":"HEWo2TOUHn"}],"key":"u4ZAkoM1zM"},{"type":"code","lang":"python","value":"if velocity == 0.0:  # Dangerous!\n    print(\"At rest\")","position":{"start":{"line":418,"column":1},"end":{"line":421,"column":1}},"key":"uDonWBUGPr"},{"type":"paragraph","position":{"start":{"line":423,"column":1},"end":{"line":423,"column":1}},"children":[{"type":"strong","position":{"start":{"line":423,"column":1},"end":{"line":423,"column":1}},"children":[{"type":"text","value":"Right (used in actual spacecraft code):","position":{"start":{"line":423,"column":1},"end":{"line":423,"column":1}},"key":"bFZMYZEctX"}],"key":"PytFnCbksl"}],"key":"wJe0Ycrcta"},{"type":"code","lang":"python","value":"if abs(velocity) < 1e-10:  # Safe!\n    print(\"Effectively at rest\")","position":{"start":{"line":424,"column":1},"end":{"line":427,"column":1}},"key":"GgLCuKh2mp"},{"type":"paragraph","position":{"start":{"line":429,"column":1},"end":{"line":429,"column":1}},"children":[{"type":"text","value":"The International Space Station uses similar tolerance checks for all docking maneuvers!","position":{"start":{"line":429,"column":1},"end":{"line":429,"column":1}},"key":"yPYVQr9DHL"}],"key":"t3tybp30gL"}],"class":"warning","key":"XBRSOgvuJp"},{"type":"heading","depth":3,"position":{"start":{"line":432,"column":1},"end":{"line":432,"column":1}},"children":[{"type":"text","value":"Short-Circuit Evaluation: Order Matters!","position":{"start":{"line":432,"column":1},"end":{"line":432,"column":1}},"key":"xADz74fpMX"}],"identifier":"short-circuit-evaluation-order-matters","label":"Short-Circuit Evaluation: Order Matters!","html_id":"short-circuit-evaluation-order-matters","implicit":true,"key":"IPZStsG8A5"},{"type":"aside","children":[{"type":"paragraph","position":{"start":{"line":435,"column":1},"end":{"line":436,"column":1}},"children":[{"type":"strong","position":{"start":{"line":435,"column":1},"end":{"line":435,"column":1}},"children":[{"type":"text","value":"short-circuit evaluation","position":{"start":{"line":435,"column":1},"end":{"line":435,"column":1}},"key":"cBoTR80Sey"}],"key":"arkUR3zd0m"},{"type":"text","value":"\nStopping logical evaluation once result is determined","position":{"start":{"line":435,"column":1},"end":{"line":435,"column":1}},"key":"EHi26KvDJC"}],"key":"VyYsa9vpOx"}],"key":"KyAVzEbSzD"},{"type":"paragraph","position":{"start":{"line":439,"column":1},"end":{"line":439,"column":1}},"children":[{"type":"text","value":"Python’s ","position":{"start":{"line":439,"column":1},"end":{"line":439,"column":1}},"key":"Tqvc07UMUh"},{"type":"strong","position":{"start":{"line":439,"column":1},"end":{"line":439,"column":1}},"children":[{"type":"text","value":"and","position":{"start":{"line":439,"column":1},"end":{"line":439,"column":1}},"key":"m1mlw2IZTA"}],"key":"GeoPBPQXDC"},{"type":"text","value":" and ","position":{"start":{"line":439,"column":1},"end":{"line":439,"column":1}},"key":"Cu05sorvUK"},{"type":"strong","position":{"start":{"line":439,"column":1},"end":{"line":439,"column":1}},"children":[{"type":"text","value":"or","position":{"start":{"line":439,"column":1},"end":{"line":439,"column":1}},"key":"aOEdBCClm2"}],"key":"ZUy6ideqDD"},{"type":"text","value":" operators use short-circuit evaluation — they stop evaluating as soon as the result is determined:","position":{"start":{"line":439,"column":1},"end":{"line":439,"column":1}},"key":"BPPKqRY2Yx"}],"key":"CU9GeAbEHe"}],"key":"nio33fZFGv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Short-circuit evaluation prevents errors and saves computation\nstellar_data = []  # Empty for demonstration\n\n# WRONG - will crash if data is empty!\n# if stellar_data[0] > 0 and len(stellar_data) > 0:  # IndexError!\n\n# CORRECT - checks length first (short-circuits if empty)\nif len(stellar_data) > 0 and stellar_data[0] > 0:\n    print(\"First star has positive measurement\")\nelse:\n    print(\"No data or first measurement not positive\")\n\n# Even more Pythonic (empty list evaluates to False)\nif stellar_data and stellar_data[0] > 0:\n    print(\"First star has positive measurement\")\n\n# OR also short-circuits\ndef expensive_check():\n    print(\"  Running expensive calculation...\")\n    return True\n\n# This won't call expensive_check() because True or anything is True\nprint(\"\\nShort-circuit OR demonstration:\")\nresult = True or expensive_check()  # expensive_check never runs!\nprint(f\"Result: {result}\")\n\n# But this will call it\nresult = False or expensive_check()  # expensive_check must run\nprint(f\"Result: {result}\")","key":"A0cz0Wd07d"},{"type":"output","id":"7HeG12W3qDf-dYNaGgrAO","data":[],"key":"x2bzpwUQ07"}],"key":"Vexh1ei5nW"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"🌟 Why This Matters: Satellite Collision Avoidance","position":{"start":{"line":473,"column":1},"end":{"line":473,"column":1}},"key":"mlk8PLjtUc"}],"key":"XNz4s7Q2ea"},{"type":"paragraph","position":{"start":{"line":476,"column":1},"end":{"line":476,"column":1}},"children":[{"type":"text","value":"The European Space Agency uses boolean logic chains for collision warnings:","position":{"start":{"line":476,"column":1},"end":{"line":476,"column":1}},"key":"GKNqgkwAZZ"}],"key":"X4GE7wGdTE"},{"type":"code","lang":"python","value":"def check_collision_risk(satellite1, satellite2):\n    \"\"\"Actual logic used for collision avoidance (simplified)\"\"\"\n    \n    # Order matters for efficiency!\n    # Check cheap calculations first\n    if distance > safe_threshold:  \n        return False  # No need to calculate velocities\n    \n    # Only if close, calculate expensive velocity vectors\n    if relative_velocity < 0:  \n        return False  # Moving apart\n    \n    # Only if approaching, do complex uncertainty calculation\n    if combined_uncertainty < max_allowed:\n        return True  # COLLISION RISK!\n    \n    return False","position":{"start":{"line":478,"column":1},"end":{"line":496,"column":1}},"key":"uOOTowf0d6"},{"type":"paragraph","position":{"start":{"line":498,"column":1},"end":{"line":498,"column":1}},"children":[{"type":"text","value":"Checking distance first avoids millions of expensive velocity calculations per day. A single wrong comparison could mean losing a $500 million satellite! In 2009, Iridium 33 and Cosmos 2251 collided because their warning system failed to properly evaluate these conditions.","position":{"start":{"line":498,"column":1},"end":{"line":498,"column":1}},"key":"vzURCnO0Lo"}],"key":"T9Nez0SnmB"},{"type":"paragraph","position":{"start":{"line":500,"column":1},"end":{"line":500,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":500,"column":1},"end":{"line":500,"column":1}},"children":[{"type":"text","value":"Note: This example simplifies the actual collision avoidance algorithms for pedagogical clarity. Real systems use complex orbital mechanics and probability distributions, but the core principle of ordered boolean evaluation remains crucial.","position":{"start":{"line":500,"column":1},"end":{"line":500,"column":1}},"key":"BDTjWFGu8Q"}],"key":"OT3kpLytoG"}],"key":"YB7sa9k3TI"}],"class":"tip, dropdown","key":"umQ5bDZvuV"},{"type":"heading","depth":2,"position":{"start":{"line":503,"column":1},"end":{"line":503,"column":1}},"children":[{"type":"text","value":"3.3 Conditional Statements: Teaching Computers to Decide","position":{"start":{"line":503,"column":1},"end":{"line":503,"column":1}},"key":"DhkdX4Z45d"}],"identifier":"id-3-3-conditional-statements-teaching-computers-to-decide","label":"3.3 Conditional Statements: Teaching Computers to Decide","html_id":"id-3-3-conditional-statements-teaching-computers-to-decide","implicit":true,"key":"KUsVrrdmXL"},{"type":"aside","children":[{"type":"paragraph","position":{"start":{"line":506,"column":1},"end":{"line":507,"column":1}},"children":[{"type":"strong","position":{"start":{"line":506,"column":1},"end":{"line":506,"column":1}},"children":[{"type":"text","value":"guard clause","position":{"start":{"line":506,"column":1},"end":{"line":506,"column":1}},"key":"sorIjS2jFF"}],"key":"k7gFTtQ52V"},{"type":"text","value":"\nEarly return statement that handles edge cases before main logic","position":{"start":{"line":506,"column":1},"end":{"line":506,"column":1}},"key":"LLENybhE9V"}],"key":"FIxQFhPU6V"}],"key":"Amy5gam4vq"},{"type":"paragraph","position":{"start":{"line":510,"column":1},"end":{"line":510,"column":1}},"children":[{"type":"text","value":"Conditional statements are where your code makes decisions. In scientific computing, these decisions often involve numerical thresholds, convergence criteria, and boundary conditions. Let’s build your intuition for writing robust conditionals that could run on spacecraft or control telescopes!","position":{"start":{"line":510,"column":1},"end":{"line":510,"column":1}},"key":"hTuSz2EERO"}],"key":"yrS822bt1T"},{"type":"heading","depth":3,"position":{"start":{"line":512,"column":1},"end":{"line":512,"column":1}},"children":[{"type":"text","value":"The if Statement: Your First Decision Maker","position":{"start":{"line":512,"column":1},"end":{"line":512,"column":1}},"key":"eVsOpa9tYT"}],"identifier":"the-if-statement-your-first-decision-maker","label":"The if Statement: Your First Decision Maker","html_id":"the-if-statement-your-first-decision-maker","implicit":true,"key":"HL1MFEIJTq"},{"type":"paragraph","position":{"start":{"line":514,"column":1},"end":{"line":514,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":514,"column":1},"end":{"line":514,"column":1}},"key":"Vv4PwojuqE"},{"type":"strong","position":{"start":{"line":514,"column":1},"end":{"line":514,"column":1}},"children":[{"type":"text","value":"if","position":{"start":{"line":514,"column":1},"end":{"line":514,"column":1}},"key":"MQS30FcWg0"}],"key":"e8hmGgfd85"},{"type":"text","value":" statement is the simplest conditional — it executes code only when a condition is true:","position":{"start":{"line":514,"column":1},"end":{"line":514,"column":1}},"key":"jEChIWANyC"}],"key":"OPNHTqKW0Z"}],"key":"a8NIborbPU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Basic if statement\nmagnitude = 4.5\n\nif magnitude < 6.0:\n    print(f\"Star is visible to naked eye (mag {magnitude})\")\n\n# Nothing happens if condition is false\nmagnitude = 8.0\nif magnitude < 6.0:\n    print(\"This won't print\")\n    \n# Multiple statements in if block\nstellar_mass = 10.0  # Solar masses\n\nif stellar_mass > 8:\n    print(\"Massive star detected!\")\n    print(f\"Mass: {stellar_mass} M☉\")\n    print(\"Will end as supernova\")\n    remnant = \"neutron star or black hole\"","key":"S1aKSyuqO4"},{"type":"output","id":"bzWLx8VhESU0kaLxgL5F4","data":[],"key":"fuFjIsOvCx"}],"key":"ATFy67D3uD"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":538,"column":1},"end":{"line":538,"column":1}},"children":[{"type":"text","value":"The if-else Statement: Binary Decisions","position":{"start":{"line":538,"column":1},"end":{"line":538,"column":1}},"key":"qGpVrsSMcm"}],"identifier":"the-if-else-statement-binary-decisions","label":"The if-else Statement: Binary Decisions","html_id":"the-if-else-statement-binary-decisions","implicit":true,"key":"LtlhSbiYZU"},{"type":"paragraph","position":{"start":{"line":540,"column":1},"end":{"line":540,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":540,"column":1},"end":{"line":540,"column":1}},"key":"a2WPtkhhKF"},{"type":"strong","position":{"start":{"line":540,"column":1},"end":{"line":540,"column":1}},"children":[{"type":"text","value":"else","position":{"start":{"line":540,"column":1},"end":{"line":540,"column":1}},"key":"yZFHJBN6d8"}],"key":"U1w3knTLLv"},{"type":"text","value":" clause provides an alternative when the condition is false:","position":{"start":{"line":540,"column":1},"end":{"line":540,"column":1}},"key":"LeDSx8bdss"}],"key":"Ec5QQ49bqH"}],"key":"dO4GpnxZYn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Binary decision with if-else\nredshift = 0.8\n\nif redshift < 0.1:\n    classification = \"nearby galaxy\"\nelse:\n    classification = \"distant galaxy\"\n    \nprint(f\"z = {redshift}: {classification}\")\n\n# You can have multiple statements in each block\nobservation_snr = 3.5  # Signal-to-noise ratio\n\nif observation_snr >= 5.0:\n    print(\"High quality detection\")\n    process_immediately = True\n    confidence = \"high\"\nelse:\n    print(\"Low SNR - needs verification\")\n    process_immediately = False\n    confidence = \"low\"","key":"tW5HZl7yuh"},{"type":"output","id":"PjImYYBAyORvgyFw2dbjX","data":[],"key":"EPluihcRGQ"}],"key":"IMNqfvj1kX"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":566,"column":1},"end":{"line":566,"column":1}},"children":[{"type":"text","value":"The elif Statement: Multiple Choices","position":{"start":{"line":566,"column":1},"end":{"line":566,"column":1}},"key":"yrFG2wKCYA"}],"identifier":"the-elif-statement-multiple-choices","label":"The elif Statement: Multiple Choices","html_id":"the-elif-statement-multiple-choices","implicit":true,"key":"P7ov8qolvb"},{"type":"paragraph","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"key":"h2UM62ShGw"},{"type":"strong","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"children":[{"type":"text","value":"elif","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"key":"WdHsdlbgjm"}],"key":"afxB58zQxq"},{"type":"text","value":" (else if) statement allows multiple conditions to be checked in sequence:","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"key":"WqMhZ3DEoq"}],"key":"P86VvMpn7f"}],"key":"eyt4zqqBYn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def classify_stellar_remnant(mass_solar):\n    \"\"\"\n    Determine stellar remnant type based on initial mass.\n    Demonstrates guard clauses and elif chains.\n    Based on Chandrasekhar limit and stellar evolution theory.\n    \"\"\"\n    # Guard clauses - validate input FIRST\n    if mass_solar <= 0:\n        raise ValueError(f\"Mass must be positive: {mass_solar}\")\n    \n    if not math.isfinite(mass_solar):\n        raise ValueError(f\"Mass must be finite: {mass_solar}\")\n    \n    # Main classification logic with elif chain\n    if mass_solar < 0.08:\n        remnant = \"brown dwarf (failed star)\"\n    elif mass_solar < 8:\n        remnant = \"white dwarf\"\n    elif mass_solar < 25:\n        remnant = \"neutron star\"\n    else:  # Final catch-all\n        remnant = \"black hole\"\n    \n    # Add uncertainty near boundaries (real issue in astronomy!)\n    boundaries = [0.08, 8, 25]\n    min_distance = min(abs(mass_solar - b) for b in boundaries)\n    \n    if min_distance < 0.5:\n        remnant += \" (near boundary - uncertain)\"\n    \n    return remnant\n\n# Test our classifier\nprint(classify_stellar_remnant(1.0))   # Our Sun's fate\nprint(classify_stellar_remnant(7.8))   # Near boundary!\nprint(classify_stellar_remnant(30))    # Massive star fate","key":"smhLFybB65"},{"type":"output","id":"9ZgPX7w5RgSYw6_4gvBJb","data":[],"key":"JrtGghuHqp"}],"key":"XG6mWIIL6i"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":609,"column":1},"end":{"line":609,"column":1}},"children":[{"type":"text","value":"Guard Clauses: Fail Fast, Fail Clear","position":{"start":{"line":609,"column":1},"end":{"line":609,"column":1}},"key":"fzbI7h3Nwf"}],"identifier":"guard-clauses-fail-fast-fail-clear","label":"Guard Clauses: Fail Fast, Fail Clear","html_id":"guard-clauses-fail-fast-fail-clear","implicit":true,"key":"aVAtW1hTr7"},{"type":"paragraph","position":{"start":{"line":611,"column":1},"end":{"line":611,"column":1}},"children":[{"type":"text","value":"Guard clauses handle special cases immediately, preventing deep nesting and making code clearer. This pattern is essential for scientific code where invalid inputs can cause subtle bugs hours into a simulation!","position":{"start":{"line":611,"column":1},"end":{"line":611,"column":1}},"key":"isgcDB8kSR"}],"key":"yQzbmJKFvD"}],"key":"gKECPIQ6GM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def calculate_orbital_period(a, M, validate=True):\n    \"\"\"\n    Kepler's third law with comprehensive validation.\n    This defensive style could have saved Mars Climate Orbiter!\n    \n    Parameters:\n        a: Semi-major axis [AU]\n        M: Central mass [solar masses]\n    \"\"\"\n    # Guard clauses handle problems immediately\n    if validate:\n        if a <= 0:\n            raise ValueError(f\"Semi-major axis must be positive: {a} AU\")\n        if M <= 0:\n            raise ValueError(f\"Mass must be positive: {M} M☉\")\n        \n        # Check for orbit inside Schwarzschild radius!\n        rs_au = 2.95e-8 * M  # Schwarzschild radius in AU\n        if a < rs_au:\n            raise ValueError(f\"Orbit inside black hole event horizon: a={a} AU, Rs={rs_au} AU\")\n    \n    # Main calculation - only runs if guards pass\n    G_au_msun = 39.478  # G in AU³/M☉/year²\n    period_years = math.sqrt(a**3 / M)  # Simplified Kepler's third law\n    \n    # Sanity check result\n    if validate and period_years > 13.8e9:\n        import warnings\n        warnings.warn(f\"Period exceeds age of universe: {period_years:.2e} years\")\n    \n    return period_years\n\n# Test with real systems\nprint(f\"Earth: {calculate_orbital_period(1.0, 1.0):.2f} years\")\nprint(f\"Mercury: {calculate_orbital_period(0.387, 1.0):.2f} years\")\nprint(f\"Proxima Centauri b: {calculate_orbital_period(0.0485, 0.122):.3f} years\")","key":"nVJxROZu81"},{"type":"output","id":"x4EWEWW8QztljPru7UFh3","data":[],"key":"OxHRTYOYjN"}],"key":"uRferx8cLx"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":652,"column":1},"end":{"line":652,"column":1}},"children":[{"type":"text","value":"The Ternary Operator: Compact Conditionals","position":{"start":{"line":652,"column":1},"end":{"line":652,"column":1}},"key":"ObIgKi6wme"}],"identifier":"the-ternary-operator-compact-conditionals","label":"The Ternary Operator: Compact Conditionals","html_id":"the-ternary-operator-compact-conditionals","implicit":true,"key":"qKExovEKw6"},{"type":"paragraph","position":{"start":{"line":654,"column":1},"end":{"line":654,"column":1}},"children":[{"type":"text","value":"Python’s ternary operator provides a compact way to write simple if-else statements:","position":{"start":{"line":654,"column":1},"end":{"line":654,"column":1}},"key":"QrvIwPKi7u"}],"key":"pzzhNlPAeS"}],"key":"J6olmjz403"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Ternary operator: value_if_true if condition else value_if_false\nmagnitude = 3.5\nvisibility = \"visible\" if magnitude < 6.0 else \"not visible\"\nprint(f\"Star with magnitude {magnitude} is {visibility}\")\n\n# Useful for setting defaults based on conditions\nexposure_time = 30  # seconds\nquality = \"good\" if exposure_time > 10 else \"poor\"\n\n# Can be nested but don't overdo it!\nstellar_class = \"G\"\ntemperature = 5778 if stellar_class == \"G\" else (7500 if stellar_class == \"A\" else 3500)\nprint(f\"Class {stellar_class} star: ~{temperature}K\")","key":"Z27anOBBYe"},{"type":"output","id":"-Lj4vA67ETjpDKabvtcNS","data":[],"key":"oh4lpEiO1S"}],"key":"O9j6dQtZ8S"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":672,"column":1},"end":{"line":672,"column":1}},"children":[{"type":"text","value":"The Variable Star Thread Continues","position":{"start":{"line":672,"column":1},"end":{"line":672,"column":1}},"key":"c1OHG1w1tq"}],"identifier":"the-variable-star-thread-continues","label":"The Variable Star Thread Continues","html_id":"the-variable-star-thread-continues","implicit":true,"key":"t9yCRgxEeG"},{"type":"paragraph","position":{"start":{"line":674,"column":1},"end":{"line":674,"column":1}},"children":[{"type":"text","value":"Let’s apply our control flow knowledge to extend our variable star analysis from Chapters 1 and 2:","position":{"start":{"line":674,"column":1},"end":{"line":674,"column":1}},"key":"tfDsx800GW"}],"key":"TQv681UfrQ"}],"key":"scjXwh3otd"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Chapter 3: Variable Star - Adding Periodicity Detection\nimport json\nimport math\n\n# Create sample data (in real use, load from Chapter 2)\nstar = {\n    'name': 'Delta Cephei',\n    'period': 5.366319,\n    'mag_mean': 3.95,\n    'mag_amp': 0.88,\n    'phase_function': 'sinusoidal'\n}\n\ndef analyze_phase_coverage(times, period, min_coverage=0.6):\n    \"\"\"\n    Check if observations adequately sample the phase space.\n    Critical for period determination accuracy!\n    \"\"\"\n    # Guard clause\n    if not times or period <= 0:\n        return False, \"Invalid input data\"\n    \n    # Calculate phases\n    phases = [(t % period) / period for t in times]\n    \n    # Divide phase space into bins\n    n_bins = 10\n    bins_filled = set()\n    \n    for phase in phases:\n        bin_index = int(phase * n_bins)\n        bins_filled.add(bin_index)\n    \n    coverage = len(bins_filled) / n_bins\n    \n    # Conditional logic for assessment\n    if coverage >= min_coverage:\n        quality = \"good\" if coverage > 0.8 else \"adequate\"\n        return True, f\"Phase coverage {quality}: {coverage:.1%}\"\n    else:\n        return False, f\"Insufficient coverage: {coverage:.1%} < {min_coverage:.1%}\"\n\n# Test with simulated observations\ntest_times = [0.5, 1.2, 2.7, 3.1, 4.8, 5.9, 7.2, 8.5, 9.1, 10.3]\nadequate, message = analyze_phase_coverage(test_times, star['period'])\nprint(f\"Delta Cephei observations: {message}\")\n\n# Save enhanced data for Chapter 4\nstar['last_analysis'] = {\n    'phase_coverage': adequate,\n    'message': message,\n    'n_observations': len(test_times)\n}\n\ntry:\n    with open('variable_star_ch3.json', 'w') as f:\n        json.dump(star, f, indent=2)\n    print(\"✓ Data saved for Chapter 4!\")\nexcept IOError as e:\n    print(f\"✗ Could not save: {e}\")","key":"wt8Kru22kJ"},{"type":"output","id":"KPmxg2yK0ojEnZ1gAp82N","data":[],"key":"kmYeplj9RG"}],"key":"Z18o1tM4d2"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"🌟 Why This Matters: The Mars Climate Orbiter Disaster","position":{"start":{"line":739,"column":1},"end":{"line":739,"column":1}},"key":"rKYFSaeL9l"}],"key":"cMmDMb2vqv"},{"type":"paragraph","position":{"start":{"line":742,"column":1},"end":{"line":742,"column":1}},"children":[{"type":"text","value":"In 1999, NASA lost the $327.6 million Mars Climate Orbiter because one team used metric units while another used imperial. A simple guard clause could have saved it:","position":{"start":{"line":742,"column":1},"end":{"line":742,"column":1}},"key":"vTOYNOQSO1"}],"key":"w1sIuZsteZ"},{"type":"paragraph","position":{"start":{"line":744,"column":1},"end":{"line":744,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":744,"column":1},"end":{"line":744,"column":1}},"children":[{"type":"text","value":"Note: The $327.6 million figure represents total mission cost. This anecdote simplifies a complex failure to emphasize the importance of unit validation. The actual failure involved multiple factors, but the unit confusion was the primary cause identified in NASA’s investigation reports.","position":{"start":{"line":744,"column":1},"end":{"line":744,"column":1}},"key":"YJUEbiAZUT"}],"key":"Ip4k1K67o8"}],"key":"Qp9R6DUjdc"},{"type":"code","lang":"python","value":"def process_thrust_data(force, units):\n    \"\"\"This guard clause would have saved $327 million!\"\"\"\n    \n    # Validate units BEFORE processing\n    valid_units = {'N': 1.0, 'lbf': 4.448222}  # Conversion factors\n    \n    if units not in valid_units:\n        raise ValueError(f\"Unknown units: {units}. Use 'N' or 'lbf'\")\n    \n    # Convert to standard units (Newtons)\n    force_newtons = force * valid_units[units]\n    \n    # Additional sanity check\n    if force_newtons > 1000:  # Typical max thruster force\n        warnings.warn(f\"Unusually high thrust: {force_newtons} N\")\n    \n    return force_newtons\n\n# The actual error: ground software sent lbf, flight expected N\n# Result: 4.45× error accumulated over months!","position":{"start":{"line":746,"column":1},"end":{"line":767,"column":1}},"key":"hHET1c2pUj"},{"type":"paragraph","position":{"start":{"line":769,"column":1},"end":{"line":769,"column":1}},"children":[{"type":"text","value":"The orbiter entered Mars atmosphere at 57 km instead of 226 km altitude and disintegrated. Your guard clauses aren’t just good practice — they prevent disasters!","position":{"start":{"line":769,"column":1},"end":{"line":769,"column":1}},"key":"bEUrtdHrTf"}],"key":"Mp5VGQclqQ"}],"class":"tip, dropdown","key":"NFf26OPN0e"},{"type":"heading","depth":2,"position":{"start":{"line":772,"column":1},"end":{"line":772,"column":1}},"children":[{"type":"text","value":"3.4 Loops: The Heart of Scientific Computation","position":{"start":{"line":772,"column":1},"end":{"line":772,"column":1}},"key":"G5hJrFT5x0"}],"identifier":"id-3-4-loops-the-heart-of-scientific-computation","label":"3.4 Loops: The Heart of Scientific Computation","html_id":"id-3-4-loops-the-heart-of-scientific-computation","implicit":true,"key":"qbO4ptNwS7"},{"type":"paragraph","position":{"start":{"line":774,"column":1},"end":{"line":774,"column":1}},"children":[{"type":"text","value":"Now that you’ve mastered making decisions with conditionals, let’s make your code repeat tasks efficiently! Loops are where your programs gain superpowers — they’re the difference between analyzing one star and analyzing millions. Every N-body simulation, every light curve analysis, every Monte Carlo calculation depends on loops. The patterns you learn here will appear in every algorithm you write for the rest of your career.","position":{"start":{"line":774,"column":1},"end":{"line":774,"column":1}},"key":"EZfypzZiLo"}],"key":"dFjUW1hJeq"},{"type":"heading","depth":3,"position":{"start":{"line":776,"column":1},"end":{"line":776,"column":1}},"children":[{"type":"text","value":"The for Loop: Iterating Over Sequences","position":{"start":{"line":776,"column":1},"end":{"line":776,"column":1}},"key":"iSHXNWNAT4"}],"identifier":"the-for-loop-iterating-over-sequences","label":"The for Loop: Iterating Over Sequences","html_id":"the-for-loop-iterating-over-sequences","implicit":true,"key":"vrSNb62kar"},{"type":"paragraph","position":{"start":{"line":778,"column":1},"end":{"line":778,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":778,"column":1},"end":{"line":778,"column":1}},"key":"nUpCwTP1ie"},{"type":"strong","position":{"start":{"line":778,"column":1},"end":{"line":778,"column":1}},"children":[{"type":"text","value":"for","position":{"start":{"line":778,"column":1},"end":{"line":778,"column":1}},"key":"vK55uQVkgy"}],"key":"Um6WepAQn3"},{"type":"text","value":" loop iterates over any sequence (list, tuple, string, range):","position":{"start":{"line":778,"column":1},"end":{"line":778,"column":1}},"key":"RvJGbLuwg3"}],"key":"JWv8S3lSqh"}],"key":"twJGzIzOuN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Basic for loop\nstellar_types = ['O', 'B', 'A', 'F', 'G', 'K', 'M']\n\nfor spectral_class in stellar_types:\n    print(f\"Class {spectral_class} star\")\n\n# Using range() for counting\nprint(\"\\nCounting with range:\")\nfor i in range(5):  # 0, 1, 2, 3, 4 (not 5!)\n    print(f\"Observation {i}\")\n\n# Range with start, stop, step\nprint(\"\\nEvery 2nd hour from 20:00 to 02:00:\")\nfor hour in range(20, 26, 2):  # 20, 22, 24\n    print(f\"{hour:02d}:00\")","key":"JwNH4k3OkV"},{"type":"output","id":"kAGq9so85RPFvmet4lzeU","data":[],"key":"jtsoVTEtx5"}],"key":"bQniSdkgzY"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":798,"column":1},"end":{"line":798,"column":1}},"children":[{"type":"text","value":"The Accumulator Pattern in Astronomy","position":{"start":{"line":798,"column":1},"end":{"line":798,"column":1}},"key":"p4a8YytR78"}],"identifier":"the-accumulator-pattern-in-astronomy","label":"The Accumulator Pattern in Astronomy","html_id":"the-accumulator-pattern-in-astronomy","implicit":true,"key":"AcsTwjyDRc"},{"type":"aside","children":[{"type":"paragraph","position":{"start":{"line":801,"column":1},"end":{"line":802,"column":1}},"children":[{"type":"strong","position":{"start":{"line":801,"column":1},"end":{"line":801,"column":1}},"children":[{"type":"text","value":"accumulator pattern","position":{"start":{"line":801,"column":1},"end":{"line":801,"column":1}},"key":"sMM20C8xRe"}],"key":"OdAQxBxZjF"},{"type":"text","value":"\nIteratively combining values into a running aggregate","position":{"start":{"line":801,"column":1},"end":{"line":801,"column":1}},"key":"PE2P8TBkMW"}],"key":"UxH17KJ81N"}],"key":"evviqyk5cs"},{"type":"paragraph","position":{"start":{"line":805,"column":1},"end":{"line":805,"column":1}},"children":[{"type":"text","value":"The accumulator pattern is fundamental to scientific computing:","position":{"start":{"line":805,"column":1},"end":{"line":805,"column":1}},"key":"J9yTzRSkwF"}],"key":"BsnPHc9cre"}],"key":"vCIFnFkT7z"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Calculating center of mass for a star cluster\nstar_masses = [1.2, 0.8, 2.1, 0.5, 1.5]  # Solar masses\nstar_positions = [0.1, 0.3, 0.5, 0.7, 0.9]  # Parsecs from origin\n\ntotal_mass = 0\nweighted_position = 0\n\nfor mass, position in zip(star_masses, star_positions):\n    total_mass += mass\n    weighted_position += mass * position\n\ncenter_of_mass = weighted_position / total_mass\nprint(f\"Cluster center of mass: {center_of_mass:.3f} pc\")\nprint(f\"Total cluster mass: {total_mass:.1f} M☉\")\n\n# This same pattern calculates:\n# - Barycenter of binary systems (how we detect exoplanets!)\n# - Average stellar metallicity in galaxies\n# - Integrated luminosity functions\n# - Weighted mean magnitudes","key":"ka8g7LjxwD"},{"type":"output","id":"52oxGmkwQbTT7nkrg-l13","data":[],"key":"xNAvCscni9"}],"key":"V4Y0pvtcuP"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":830,"column":1},"end":{"line":830,"column":1}},"children":[{"type":"text","value":"Common for Loop Patterns","position":{"start":{"line":830,"column":1},"end":{"line":830,"column":1}},"key":"NvDYBJBFQx"}],"identifier":"common-for-loop-patterns","label":"Common for Loop Patterns","html_id":"common-for-loop-patterns","implicit":true,"key":"eok4yWYsET"},{"type":"paragraph","position":{"start":{"line":832,"column":1},"end":{"line":832,"column":1}},"children":[{"type":"text","value":"Python provides several useful functions for loop patterns:","position":{"start":{"line":832,"column":1},"end":{"line":832,"column":1}},"key":"XDXUrgTcP3"}],"key":"o0SA26G8MX"}],"key":"pCUisF2oOf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# enumerate() gives you index and value\nmagnitudes = [10.2, 10.1, 9.5, 10.3, 8.2, 10.2]\n\nprint(\"Finding bright events with enumerate:\")\nfor i, mag in enumerate(magnitudes):\n    if mag < 9.0:\n        print(f\"  Alert! Index {i}: magnitude {mag}\")\n\n# zip() for parallel iteration\ntimes = [0, 1, 2, 3, 4]  # seconds\npositions = [0, 4.9, 19.6, 44.1, 78.4]  # meters\n\nprint(\"\\nParallel iteration with zip:\")\nfor t, x in zip(times, positions):\n    if t > 0:  # Avoid division by zero\n        velocity = x / t\n        print(f\"  t={t}s: v={velocity:.1f} m/s\")","key":"IDNnEZWthr"},{"type":"output","id":"agyTr_YN3tzdsnkmlciMS","data":[],"key":"TzJbHGGRZC"}],"key":"Id4KbSAMYH"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":854,"column":1},"end":{"line":854,"column":1}},"children":[{"type":"text","value":"The while Loop: Conditional Iteration","position":{"start":{"line":854,"column":1},"end":{"line":854,"column":1}},"key":"WFLdzueYwX"}],"identifier":"the-while-loop-conditional-iteration","label":"The while Loop: Conditional Iteration","html_id":"the-while-loop-conditional-iteration","implicit":true,"key":"bNAX3slwd0"},{"type":"paragraph","position":{"start":{"line":856,"column":1},"end":{"line":856,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":856,"column":1},"end":{"line":856,"column":1}},"key":"yY1VjuzvPa"},{"type":"strong","position":{"start":{"line":856,"column":1},"end":{"line":856,"column":1}},"children":[{"type":"text","value":"while","position":{"start":{"line":856,"column":1},"end":{"line":856,"column":1}},"key":"qzIqMwBjim"}],"key":"VDqTCjiNV6"},{"type":"text","value":" loop continues as long as a condition remains true:","position":{"start":{"line":856,"column":1},"end":{"line":856,"column":1}},"key":"BEOjizDlc4"}],"key":"HwI9rtxn3g"}],"key":"wBZi6mX5DW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Basic while loop\ncount = 0\nwhile count < 3:\n    print(f\"Iteration {count}\")\n    count += 1  # Don't forget to update!\n\n# While loop for convergence\nprint(\"\\nConvergence example:\")\nvalue = 100.0\ntarget = 1.0\niteration = 0\n\nwhile abs(value - target) > 0.01 and iteration < 100:  # Safety limit!\n    value = value * 0.9 + target * 0.1  # Gradual approach\n    iteration += 1\n    if iteration <= 3 or iteration % 10 == 0:  # Print selectively\n        print(f\"  Iter {iteration}: value = {value:.3f}\")\n\nprint(f\"Converged to {value:.3f} after {iteration} iterations\")","key":"xkRqq4BSpv"},{"type":"output","id":"UEFCRhaIjkXGKheT4MxqA","data":[],"key":"Xi6QAlQe24"}],"key":"yIPEHcYvYV"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":880,"column":1},"end":{"line":880,"column":1}},"children":[{"type":"text","value":"Loop Control: break, continue, and else","position":{"start":{"line":880,"column":1},"end":{"line":880,"column":1}},"key":"phWJDLg1PQ"}],"identifier":"loop-control-break-continue-and-else","label":"Loop Control: break, continue, and else","html_id":"loop-control-break-continue-and-else","implicit":true,"key":"OKfMgl5HyJ"},{"type":"paragraph","position":{"start":{"line":882,"column":1},"end":{"line":882,"column":1}},"children":[{"type":"text","value":"Python provides additional loop control statements:","position":{"start":{"line":882,"column":1},"end":{"line":882,"column":1}},"key":"ztFV7xCqai"}],"key":"n5Lkv8ukSF"}],"key":"NBytPcrKqZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# break: Exit loop early\nprint(\"Using break to find first detection:\")\nobservations = [0.1, 0.3, 0.2, 5.8, 0.4, 6.2]\n\nfor obs in observations:\n    if obs > 1.0:\n        print(f\"First significant detection: {obs}\")\n        break  # Stop searching\n        \n# continue: Skip to next iteration\nprint(\"\\nUsing continue to skip bad data:\")\nmeasurements = [1.2, -999, 2.3, -999, 3.4]\n\nfor value in measurements:\n    if value == -999:  # Sentinel value\n        continue  # Skip this iteration\n    print(f\"Processing: {value}\")\n\n# else clause: Runs if loop completes without break\nprint(\"\\nLoop else clause:\")\nsearch_list = [1, 2, 3, 4, 5]\ntarget = 7\n\nfor item in search_list:\n    if item == target:\n        print(\"Found!\")\n        break\nelse:  # This runs because we didn't break\n    print(f\"Target {target} not found in list\")","key":"ZGltjTfsXe"},{"type":"output","id":"v2KIVliDe5iFmT4Jx_sXH","data":[],"key":"FHDuxl9cwS"}],"key":"qKynU0KkLP"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":916,"column":1},"end":{"line":916,"column":1}},"children":[{"type":"text","value":"The pass Statement: Placeholder","position":{"start":{"line":916,"column":1},"end":{"line":916,"column":1}},"key":"P3qbBdztH7"}],"identifier":"the-pass-statement-placeholder","label":"The pass Statement: Placeholder","html_id":"the-pass-statement-placeholder","implicit":true,"key":"icZei8rZ5v"},{"type":"paragraph","position":{"start":{"line":918,"column":1},"end":{"line":918,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":918,"column":1},"end":{"line":918,"column":1}},"key":"nE2khx7KQX"},{"type":"strong","position":{"start":{"line":918,"column":1},"end":{"line":918,"column":1}},"children":[{"type":"text","value":"pass","position":{"start":{"line":918,"column":1},"end":{"line":918,"column":1}},"key":"VrQ7qW7aIq"}],"key":"oy9WogQk71"},{"type":"text","value":" statement does nothing — useful as a placeholder:","position":{"start":{"line":918,"column":1},"end":{"line":918,"column":1}},"key":"qhDPWGXm9Z"}],"key":"KdheDF5Jdi"}],"key":"lHWUsS1yAL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# pass as placeholder\nfor i in range(3):\n    if i == 1:\n        pass  # TODO: Add processing here later\n    else:\n        print(f\"Processing {i}\")\n\n# Often used in exception handling\ntry:\n    risky_operation = 1 / 1  # No error this time\nexcept ZeroDivisionError:\n    pass  # Silently ignore this specific error\n\nprint(\"Continued after pass\")","key":"UxVFA3Nw5Y"},{"type":"output","id":"lOfEZJgeqm57l6EsgXg8O","data":[],"key":"OECNScnu0h"}],"key":"y9gucjUKyg"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":937,"column":1},"end":{"line":937,"column":1}},"children":[{"type":"text","value":"Nested Loops: Processing 2D Data","position":{"start":{"line":937,"column":1},"end":{"line":937,"column":1}},"key":"LT22LiyCnm"}],"identifier":"nested-loops-processing-2d-data","label":"Nested Loops: Processing 2D Data","html_id":"nested-loops-processing-2d-data","implicit":true,"key":"C6VYyxtB4S"},{"type":"paragraph","position":{"start":{"line":939,"column":1},"end":{"line":939,"column":1}},"children":[{"type":"text","value":"Loops can be nested to process multi-dimensional data:","position":{"start":{"line":939,"column":1},"end":{"line":939,"column":1}},"key":"jmt1iJeScf"}],"key":"o8Mpj43WpV"}],"key":"muYERmk27K"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Nested loops for 2D grid (like CCD image)\nprint(\"Processing 3x3 pixel grid:\")\nfor row in range(3):\n    for col in range(3):\n        pixel_value = row * 3 + col  # Simulated pixel value\n        print(f\"({row},{col})={pixel_value}\", end=\"  \")\n    print()  # New line after each row\n\n# More realistic: Finding peaks in 2D data\ndata_2d = [\n    [1, 2, 1],\n    [2, 9, 2],  # Peak at (1,1)\n    [1, 2, 1]\n]\n\nprint(\"\\nFinding peaks in 2D array:\")\nfor i in range(len(data_2d)):\n    for j in range(len(data_2d[i])):\n        if data_2d[i][j] > 5:\n            print(f\"Peak at ({i},{j}): value={data_2d[i][j]}\")","key":"vDl2nkYh3K"},{"type":"output","id":"imWHzWFD2mdfb3I7AYTBl","data":[],"key":"r2GH4SRWHB"}],"key":"vzRv10LyFH"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"⚠️ Common Bug Alert: Off-by-One Errors","position":{"start":{"line":964,"column":1},"end":{"line":964,"column":1}},"key":"AnkPOAPQ2h"}],"key":"csmlEiOapj"},{"type":"paragraph","position":{"start":{"line":967,"column":1},"end":{"line":967,"column":1}},"children":[{"type":"text","value":"The most common bug in all of programming! Python’s zero-indexing catches everyone:","position":{"start":{"line":967,"column":1},"end":{"line":967,"column":1}},"key":"c3crKqifPl"}],"key":"emAuGMPbFL"},{"type":"paragraph","position":{"start":{"line":969,"column":1},"end":{"line":969,"column":1}},"children":[{"type":"strong","position":{"start":{"line":969,"column":1},"end":{"line":969,"column":1}},"children":[{"type":"text","value":"Classic Mistake (lost data from Hubble!):","position":{"start":{"line":969,"column":1},"end":{"line":969,"column":1}},"key":"iKYcDZAeXf"}],"key":"Jgx96d63CF"}],"key":"wuyI9huxKk"},{"type":"code","lang":"python","value":"observations = [1, 2, 3, 4, 5]\n# Trying to process all elements\nfor i in range(1, len(observations)):  # OOPS! Skips first element\n    process(observations[i])\n\n# Or worse - going past the end\nfor i in range(len(observations) + 1):  # IndexError on last iteration!\n    process(observations[i])","position":{"start":{"line":970,"column":1},"end":{"line":979,"column":1}},"key":"vVj5Tnw5y1"},{"type":"paragraph","position":{"start":{"line":981,"column":1},"end":{"line":981,"column":1}},"children":[{"type":"strong","position":{"start":{"line":981,"column":1},"end":{"line":981,"column":1}},"children":[{"type":"text","value":"Remember:","position":{"start":{"line":981,"column":1},"end":{"line":981,"column":1}},"key":"t7vX3gqCTU"}],"key":"sLlYuQ0aM9"}],"key":"JPM5GW6QE4"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":982,"column":1},"end":{"line":985,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":982,"column":1},"end":{"line":982,"column":1}},"children":[{"type":"inlineCode","value":"range(n)","position":{"start":{"line":982,"column":1},"end":{"line":982,"column":1}},"key":"lpEGTatDy8"},{"type":"text","value":" gives 0, 1, ..., n-1 (NOT including n!)","position":{"start":{"line":982,"column":1},"end":{"line":982,"column":1}},"key":"NdBLmGRhCx"}],"key":"VhYHsVCuL1"},{"type":"listItem","spread":true,"position":{"start":{"line":983,"column":1},"end":{"line":983,"column":1}},"children":[{"type":"text","value":"List of length n has indices 0 to n-1","position":{"start":{"line":983,"column":1},"end":{"line":983,"column":1}},"key":"sKUPJQ65R4"}],"key":"P5zROi32zA"},{"type":"listItem","spread":true,"position":{"start":{"line":984,"column":1},"end":{"line":985,"column":1}},"children":[{"type":"text","value":"The last element is at index len(list) - 1","position":{"start":{"line":984,"column":1},"end":{"line":984,"column":1}},"key":"dkG31xJPJY"}],"key":"eaINnRJVsL"}],"key":"NMvKxxSLKh"},{"type":"paragraph","position":{"start":{"line":986,"column":1},"end":{"line":986,"column":1}},"children":[{"type":"text","value":"This bug has crashed spacecraft software, corrupted astronomical databases, and frustrated millions of programmers. Double-check your ranges!","position":{"start":{"line":986,"column":1},"end":{"line":986,"column":1}},"key":"NXSu8YcHLo"}],"key":"jcDlEoank0"}],"class":"warning","key":"kLWz04Vkwv"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"⚠️ Common Bug Alert: Infinite While Loops","position":{"start":{"line":989,"column":1},"end":{"line":989,"column":1}},"key":"V2zNNK2aSM"}],"key":"MyHdSTbmBJ"},{"type":"paragraph","position":{"start":{"line":992,"column":1},"end":{"line":992,"column":1}},"children":[{"type":"text","value":"Don’t worry — everyone writes an infinite loop occasionally! Even senior programmers at NASA have done it. Here are real cases:","position":{"start":{"line":992,"column":1},"end":{"line":992,"column":1}},"key":"nfiasbcFH1"}],"key":"E9g8hsgHs5"},{"type":"paragraph","position":{"start":{"line":994,"column":1},"end":{"line":994,"column":1}},"children":[{"type":"strong","position":{"start":{"line":994,"column":1},"end":{"line":994,"column":1}},"children":[{"type":"text","value":"Case 1: Floating-point precision prevents exact equality","position":{"start":{"line":994,"column":1},"end":{"line":994,"column":1}},"key":"li1L04wQQH"}],"key":"HWNfm0ZIL7"}],"key":"r9Uxp3LpdO"},{"type":"code","lang":"python","value":"x = 0.0\nwhile x != 1.0:  # INFINITE LOOP!\n    x += 0.1  # After 10 additions, x ≈ 0.9999999999\n\n# Fix: Use tolerance\nwhile abs(x - 1.0) > 1e-10:\n    x += 0.1","position":{"start":{"line":995,"column":1},"end":{"line":1003,"column":1}},"key":"K1zMGzoZ2F"},{"type":"paragraph","position":{"start":{"line":1005,"column":1},"end":{"line":1005,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1005,"column":1},"end":{"line":1005,"column":1}},"children":[{"type":"text","value":"Case 2: Forgetting to update loop variable","position":{"start":{"line":1005,"column":1},"end":{"line":1005,"column":1}},"key":"Oi2tnVq3Ir"}],"key":"sDuH61TyBj"}],"key":"bdF3XcJZo0"},{"type":"code","lang":"python","value":"i = 0\nwhile i < 10:\n    process(data)\n    # Forgot: i += 1  # INFINITE LOOP!","position":{"start":{"line":1006,"column":1},"end":{"line":1011,"column":1}},"key":"fgWlLH5P2U"},{"type":"paragraph","position":{"start":{"line":1013,"column":1},"end":{"line":1013,"column":1}},"children":[{"type":"text","value":"Always add a maximum iteration safeguard!","position":{"start":{"line":1013,"column":1},"end":{"line":1013,"column":1}},"key":"BPCPODbXMT"}],"key":"LM7t9xKbzu"}],"class":"warning","key":"gkrFShLdbz"},{"type":"heading","depth":2,"position":{"start":{"line":1016,"column":1},"end":{"line":1016,"column":1}},"children":[{"type":"text","value":"3.5 List Comprehensions: Elegant and Efficient","position":{"start":{"line":1016,"column":1},"end":{"line":1016,"column":1}},"key":"SPiwx5OjOY"}],"identifier":"id-3-5-list-comprehensions-elegant-and-efficient","label":"3.5 List Comprehensions: Elegant and Efficient","html_id":"id-3-5-list-comprehensions-elegant-and-efficient","implicit":true,"key":"NLOIWVOXXn"},{"type":"paragraph","position":{"start":{"line":1018,"column":1},"end":{"line":1018,"column":1}},"children":[{"type":"text","value":"Now that you’ve mastered loops, let’s evolve them into something even more powerful! List comprehensions are Python’s gift to scientific programmers. They transform verbose loops into concise, readable, and faster expressions.","position":{"start":{"line":1018,"column":1},"end":{"line":1018,"column":1}},"key":"a9eaI0pGDV"}],"key":"sJSkuFnKU9"},{"type":"heading","depth":3,"position":{"start":{"line":1020,"column":1},"end":{"line":1020,"column":1}},"children":[{"type":"text","value":"From Loop to Comprehension","position":{"start":{"line":1020,"column":1},"end":{"line":1020,"column":1}},"key":"sdH5PMvig3"}],"identifier":"from-loop-to-comprehension","label":"From Loop to Comprehension","html_id":"from-loop-to-comprehension","implicit":true,"key":"fZZ9i6DRXH"}],"key":"XOvJFUvQsg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Traditional loop approach\nsquares_loop = []\nfor x in range(10):\n    if x % 2 == 0:  # Even numbers only\n        squares_loop.append(x**2)\nprint(f\"Loop result: {squares_loop}\")\n\n# List comprehension - same result, clearer intent!\nsquares_comp = [x**2 for x in range(10) if x % 2 == 0]\nprint(f\"Comprehension: {squares_comp}\")\n\n# The anatomy of a list comprehension:\n# [expression for item in sequence if condition]\n#      ↓           ↓         ↓           ↓\n#  Transform   Variable  Source    Filter (optional)","key":"ng602Dl8xs"},{"type":"output","id":"B3MAq9qVfkWdH1Y_NHhK9","data":[],"key":"ee4p9QUi8K"}],"key":"IxcnjkR0KE"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1040,"column":1},"end":{"line":1040,"column":1}},"children":[{"type":"text","value":"Real Astronomical Applications","position":{"start":{"line":1040,"column":1},"end":{"line":1040,"column":1}},"key":"ojqwhxTINX"}],"identifier":"real-astronomical-applications","label":"Real Astronomical Applications","html_id":"real-astronomical-applications","implicit":true,"key":"lKSgNb4b3z"}],"key":"meQb7xfV4j"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Filter and transform magnitude data from a survey\nmagnitudes = [12.3, 15.1, 13.7, 16.2, 14.5, 17.1, 11.8, 18.5, 13.2]\n\n# Get fluxes for observable stars (mag < 16, typical small telescope limit)\nobservable_fluxes = [10**(-0.4 * mag) \n                     for mag in magnitudes \n                     if mag < 16.0]\n\nprint(f\"Observable star count: {len(observable_fluxes)}/{len(magnitudes)}\")\nprint(f\"Brightest flux: {max(observable_fluxes):.2e}\")\nprint(f\"Faintest flux: {min(observable_fluxes):.2e}\")\n\n# Dictionary comprehension (bonus!)\nstar_dict = {f\"star_{i}\": mag \n             for i, mag in enumerate(magnitudes) \n             if mag < 15}\nprint(f\"\\nBright stars dictionary: {star_dict}\")","key":"ShyOf0WXLx"},{"type":"output","id":"Yvu-M_C3Lr8uBGmFTSJqW","data":[],"key":"cf6RLDa3et"}],"key":"YELuQQ9AeL"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1062,"column":1},"end":{"line":1062,"column":1}},"children":[{"type":"text","value":"When NOT to Use Comprehensions","position":{"start":{"line":1062,"column":1},"end":{"line":1062,"column":1}},"key":"r1vWhB9Cid"}],"identifier":"when-not-to-use-comprehensions","label":"When NOT to Use Comprehensions","html_id":"when-not-to-use-comprehensions","implicit":true,"key":"VVMtz5WFZg"}],"key":"zu2FeH4Eqg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# BAD: Too complex - unreadable!\n# result = [process(x) if condition(x) else alternative(y) \n#           for x, y in zip(list1, list2) \n#           if validate(x) and check(y)]\n\n# GOOD: Clear loop for complex logic\ndef classify_galaxies(redshifts, luminosities):\n    \"\"\"When logic is complex, loops are clearer!\"\"\"\n    classifications = []\n    for z, L in zip(redshifts, luminosities):\n        if z < 0.5 and L > 1e10:\n            classifications.append(\"nearby bright\")\n        elif z < 0.5:\n            classifications.append(\"nearby faint\")\n        elif L > 1e10:\n            classifications.append(\"distant bright\")\n        else:\n            classifications.append(\"distant faint\")\n    return classifications\n\n# Clear and maintainable!\nz_values = [0.1, 0.8, 0.3, 1.2]\nL_values = [5e9, 2e10, 8e10, 3e9]\ngalaxy_types = classify_galaxies(z_values, L_values)\nprint(f\"Galaxy classifications: {galaxy_types}\")","key":"a7MdbZeCwl"},{"type":"output","id":"vJk4rcWEt_S_4pftX_33v","data":[],"key":"h1jzyfS5hk"}],"key":"k0RjOtlVhO"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1092,"column":1},"end":{"line":1092,"column":1}},"children":[{"type":"text","value":"3.6 Advanced Control Flow Patterns","position":{"start":{"line":1092,"column":1},"end":{"line":1092,"column":1}},"key":"fP0K0AFpNp"}],"identifier":"id-3-6-advanced-control-flow-patterns","label":"3.6 Advanced Control Flow Patterns","html_id":"id-3-6-advanced-control-flow-patterns","implicit":true,"key":"o1AfcoJvvp"},{"type":"paragraph","position":{"start":{"line":1094,"column":1},"end":{"line":1094,"column":1}},"children":[{"type":"text","value":"Now let’s explore powerful patterns that appear throughout scientific computing. These aren’t just code tricks — they’re fundamental algorithmic building blocks!","position":{"start":{"line":1094,"column":1},"end":{"line":1094,"column":1}},"key":"Vv6du6Y8q5"}],"key":"XudXjCGwXR"},{"type":"heading","depth":3,"position":{"start":{"line":1096,"column":1},"end":{"line":1096,"column":1}},"children":[{"type":"text","value":"Welford’s Algorithm: Numerically Stable Statistics","position":{"start":{"line":1096,"column":1},"end":{"line":1096,"column":1}},"key":"zz4ngod54j"}],"identifier":"welfords-algorithm-numerically-stable-statistics","label":"Welford’s Algorithm: Numerically Stable Statistics","html_id":"welfords-algorithm-numerically-stable-statistics","implicit":true,"key":"rq0NJiiqRQ"}],"key":"LCeETN1GSr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def running_statistics(data_stream):\n    \"\"\"\n    Calculate mean and variance in single pass.\n    Uses Welford's algorithm (1962) for numerical stability.\n    Essential for processing streaming telescope data!\n    \"\"\"\n    n = 0\n    mean = 0.0\n    M2 = 0.0\n    \n    for value in data_stream:\n        n += 1\n        delta = value - mean\n        mean += delta / n\n        delta2 = value - mean\n        M2 += delta * delta2\n    \n    if n < 2:\n        return mean, float('nan')\n    \n    variance = M2 / (n - 1)\n    return mean, variance\n\n# Test with problematic data (large baseline with small variations)\nphotometry = [1e8, 1e8 + 1, 1e8 + 2, 1e8 - 1, 1e8 + 0.5]  \nmean, var = running_statistics(photometry)\nprint(f\"Stable algorithm: mean={mean:.1f}, std={math.sqrt(var):.2f}\")\n\n# The naive approach would lose precision!\nnaive_mean = sum(photometry) / len(photometry)\nnaive_var = sum(x**2 for x in photometry) / len(photometry) - naive_mean**2\nprint(f\"Naive (problematic): mean={naive_mean:.1f}, std={math.sqrt(abs(naive_var)):.2f}\")","key":"RXMGCBnjyt"},{"type":"output","id":"iB3zlcfyLPSAehI5D2_oC","data":[],"key":"IYDu56Rm6S"}],"key":"S054lT8dtt"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"💡 Computational Thinking: The Convergence Pattern","position":{"start":{"line":1133,"column":1},"end":{"line":1133,"column":1}},"key":"SjWXWoBk3v"}],"key":"NZ9vOxt82y"},{"type":"paragraph","position":{"start":{"line":1136,"column":1},"end":{"line":1136,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1136,"column":1},"end":{"line":1136,"column":1}},"children":[{"type":"text","value":"PATTERN: Iterative Convergence","position":{"start":{"line":1136,"column":1},"end":{"line":1136,"column":1}},"key":"t7pjIRzRV1"}],"key":"kVUpY9htG1"}],"key":"S7IpyDdZV3"},{"type":"code","lang":"python","value":"initialize state\niteration_count = 0\n\nwhile not converged and iteration_count < max_iterations:\n    new_state = update(state)\n    converged = check_convergence(state, new_state, tolerance)\n    state = new_state\n    iteration_count += 1\n\nif not converged:\n    handle_failure()","position":{"start":{"line":1138,"column":1},"end":{"line":1150,"column":1}},"key":"peCX1vQECx"},{"type":"paragraph","position":{"start":{"line":1152,"column":1},"end":{"line":1152,"column":1}},"children":[{"type":"text","value":"This pattern appears throughout astrophysics:","position":{"start":{"line":1152,"column":1},"end":{"line":1152,"column":1}},"key":"btPAbIlxMI"}],"key":"fZC78mz33r"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1153,"column":1},"end":{"line":1157,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1153,"column":1},"end":{"line":1153,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1153,"column":1},"end":{"line":1153,"column":1}},"children":[{"type":"text","value":"Kepler’s equation solver","position":{"start":{"line":1153,"column":1},"end":{"line":1153,"column":1}},"key":"RVCi5nVgla"}],"key":"nUjZNulWpF"},{"type":"text","value":" (finding true anomaly)","position":{"start":{"line":1153,"column":1},"end":{"line":1153,"column":1}},"key":"A5rRNUQiJ3"}],"key":"x4tZICFfju"},{"type":"listItem","spread":true,"position":{"start":{"line":1154,"column":1},"end":{"line":1154,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1154,"column":1},"end":{"line":1154,"column":1}},"children":[{"type":"text","value":"Stellar structure integration","position":{"start":{"line":1154,"column":1},"end":{"line":1154,"column":1}},"key":"OzW6A05HRZ"}],"key":"dgfPZHyckf"},{"type":"text","value":" (hydrostatic equilibrium)","position":{"start":{"line":1154,"column":1},"end":{"line":1154,"column":1}},"key":"dgEebs4p5z"}],"key":"YyRmdXULnc"},{"type":"listItem","spread":true,"position":{"start":{"line":1155,"column":1},"end":{"line":1155,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1155,"column":1},"end":{"line":1155,"column":1}},"children":[{"type":"text","value":"Radiative transfer","position":{"start":{"line":1155,"column":1},"end":{"line":1155,"column":1}},"key":"iCvgBZh90Q"}],"key":"WMk1e3ysvj"},{"type":"text","value":" (temperature iterations)","position":{"start":{"line":1155,"column":1},"end":{"line":1155,"column":1}},"key":"rsELiy1whV"}],"key":"Lnc8liDwxW"},{"type":"listItem","spread":true,"position":{"start":{"line":1156,"column":1},"end":{"line":1157,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1156,"column":1},"end":{"line":1156,"column":1}},"children":[{"type":"text","value":"N-body orbit integration","position":{"start":{"line":1156,"column":1},"end":{"line":1156,"column":1}},"key":"UpHbhk8QDC"}],"key":"Z0qSumX4oA"},{"type":"text","value":" (adaptive timesteps)","position":{"start":{"line":1156,"column":1},"end":{"line":1156,"column":1}},"key":"YKQGTyWPj4"}],"key":"uvP4pCiAal"}],"key":"hwbU4pbeKW"},{"type":"paragraph","position":{"start":{"line":1158,"column":1},"end":{"line":1158,"column":1}},"children":[{"type":"text","value":"Master this pattern and you’ve mastered half of computational astrophysics!","position":{"start":{"line":1158,"column":1},"end":{"line":1158,"column":1}},"key":"CkhE5QkhXt"}],"key":"stQlhaQeWT"}],"class":"important","key":"JOjLgRvg1q"},{"type":"heading","depth":2,"position":{"start":{"line":1161,"column":1},"end":{"line":1161,"column":1}},"children":[{"type":"text","value":"3.7 Debugging Control Flow","position":{"start":{"line":1161,"column":1},"end":{"line":1161,"column":1}},"key":"JNb4LRWowT"}],"identifier":"id-3-7-debugging-control-flow","label":"3.7 Debugging Control Flow","html_id":"id-3-7-debugging-control-flow","implicit":true,"key":"AtpgtkQYbA"},{"type":"paragraph","position":{"start":{"line":1163,"column":1},"end":{"line":1163,"column":1}},"children":[{"type":"text","value":"Logic errors are the hardest bugs because the code runs without crashing but produces wrong results. Let’s build your debugging arsenal!","position":{"start":{"line":1163,"column":1},"end":{"line":1163,"column":1}},"key":"ygRb5beCKk"}],"key":"AHVnBrreDq"},{"type":"heading","depth":3,"position":{"start":{"line":1165,"column":1},"end":{"line":1165,"column":1}},"children":[{"type":"text","value":"Strategic Print Debugging","position":{"start":{"line":1165,"column":1},"end":{"line":1165,"column":1}},"key":"ih7AO3skLL"}],"identifier":"strategic-print-debugging","label":"Strategic Print Debugging","html_id":"strategic-print-debugging","implicit":true,"key":"AADmfP5BSD"}],"key":"DNrANfaj1m"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def debug_convergence(initial, target, rate, max_iter=20):\n    \"\"\"\n    Example of strategic debug output.\n    Shows exactly where and why algorithms succeed or fail.\n    \"\"\"\n    \n    current = initial\n    history = []\n    \n    for iteration in range(max_iter):\n        old = current\n        current = current * (1 - rate) + target * rate\n        change = current - old\n        history.append(current)\n        \n        # Strategic output - not everything!\n        if iteration < 3 or iteration % 5 == 0:\n            print(f\"Iter {iteration:2d}: {old:.4f} → {current:.4f} (Δ={change:+.5f})\")\n        \n        # Convergence check\n        if abs(current - target) < 1e-6:\n            print(f\"✓ CONVERGED at iteration {iteration}\")\n            return current\n        \n        # Detect problems early\n        if len(history) > 3:\n            if (history[-1] > history[-2] < history[-3]):\n                print(f\"⚠ OSCILLATION detected\")\n                \n    print(f\"✗ FAILED after {max_iter} iterations\")\n    return current\n\n# Test the algorithm\nprint(\"Testing convergence:\")\nresult = debug_convergence(0, 100, 0.1)","key":"HcEFtGDmL9"},{"type":"output","id":"CqUkg0_jZ77IqzwjNAmU0","data":[],"key":"Co9sN2CdgP"}],"key":"JGCU8rdoa6"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":1205,"column":1},"end":{"line":1205,"column":1}},"children":[{"type":"text","value":"Using Assertions for Validation","position":{"start":{"line":1205,"column":1},"end":{"line":1205,"column":1}},"key":"YQ6tD1EZG5"}],"identifier":"using-assertions-for-validation","label":"Using Assertions for Validation","html_id":"using-assertions-for-validation","implicit":true,"key":"FtQ4N5xbeB"},{"type":"paragraph","position":{"start":{"line":1207,"column":1},"end":{"line":1207,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":1207,"column":1},"end":{"line":1207,"column":1}},"key":"dZxfA13lww"},{"type":"strong","position":{"start":{"line":1207,"column":1},"end":{"line":1207,"column":1}},"children":[{"type":"text","value":"assert","position":{"start":{"line":1207,"column":1},"end":{"line":1207,"column":1}},"key":"wlxQECwL1S"}],"key":"eabZEnHAbK"},{"type":"text","value":" statement helps catch bugs during development:","position":{"start":{"line":1207,"column":1},"end":{"line":1207,"column":1}},"key":"eph4V0XiIe"}],"key":"sV7jTwCInK"}],"key":"RxMdOaUgIP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def calculate_magnitude_average(magnitudes):\n    \"\"\"Calculate average magnitude with assertions for debugging.\"\"\"\n    \n    # Assertions document and enforce assumptions\n    assert len(magnitudes) > 0, \"Need at least one magnitude\"\n    assert all(isinstance(m, (int, float)) for m in magnitudes), \"All must be numbers\"\n    assert all(0 < m < 30 for m in magnitudes), \"Magnitudes must be reasonable\"\n    \n    # Safe to proceed after assertions\n    return sum(magnitudes) / len(magnitudes)\n\n# Test with good data\ngood_mags = [10.2, 10.5, 10.3]\navg = calculate_magnitude_average(good_mags)\nprint(f\"Average magnitude: {avg:.2f}\")\n\n# WARNING: Assertions can be disabled in production with python -O\n# This means they should NEVER be used for actual validation!","key":"kCW7MHBrcx"},{"type":"output","id":"G7JVTsPQwng5G7J4LRrmN","data":[],"key":"Vd2ltG8L9f"}],"key":"GQmT7hPWyD"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"⚠️ Critical Warning: Assertions Are Not for Production!","position":{"start":{"line":1230,"column":1},"end":{"line":1230,"column":1}},"key":"QQqJUOsgCR"}],"key":"xeEZBK87Vc"},{"type":"paragraph","position":{"start":{"line":1233,"column":1},"end":{"line":1233,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1233,"column":1},"end":{"line":1233,"column":1}},"children":[{"type":"text","value":"Never use assertions for user input validation or critical checks!","position":{"start":{"line":1233,"column":1},"end":{"line":1233,"column":1}},"key":"bSmihB5or7"}],"key":"My9mMFl0R1"},{"type":"text","value":" Assertions can be completely disabled when Python runs with optimization (","position":{"start":{"line":1233,"column":1},"end":{"line":1233,"column":1}},"key":"zs6ZE2K5vP"},{"type":"inlineCode","value":"python -O","position":{"start":{"line":1233,"column":1},"end":{"line":1233,"column":1}},"key":"Vv6oqXXrOg"},{"type":"text","value":"), causing them to be skipped entirely.","position":{"start":{"line":1233,"column":1},"end":{"line":1233,"column":1}},"key":"kkr8cxjDfO"}],"key":"jwdqPOlMaK"},{"type":"paragraph","position":{"start":{"line":1235,"column":1},"end":{"line":1235,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1235,"column":1},"end":{"line":1235,"column":1}},"children":[{"type":"text","value":"WRONG - Don’t do this for user-facing code:","position":{"start":{"line":1235,"column":1},"end":{"line":1235,"column":1}},"key":"B5gtzKdVzy"}],"key":"EC7rI6ZTIq"}],"key":"art9sCbG8R"},{"type":"code","lang":"python","value":"def process_user_data(value):\n    assert value > 0  # DANGEROUS! Might not run in production!\n    return math.sqrt(value)","position":{"start":{"line":1236,"column":1},"end":{"line":1240,"column":1}},"key":"ivU4ciGTvM"},{"type":"paragraph","position":{"start":{"line":1242,"column":1},"end":{"line":1242,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1242,"column":1},"end":{"line":1242,"column":1}},"children":[{"type":"text","value":"RIGHT - Use explicit validation for production:","position":{"start":{"line":1242,"column":1},"end":{"line":1242,"column":1}},"key":"aY1lCgL7gS"}],"key":"IOoKNNNjHI"}],"key":"NoDqU6NaTW"},{"type":"code","lang":"python","value":"def process_user_data(value):\n    if value <= 0:\n        raise ValueError(f\"Value must be positive, got {value}\")\n    return math.sqrt(value)","position":{"start":{"line":1243,"column":1},"end":{"line":1248,"column":1}},"key":"E3ngNZkmsn"},{"type":"paragraph","position":{"start":{"line":1250,"column":1},"end":{"line":1250,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1250,"column":1},"end":{"line":1250,"column":1}},"children":[{"type":"text","value":"When to use assertions:","position":{"start":{"line":1250,"column":1},"end":{"line":1250,"column":1}},"key":"JEj16OI3aj"}],"key":"WNPqlcN4lC"}],"key":"LF9d5feJ0C"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1251,"column":1},"end":{"line":1255,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1251,"column":1},"end":{"line":1251,"column":1}},"children":[{"type":"text","value":"Documenting internal assumptions during development","position":{"start":{"line":1251,"column":1},"end":{"line":1251,"column":1}},"key":"SCVQBnQxI0"}],"key":"f4iINYtT7Y"},{"type":"listItem","spread":true,"position":{"start":{"line":1252,"column":1},"end":{"line":1252,"column":1}},"children":[{"type":"text","value":"Catching programming errors early (not user errors)","position":{"start":{"line":1252,"column":1},"end":{"line":1252,"column":1}},"key":"RGnJucpPs3"}],"key":"H9Tw7zGTqG"},{"type":"listItem","spread":true,"position":{"start":{"line":1253,"column":1},"end":{"line":1253,"column":1}},"children":[{"type":"text","value":"Self-checks in algorithms (but have a fallback plan)","position":{"start":{"line":1253,"column":1},"end":{"line":1253,"column":1}},"key":"u7YvhMwqAy"}],"key":"XlJgtWCFaW"},{"type":"listItem","spread":true,"position":{"start":{"line":1254,"column":1},"end":{"line":1255,"column":1}},"children":[{"type":"text","value":"Test suites and debugging","position":{"start":{"line":1254,"column":1},"end":{"line":1254,"column":1}},"key":"vwxlOro5Tt"}],"key":"cncXuOuOBK"}],"key":"UTAOVvaLik"},{"type":"paragraph","position":{"start":{"line":1256,"column":1},"end":{"line":1256,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1256,"column":1},"end":{"line":1256,"column":1}},"children":[{"type":"text","value":"When NOT to use assertions:","position":{"start":{"line":1256,"column":1},"end":{"line":1256,"column":1}},"key":"eTtguaGzlm"}],"key":"C95KsvHO8R"}],"key":"iQqjaeJpTD"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1257,"column":1},"end":{"line":1261,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1257,"column":1},"end":{"line":1257,"column":1}},"children":[{"type":"text","value":"Validating user input","position":{"start":{"line":1257,"column":1},"end":{"line":1257,"column":1}},"key":"UCZMKEKg85"}],"key":"ezj9AbQB8u"},{"type":"listItem","spread":true,"position":{"start":{"line":1258,"column":1},"end":{"line":1258,"column":1}},"children":[{"type":"text","value":"Checking file existence or permissions","position":{"start":{"line":1258,"column":1},"end":{"line":1258,"column":1}},"key":"LabX49iM6y"}],"key":"QN5BdYVOSa"},{"type":"listItem","spread":true,"position":{"start":{"line":1259,"column":1},"end":{"line":1259,"column":1}},"children":[{"type":"text","value":"Network availability checks","position":{"start":{"line":1259,"column":1},"end":{"line":1259,"column":1}},"key":"Qx4P0MGZ07"}],"key":"Sgbo2ak3HN"},{"type":"listItem","spread":true,"position":{"start":{"line":1260,"column":1},"end":{"line":1261,"column":1}},"children":[{"type":"text","value":"Any check that must run in production","position":{"start":{"line":1260,"column":1},"end":{"line":1260,"column":1}},"key":"crnoq2dgVN"}],"key":"Ie36Ka2WfU"}],"key":"xn4A8dihgI"},{"type":"paragraph","position":{"start":{"line":1262,"column":1},"end":{"line":1262,"column":1}},"children":[{"type":"text","value":"Think of assertions as “developer notes that can catch bugs” rather than “guards that protect your code.”","position":{"start":{"line":1262,"column":1},"end":{"line":1262,"column":1}},"key":"QB2rTOrrmQ"}],"key":"TwlCktH0xD"}],"class":"warning","key":"DYgAwklfOC"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"🌟 The More You Know: How Kepler Found Over 2,700 Exoplanets","position":{"start":{"line":1265,"column":1},"end":{"line":1265,"column":1}},"key":"eQE0m51aXQ"}],"key":"i7cpCZvwXx"},{"type":"paragraph","position":{"start":{"line":1268,"column":1},"end":{"line":1268,"column":1}},"children":[{"type":"text","value":"The Kepler Space Telescope discovered 2,778 confirmed exoplanets (with thousands more candidates) using exactly the control flow patterns you just learned! Here’s the simplified algorithm:","position":{"start":{"line":1268,"column":1},"end":{"line":1268,"column":1}},"key":"UAPdCoMGQY"}],"key":"mrDazDrfEB"},{"type":"paragraph","position":{"start":{"line":1270,"column":1},"end":{"line":1270,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":1270,"column":1},"end":{"line":1270,"column":1}},"children":[{"type":"text","value":"Note: This algorithm is greatly simplified for pedagogical purposes. The actual Kepler pipeline used sophisticated techniques including Fourier transforms, multiple detrending algorithms, and extensive validation checks. However, the control flow patterns shown here — guard clauses, filtering, iteration, and conditional validation — formed the backbone of the real system.","position":{"start":{"line":1270,"column":1},"end":{"line":1270,"column":1}},"key":"SDRKYMv0E4"}],"key":"fMAto5FfKx"}],"key":"EDRGjjvuym"},{"type":"code","lang":"python","value":"def kepler_planet_search(star_id, light_curve):\n    \"\"\"Simplified Kepler planet detection algorithm\"\"\"\n    \n    # Guard clause - data quality check\n    if len(light_curve) < 1000:\n        return None\n    \n    # Remove outliers (cosmic rays, etc.)\n    cleaned = [point for point in light_curve \n               if abs(point - median) < 5 * sigma]\n    \n    # Search for periodic dips\n    best_period = None\n    best_depth = 0\n    \n    for trial_period in range(1, 365):  # Days\n        folded = fold_light_curve(cleaned, trial_period)\n        depth = measure_transit_depth(folded)\n        \n        if depth > best_depth and depth > 3 * noise_level:\n            best_period = trial_period\n            best_depth = depth\n    \n    # Validate as planet (not eclipsing binary)\n    if best_period:\n        if is_v_shaped(folded):  # Binary check\n            return None\n        if depth > 0.5:  # Too deep\n            return None\n            \n        return {'period': best_period, 'depth': best_depth}\n    \n    return None","position":{"start":{"line":1272,"column":1},"end":{"line":1306,"column":1}},"key":"RZl1VCKtM8"},{"type":"paragraph","position":{"start":{"line":1308,"column":1},"end":{"line":1308,"column":1}},"children":[{"type":"text","value":"This ran on 150,000+ stars for 4 years! Your code uses the same patterns that revealed the universe is full of planets!","position":{"start":{"line":1308,"column":1},"end":{"line":1308,"column":1}},"key":"QZEAgUX6pe"}],"key":"oSShHzsHoV"}],"class":"tip, dropdown","key":"bNdiGCu08x"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"🛠️ Debug This! The Telescope Priority Bug","position":{"start":{"line":1311,"column":1},"end":{"line":1311,"column":1}},"key":"nlGsTa8Uf8"}],"key":"FYcLbojhW8"},{"type":"paragraph","position":{"start":{"line":1314,"column":1},"end":{"line":1314,"column":1}},"children":[{"type":"text","value":"A telescope scheduling system has a subtle bug in its priority logic. Can you find and fix it?","position":{"start":{"line":1314,"column":1},"end":{"line":1314,"column":1}},"key":"MMaK1KzW64"}],"key":"ZztJTBXjjZ"},{"type":"code","lang":"python","value":"def assign_telescope_priority(observation):\n    \"\"\"\n    Assign priority based on object type and time sensitivity.\n    Higher numbers = higher priority.\n    \n    THIS CODE HAS A BUG - find it!\n    \"\"\"\n    magnitude = observation['magnitude']\n    obj_type = observation['type']\n    time_critical = observation['time_critical']\n    \n    # Assign base priority by object type\n    if obj_type == 'supernova':\n        priority = 100\n    elif obj_type == 'variable_star' and magnitude < 12:\n        priority = 70\n    elif obj_type == 'variable_star':  # This has a problem!\n        priority = 50\n    elif obj_type == 'asteroid' and time_critical:\n        priority = 80\n    elif obj_type == 'galaxy':\n        priority = 30\n    else:\n        priority = 10\n    \n    # Boost for bright objects\n    if magnitude < 10:\n        priority += 20\n    \n    return priority\n\n# Test case that reveals the bug:\nobs = {'type': 'variable_star', 'magnitude': 8, 'time_critical': True}\nprint(f\"Priority: {assign_telescope_priority(obs)}\")\n# Expected: 70 + 20 = 90 (bright variable star)\n# Actually gets: 90 (seems right... or is it?)\n\nobs2 = {'type': 'variable_star', 'magnitude': 11.5, 'time_critical': True}\nprint(f\"Priority: {assign_telescope_priority(obs2)}\")\n# Expected: 70 (bright variable star condition)\n# Actually gets: 70 (correct!)\n\nobs3 = {'type': 'variable_star', 'magnitude': 14, 'time_critical': True}\nprint(f\"Priority: {assign_telescope_priority(obs3)}\")\n# Expected: 50 (dim variable star)\n# What does it actually get?","position":{"start":{"line":1316,"column":1},"end":{"line":1363,"column":1}},"key":"YnJtkOiFl4"}],"class":"challenge","key":"GadD6oJRqd"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Solution","position":{"start":{"line":1366,"column":1},"end":{"line":1366,"column":1}},"key":"jkLh1K296o"}],"key":"wmr7gMLjxx"},{"type":"paragraph","position":{"start":{"line":1369,"column":1},"end":{"line":1369,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1369,"column":1},"end":{"line":1369,"column":1}},"children":[{"type":"text","value":"The Bug","position":{"start":{"line":1369,"column":1},"end":{"line":1369,"column":1}},"key":"I3bGsmdRXS"}],"key":"CuTfbCtlFD"},{"type":"text","value":": The elif chain for variable stars has overlapping conditions that aren’t immediately obvious!","position":{"start":{"line":1369,"column":1},"end":{"line":1369,"column":1}},"key":"iKdaWsN0oC"}],"key":"vSCKe8KFIS"},{"type":"paragraph","position":{"start":{"line":1371,"column":1},"end":{"line":1371,"column":1}},"children":[{"type":"text","value":"Looking at the variable star conditions:","position":{"start":{"line":1371,"column":1},"end":{"line":1371,"column":1}},"key":"rVxmQBdwKM"}],"key":"IEM9b4VvtV"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":1372,"column":1},"end":{"line":1374,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1372,"column":1},"end":{"line":1372,"column":1}},"children":[{"type":"inlineCode","value":"elif obj_type == 'variable_star' and magnitude < 12:","position":{"start":{"line":1372,"column":1},"end":{"line":1372,"column":1}},"key":"UZM5PBxwj2"},{"type":"text","value":" → priority = 70","position":{"start":{"line":1372,"column":1},"end":{"line":1372,"column":1}},"key":"iUpbA4Z5WF"}],"key":"yAoZiKLzow"},{"type":"listItem","spread":true,"position":{"start":{"line":1373,"column":1},"end":{"line":1374,"column":1}},"children":[{"type":"inlineCode","value":"elif obj_type == 'variable_star':","position":{"start":{"line":1373,"column":1},"end":{"line":1373,"column":1}},"key":"KJPfkG4EdX"},{"type":"text","value":" → priority = 50","position":{"start":{"line":1373,"column":1},"end":{"line":1373,"column":1}},"key":"XTmJBaa9Ue"}],"key":"pnH0uik78J"}],"key":"DummUDPOq8"},{"type":"paragraph","position":{"start":{"line":1375,"column":1},"end":{"line":1375,"column":1}},"children":[{"type":"text","value":"The second condition can NEVER be reached for bright variable stars because they’re caught by the first condition. However, this actually works correctly by accident! The real issue is that the logic is confusing and fragile.","position":{"start":{"line":1375,"column":1},"end":{"line":1375,"column":1}},"key":"RmNR3iAWo8"}],"key":"wA7OnAjpmN"},{"type":"paragraph","position":{"start":{"line":1377,"column":1},"end":{"line":1377,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1377,"column":1},"end":{"line":1377,"column":1}},"children":[{"type":"text","value":"Better Design","position":{"start":{"line":1377,"column":1},"end":{"line":1377,"column":1}},"key":"LtCOdq0215"}],"key":"ilU0PnXQsK"},{"type":"text","value":":","position":{"start":{"line":1377,"column":1},"end":{"line":1377,"column":1}},"key":"to3v2JdY4K"}],"key":"rKvXiSJVEi"},{"type":"code","lang":"python","value":"def assign_telescope_priority_fixed(observation):\n    \"\"\"Fixed version with clearer logic.\"\"\"\n    magnitude = observation['magnitude']\n    obj_type = observation['type']\n    time_critical = observation['time_critical']\n    \n    # Assign base priority by object type\n    if obj_type == 'supernova':\n        priority = 100\n    elif obj_type == 'asteroid' and time_critical:\n        priority = 80\n    elif obj_type == 'variable_star':\n        # Nested logic is clearer for subcategories\n        if magnitude < 12:\n            priority = 70\n        else:\n            priority = 50\n    elif obj_type == 'galaxy':\n        priority = 30\n    else:\n        priority = 10\n    \n    # Boost for bright objects\n    if magnitude < 10:\n        priority += 20\n    \n    return priority","position":{"start":{"line":1378,"column":1},"end":{"line":1406,"column":1}},"key":"j4OZX4Zv6i"},{"type":"paragraph","position":{"start":{"line":1408,"column":1},"end":{"line":1408,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1408,"column":1},"end":{"line":1408,"column":1}},"children":[{"type":"text","value":"Key Lessons","position":{"start":{"line":1408,"column":1},"end":{"line":1408,"column":1}},"key":"jQ8bUmAyRP"}],"key":"w6aNu7d8uD"},{"type":"text","value":":","position":{"start":{"line":1408,"column":1},"end":{"line":1408,"column":1}},"key":"nAVoQLQxB0"}],"key":"kmrKxXSabO"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":1409,"column":1},"end":{"line":1413,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1409,"column":1},"end":{"line":1409,"column":1}},"children":[{"type":"text","value":"Order elif conditions from most specific to most general","position":{"start":{"line":1409,"column":1},"end":{"line":1409,"column":1}},"key":"j1866WclZW"}],"key":"v29eF79vLQ"},{"type":"listItem","spread":true,"position":{"start":{"line":1410,"column":1},"end":{"line":1410,"column":1}},"children":[{"type":"text","value":"Avoid overlapping conditions in elif chains","position":{"start":{"line":1410,"column":1},"end":{"line":1410,"column":1}},"key":"UhkAAAxOYt"}],"key":"H7notG1rsy"},{"type":"listItem","spread":true,"position":{"start":{"line":1411,"column":1},"end":{"line":1411,"column":1}},"children":[{"type":"text","value":"Consider using nested if statements for subcategories","position":{"start":{"line":1411,"column":1},"end":{"line":1411,"column":1}},"key":"syXoMtGUCT"}],"key":"vSz86M7VPS"},{"type":"listItem","spread":true,"position":{"start":{"line":1412,"column":1},"end":{"line":1413,"column":1}},"children":[{"type":"text","value":"The original code works but is hard to maintain and understand","position":{"start":{"line":1412,"column":1},"end":{"line":1412,"column":1}},"key":"fytzszla9i"}],"key":"JeXTROEowz"}],"key":"p7Gqaj7NgJ"},{"type":"paragraph","position":{"start":{"line":1414,"column":1},"end":{"line":1414,"column":1}},"children":[{"type":"text","value":"This type of subtle logic error is common in real telescope scheduling software and can lead to suboptimal observation planning!","position":{"start":{"line":1414,"column":1},"end":{"line":1414,"column":1}},"key":"Q9FT8vYLaU"}],"key":"W3xmStVZKC"}],"class":"tip, dropdown","key":"xtTEZY3fro"},{"type":"heading","depth":2,"position":{"start":{"line":1417,"column":1},"end":{"line":1417,"column":1}},"children":[{"type":"text","value":"Practice Exercises","position":{"start":{"line":1417,"column":1},"end":{"line":1417,"column":1}},"key":"mjnkM2XbMb"}],"identifier":"practice-exercises","label":"Practice Exercises","html_id":"practice-exercises","implicit":true,"key":"HgSjEb7c6z"},{"type":"paragraph","position":{"start":{"line":1419,"column":1},"end":{"line":1419,"column":1}},"children":[{"type":"text","value":"Now apply your control flow mastery to real astronomical problems!","position":{"start":{"line":1419,"column":1},"end":{"line":1419,"column":1}},"key":"nGQTdizJtk"}],"key":"IUEuNwAjxY"},{"type":"heading","depth":3,"position":{"start":{"line":1421,"column":1},"end":{"line":1421,"column":1}},"children":[{"type":"text","value":"Exercise 3.1: Phase Dispersion Minimization","position":{"start":{"line":1421,"column":1},"end":{"line":1421,"column":1}},"key":"rsxcHoVDjC"}],"identifier":"exercise-3-1-phase-dispersion-minimization","label":"Exercise 3.1: Phase Dispersion Minimization","html_id":"exercise-3-1-phase-dispersion-minimization","implicit":true,"key":"jv7PkyIehD"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Complete Implementation (40-50 lines)","position":{"start":{"line":1423,"column":1},"end":{"line":1423,"column":1}},"key":"N1MSvUit1E"}],"key":"u5F9foAHs0"},{"type":"code","lang":"python","value":"def find_period_pdm(times, magnitudes, min_period=0.1, max_period=10.0):\n    \"\"\"\n    Find the period of a variable star using Phase Dispersion Minimization.\n    This is a REAL algorithm used in astronomy!\n    \n    Your implementation should:\n    1. Use nested loops for coarse then fine search\n    2. Apply the convergence pattern from Section 3.6\n    3. Include guard clauses for invalid input\n    4. Use list comprehensions where appropriate\n    \n    Pseudocode to get started:\n    - Validate inputs with guard clauses\n    - Coarse search with 0.1 day steps\n    - Find minimum dispersion period\n    - Refine with 0.01 day steps around minimum\n    - Continue until convergence\n    \"\"\"\n    # Your implementation here\n    pass","position":{"start":{"line":1426,"column":1},"end":{"line":1447,"column":1}},"key":"tZsU24vhGf"}],"class":"exercise","key":"n4G4oDAl1P"},{"type":"heading","depth":3,"position":{"start":{"line":1450,"column":1},"end":{"line":1450,"column":1}},"children":[{"type":"text","value":"Exercise 3.2: Transient Detection Pipeline","position":{"start":{"line":1450,"column":1},"end":{"line":1450,"column":1}},"key":"SoFtIS22fb"}],"identifier":"exercise-3-2-transient-detection-pipeline","label":"Exercise 3.2: Transient Detection Pipeline","html_id":"exercise-3-2-transient-detection-pipeline","implicit":true,"key":"cQuYYIN6dR"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Multi-Part Exercise (30-40 lines total)","position":{"start":{"line":1452,"column":1},"end":{"line":1452,"column":1}},"key":"O4dPZRUdaS"}],"key":"pDdP6lx9fJ"},{"type":"paragraph","position":{"start":{"line":1455,"column":1},"end":{"line":1457,"column":1}},"children":[{"type":"text","value":"Part A: Implement data cleaning\nPart B: Detect variability using Welford’s algorithm\nPart C: Classify transients with elif chains","position":{"start":{"line":1455,"column":1},"end":{"line":1455,"column":1}},"key":"nBX1UsdggT"}],"key":"s6p8KptPEn"},{"type":"code","lang":"python","value":"def process_survey_data(times, mags, errors):\n    \"\"\"\n    Complete pipeline for transient detection.\n    Uses all control flow patterns from this chapter!\n    \"\"\"\n    # Part A: Clean data (guard clauses, list comprehension)\n    # Part B: Find variables (Welford's algorithm)\n    # Part C: Classify (elif chains)\n    pass","position":{"start":{"line":1459,"column":1},"end":{"line":1469,"column":1}},"key":"JABSWyE30u"}],"class":"exercise","key":"NfmPpfscd1"},{"type":"heading","depth":3,"position":{"start":{"line":1472,"column":1},"end":{"line":1472,"column":1}},"children":[{"type":"text","value":"Exercise 3.3: Debug the Light Curve Folder","position":{"start":{"line":1472,"column":1},"end":{"line":1472,"column":1}},"key":"m06zYtyi9Y"}],"identifier":"exercise-3-3-debug-the-light-curve-folder","label":"Exercise 3.3: Debug the Light Curve Folder","html_id":"exercise-3-3-debug-the-light-curve-folder","implicit":true,"key":"tTJHsn5XMk"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Find and Fix Three Bugs","position":{"start":{"line":1474,"column":1},"end":{"line":1474,"column":1}},"key":"KxyeQ5nPIV"}],"key":"UIJtousfHa"},{"type":"code","lang":"python","value":"def fold_light_curve(times, mags, period):\n    \"\"\"This function has 3 bugs - find and fix them!\"\"\"\n    phases = []\n    folded_mags = []\n    \n    for i in range(len(times)):\n        phase = times[i] / period  # Bug 1: Should use modulo!\n        phases.append(phase)\n        folded_mags.append(mags[i])\n    \n    # Sort by phase\n    for i in range(len(phases)):\n        for j in range(len(phases)):  # Bug 2: j should start at i+1\n            if phases[i] > phases[j]:  # Bug 3: Wrong comparison\n                phases[i], phases[j] = phases[j], phases[i]\n                folded_mags[i], folded_mags[j] = folded_mags[j], folded_mags[i]\n    \n    return phases, folded_mags","position":{"start":{"line":1477,"column":1},"end":{"line":1496,"column":1}},"key":"H4Yb2IZmlA"}],"class":"exercise","key":"tmLY2BBEiG"},{"type":"heading","depth":2,"position":{"start":{"line":1499,"column":1},"end":{"line":1499,"column":1}},"children":[{"type":"text","value":"Main Takeaways","position":{"start":{"line":1499,"column":1},"end":{"line":1499,"column":1}},"key":"l7KaxWOOZN"}],"identifier":"main-takeaways","label":"Main Takeaways","html_id":"main-takeaways","implicit":true,"key":"ArlFHx5UIg"},{"type":"paragraph","position":{"start":{"line":1501,"column":1},"end":{"line":1501,"column":1}},"children":[{"type":"text","value":"What an incredible journey you’ve just completed! You’ve transformed from someone who writes code line by line to someone who designs algorithms systematically. This transformation mirrors the evolution every computational scientist goes through, from tentative beginner to confident algorithm designer.","position":{"start":{"line":1501,"column":1},"end":{"line":1501,"column":1}},"key":"fA4Lr7TgPU"}],"key":"mv2IKbqFHr"},{"type":"paragraph","position":{"start":{"line":1503,"column":1},"end":{"line":1503,"column":1}},"children":[{"type":"text","value":"You started by learning to think in pseudocode, a skill that gives you the power to design before you code. Those three levels of refinement you practiced are your blueprint for success. Every hour you invest in pseudocode saves many hours of debugging. When you design your next algorithm for analyzing galaxy spectra or simulating stellar evolution, you’ll catch logical flaws on paper instead of after hours of computation.","position":{"start":{"line":1503,"column":1},"end":{"line":1503,"column":1}},"key":"MAxNC44nzI"}],"key":"sKe9e8PEbk"},{"type":"paragraph","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"children":[{"type":"text","value":"The complete set of comparison and logical operators you’ve mastered — from simple greater-than checks to complex boolean combinations with ","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"BkphrE6T06"},{"type":"strong","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"children":[{"type":"text","value":"and","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"j4AVAiy0OZ"}],"key":"x4MWiJafSd"},{"type":"text","value":", ","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"yqqdbn4daQ"},{"type":"strong","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"children":[{"type":"text","value":"or","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"V9U9jQRvxH"}],"key":"xRtaolCo20"},{"type":"text","value":", and ","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"Ioo67oMXWU"},{"type":"strong","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"qqiOfXlEjZ"}],"key":"MHzK8HZCgW"},{"type":"text","value":" — gives you the full vocabulary for expressing any logical condition. You understand that ","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"N2eduPcJvt"},{"type":"inlineCode","value":"==","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"Be8CVm3j21"},{"type":"text","value":" is dangerous with floats, that ","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"tcvuLenRcI"},{"type":"strong","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"children":[{"type":"text","value":"is","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"H9hUM16esy"}],"key":"wPDHXSo0MA"},{"type":"text","value":" checks identity not equality, and that ","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"KIJGVPECpD"},{"type":"strong","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"children":[{"type":"text","value":"in","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"zEdMdc2I8l"}],"key":"ww3n9BBxC6"},{"type":"text","value":" elegantly tests membership. These aren’t just syntax details; they’re the building blocks of every data validation, every convergence check, every quality filter you’ll ever write.","position":{"start":{"line":1505,"column":1},"end":{"line":1505,"column":1}},"key":"GzAGGyqr4M"}],"key":"dgZRm6Gr0J"},{"type":"paragraph","position":{"start":{"line":1507,"column":1},"end":{"line":1507,"column":1}},"children":[{"type":"text","value":"Your understanding of conditional statements goes beyond syntax to defensive programming philosophy. Those guard clauses you learned could literally prevent spacecraft crashes or save irreplaceable telescope time. The elif chains you practiced will classify astronomical objects, determine observing strategies, and control instrument settings. Every conditional you write is a decision that shapes how your code responds to the infinite variety of real data.","position":{"start":{"line":1507,"column":1},"end":{"line":1507,"column":1}},"key":"NNhnRXO711"}],"key":"dmNs5m6bjS"},{"type":"paragraph","position":{"start":{"line":1509,"column":1},"end":{"line":1509,"column":1}},"children":[{"type":"text","value":"The loop patterns you’ve mastered are universal across computational physics. That accumulator pattern using Welford’s algorithm? It’s calculating photometric precision in the TESS pipeline right now. The convergence pattern with safety limits? It’s finding equilibrium in stellar models. The nested loops you practiced? They’re processing CCD images from every major observatory. Whether using ","position":{"start":{"line":1509,"column":1},"end":{"line":1509,"column":1}},"key":"apDKVUFY5K"},{"type":"strong","position":{"start":{"line":1509,"column":1},"end":{"line":1509,"column":1}},"children":[{"type":"text","value":"for","position":{"start":{"line":1509,"column":1},"end":{"line":1509,"column":1}},"key":"LCJnkqA1iM"}],"key":"f6n0fSIaJz"},{"type":"text","value":" loops to iterate through catalogs, ","position":{"start":{"line":1509,"column":1},"end":{"line":1509,"column":1}},"key":"iZyjCp5J4M"},{"type":"strong","position":{"start":{"line":1509,"column":1},"end":{"line":1509,"column":1}},"children":[{"type":"text","value":"while","position":{"start":{"line":1509,"column":1},"end":{"line":1509,"column":1}},"key":"bjASEYtV2W"}],"key":"JloyaXckS0"},{"type":"text","value":" loops to converge solutions, or list comprehensions to filter data, you now have the full toolkit.","position":{"start":{"line":1509,"column":1},"end":{"line":1509,"column":1}},"key":"wlcR01Ekhn"}],"key":"zCJgSYZSxB"},{"type":"paragraph","position":{"start":{"line":1511,"column":1},"end":{"line":1511,"column":1}},"children":[{"type":"text","value":"Most importantly, you’ve learned that bugs aren’t failures — they’re learning opportunities. Every infinite loop teaches you about termination conditions. Every off-by-one error reinforces proper indexing. The debugging strategies you’ve developed, from strategic print statements to assertions, will serve you throughout your career. Even the experts at NASA and ESA use these same techniques.","position":{"start":{"line":1511,"column":1},"end":{"line":1511,"column":1}},"key":"elGVekjT8c"}],"key":"zkTx4oOZpZ"},{"type":"paragraph","position":{"start":{"line":1513,"column":1},"end":{"line":1513,"column":1}},"children":[{"type":"text","value":"Remember that every major computational achievement relies on these fundamentals. The control flow patterns you’ve learned detected gravitational waves at LIGO, discovered thousands of exoplanets with Kepler, and process images from JWST. You’re not just learning Python syntax — you’re joining a tradition of computational thinking that enables humanity’s greatest discoveries.","position":{"start":{"line":1513,"column":1},"end":{"line":1513,"column":1}},"key":"vIqCFgTbFM"}],"key":"v0dOeafvBA"},{"type":"heading","depth":2,"position":{"start":{"line":1515,"column":1},"end":{"line":1515,"column":1}},"children":[{"type":"text","value":"Definitions","position":{"start":{"line":1515,"column":1},"end":{"line":1515,"column":1}},"key":"xeh00K1mjl"}],"identifier":"definitions","label":"Definitions","html_id":"definitions","implicit":true,"key":"wPC18heuf6"},{"type":"paragraph","position":{"start":{"line":1517,"column":1},"end":{"line":1517,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1517,"column":1},"end":{"line":1517,"column":1}},"children":[{"type":"text","value":"Accumulator Pattern","position":{"start":{"line":1517,"column":1},"end":{"line":1517,"column":1}},"key":"ijyvKgZfVB"}],"key":"SL5aG52yR6"},{"type":"text","value":": An algorithmic pattern where values are iteratively combined into a running total or aggregate, fundamental to reductions and statistical calculations in astronomical data processing.","position":{"start":{"line":1517,"column":1},"end":{"line":1517,"column":1}},"key":"EyYtr9pizY"}],"key":"qe7HeOGMU2"},{"type":"paragraph","position":{"start":{"line":1519,"column":1},"end":{"line":1519,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1519,"column":1},"end":{"line":1519,"column":1}},"children":[{"type":"text","value":"Adaptive Refinement","position":{"start":{"line":1519,"column":1},"end":{"line":1519,"column":1}},"key":"WaBXbd9EPr"}],"key":"kPkJ9ojx7M"},{"type":"text","value":": A universal pattern where parameters are adjusted based on quality metrics, with safeguards against infinite refinement, appearing in timestepping, mesh refinement, and optimization throughout computational astrophysics.","position":{"start":{"line":1519,"column":1},"end":{"line":1519,"column":1}},"key":"WvttXBNrEI"}],"key":"kuAaPNuN4z"},{"type":"paragraph","position":{"start":{"line":1521,"column":1},"end":{"line":1521,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1521,"column":1},"end":{"line":1521,"column":1}},"children":[{"type":"text","value":"and","position":{"start":{"line":1521,"column":1},"end":{"line":1521,"column":1}},"key":"vlfBjBRlTT"}],"key":"jx6wJpjf6S"},{"type":"text","value":": Logical operator that returns True only if both operands are true, using short-circuit evaluation.","position":{"start":{"line":1521,"column":1},"end":{"line":1521,"column":1}},"key":"ajLofQlJs5"}],"key":"jpt9JhBBrU"},{"type":"paragraph","position":{"start":{"line":1523,"column":1},"end":{"line":1523,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1523,"column":1},"end":{"line":1523,"column":1}},"children":[{"type":"text","value":"assert","position":{"start":{"line":1523,"column":1},"end":{"line":1523,"column":1}},"key":"rfxo4L6mbg"}],"key":"LnOxFSjaaX"},{"type":"text","value":": Statement that raises an AssertionError if a condition is false, used for debugging and documenting assumptions during development (not for production validation).","position":{"start":{"line":1523,"column":1},"end":{"line":1523,"column":1}},"key":"icZ7flSDL8"}],"key":"v77QsYaHWJ"},{"type":"paragraph","position":{"start":{"line":1525,"column":1},"end":{"line":1525,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1525,"column":1},"end":{"line":1525,"column":1}},"children":[{"type":"text","value":"Boolean Logic","position":{"start":{"line":1525,"column":1},"end":{"line":1525,"column":1}},"key":"npHFnJoyTt"}],"key":"vqJwSwfUIZ"},{"type":"text","value":": The system of true/false values and logical operations (and, or, not) that underlies all conditional execution in programs.","position":{"start":{"line":1525,"column":1},"end":{"line":1525,"column":1}},"key":"fGexlakG5U"}],"key":"U94oSKtUzx"},{"type":"paragraph","position":{"start":{"line":1527,"column":1},"end":{"line":1527,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1527,"column":1},"end":{"line":1527,"column":1}},"children":[{"type":"text","value":"break","position":{"start":{"line":1527,"column":1},"end":{"line":1527,"column":1}},"key":"DJzcbBkpZw"}],"key":"CYv2NlPlIn"},{"type":"text","value":": Statement that immediately exits the current loop, skipping any remaining iterations.","position":{"start":{"line":1527,"column":1},"end":{"line":1527,"column":1}},"key":"ZymkU1QK5O"}],"key":"hZ5Ys1gX6h"},{"type":"paragraph","position":{"start":{"line":1529,"column":1},"end":{"line":1529,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1529,"column":1},"end":{"line":1529,"column":1}},"children":[{"type":"text","value":"Conditional Statement","position":{"start":{"line":1529,"column":1},"end":{"line":1529,"column":1}},"key":"PuuqnsIGfy"}],"key":"gE7vNE9gzt"},{"type":"text","value":": A control structure (if/elif/else) that executes different code blocks based on whether conditions evaluate to true or false.","position":{"start":{"line":1529,"column":1},"end":{"line":1529,"column":1}},"key":"keLv5mcYC6"}],"key":"iCzqVMJPym"},{"type":"paragraph","position":{"start":{"line":1531,"column":1},"end":{"line":1531,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1531,"column":1},"end":{"line":1531,"column":1}},"children":[{"type":"text","value":"continue","position":{"start":{"line":1531,"column":1},"end":{"line":1531,"column":1}},"key":"f1rxEvXYFc"}],"key":"jS6VJOGnXC"},{"type":"text","value":": Statement that skips the rest of the current loop iteration and proceeds to the next iteration.","position":{"start":{"line":1531,"column":1},"end":{"line":1531,"column":1}},"key":"qZSgLSyAsJ"}],"key":"OOmqu591JW"},{"type":"paragraph","position":{"start":{"line":1533,"column":1},"end":{"line":1533,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1533,"column":1},"end":{"line":1533,"column":1}},"children":[{"type":"text","value":"elif","position":{"start":{"line":1533,"column":1},"end":{"line":1533,"column":1}},"key":"cBi26JSBRd"}],"key":"EPF1stY6Du"},{"type":"text","value":": “Else if” statement that checks an additional condition when the previous if or elif was false.","position":{"start":{"line":1533,"column":1},"end":{"line":1533,"column":1}},"key":"eoBxcCqk1z"}],"key":"CUE8hluiHo"},{"type":"paragraph","position":{"start":{"line":1535,"column":1},"end":{"line":1535,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1535,"column":1},"end":{"line":1535,"column":1}},"children":[{"type":"text","value":"else","position":{"start":{"line":1535,"column":1},"end":{"line":1535,"column":1}},"key":"PalXJA9lQv"}],"key":"AgylO0Xi6g"},{"type":"text","value":": Clause that executes when all previous if/elif conditions were false, or when a loop completes without breaking.","position":{"start":{"line":1535,"column":1},"end":{"line":1535,"column":1}},"key":"ciP5kBWT27"}],"key":"GfdN4YYTop"},{"type":"paragraph","position":{"start":{"line":1537,"column":1},"end":{"line":1537,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1537,"column":1},"end":{"line":1537,"column":1}},"children":[{"type":"text","value":"for","position":{"start":{"line":1537,"column":1},"end":{"line":1537,"column":1}},"key":"ky8hlNP8VU"}],"key":"uw8RmUZ8zS"},{"type":"text","value":": Loop that iterates over elements in a sequence or iterable object.","position":{"start":{"line":1537,"column":1},"end":{"line":1537,"column":1}},"key":"ZgmwRhcmmz"}],"key":"Coa53JB9y4"},{"type":"paragraph","position":{"start":{"line":1539,"column":1},"end":{"line":1539,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1539,"column":1},"end":{"line":1539,"column":1}},"children":[{"type":"text","value":"Guard Clause","position":{"start":{"line":1539,"column":1},"end":{"line":1539,"column":1}},"key":"LgbkCXgdcI"}],"key":"QRwVY6cXX6"},{"type":"text","value":": A conditional statement at the beginning of a function that handles special cases or invalid inputs immediately, preventing deep nesting.","position":{"start":{"line":1539,"column":1},"end":{"line":1539,"column":1}},"key":"owrgulilRw"}],"key":"J2zIKGK5W4"},{"type":"paragraph","position":{"start":{"line":1541,"column":1},"end":{"line":1541,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1541,"column":1},"end":{"line":1541,"column":1}},"children":[{"type":"text","value":"if","position":{"start":{"line":1541,"column":1},"end":{"line":1541,"column":1}},"key":"XJrR7Kcqp9"}],"key":"BzMs7F6tig"},{"type":"text","value":": Statement that executes code only when a specified condition is true.","position":{"start":{"line":1541,"column":1},"end":{"line":1541,"column":1}},"key":"lkCzTcEnmZ"}],"key":"iXns3IbbzJ"},{"type":"paragraph","position":{"start":{"line":1543,"column":1},"end":{"line":1543,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1543,"column":1},"end":{"line":1543,"column":1}},"children":[{"type":"text","value":"in","position":{"start":{"line":1543,"column":1},"end":{"line":1543,"column":1}},"key":"kGNhWCRmo7"}],"key":"hb1DxwTGZx"},{"type":"text","value":": Operator that tests membership in a sequence or collection.","position":{"start":{"line":1543,"column":1},"end":{"line":1543,"column":1}},"key":"QZPKr6O4eO"}],"key":"fUaX6xFPRC"},{"type":"paragraph","position":{"start":{"line":1545,"column":1},"end":{"line":1545,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1545,"column":1},"end":{"line":1545,"column":1}},"children":[{"type":"text","value":"is","position":{"start":{"line":1545,"column":1},"end":{"line":1545,"column":1}},"key":"b9yQkHIVyG"}],"key":"rbhEO3IXkg"},{"type":"text","value":": Operator that tests object identity (same object in memory), not just equality of values.","position":{"start":{"line":1545,"column":1},"end":{"line":1545,"column":1}},"key":"ieQWzZl1bk"}],"key":"eOFkD133kJ"},{"type":"paragraph","position":{"start":{"line":1547,"column":1},"end":{"line":1547,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1547,"column":1},"end":{"line":1547,"column":1}},"children":[{"type":"text","value":"List Comprehension","position":{"start":{"line":1547,"column":1},"end":{"line":1547,"column":1}},"key":"q2PA5AJdiW"}],"key":"Xdsy0gUgMq"},{"type":"text","value":": A concise Python syntax for creating lists: ","position":{"start":{"line":1547,"column":1},"end":{"line":1547,"column":1}},"key":"p4QgrKk0Wy"},{"type":"inlineCode","value":"[expression for item in iterable if condition]","position":{"start":{"line":1547,"column":1},"end":{"line":1547,"column":1}},"key":"sZvBVz8Jnr"},{"type":"text","value":".","position":{"start":{"line":1547,"column":1},"end":{"line":1547,"column":1}},"key":"NJMSJrYHP6"}],"key":"Kxub13PmhH"},{"type":"paragraph","position":{"start":{"line":1549,"column":1},"end":{"line":1549,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1549,"column":1},"end":{"line":1549,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":1549,"column":1},"end":{"line":1549,"column":1}},"key":"akFMweUj8G"}],"key":"SgvNa6rmSt"},{"type":"text","value":": Logical operator that inverts a boolean value (True becomes False, False becomes True).","position":{"start":{"line":1549,"column":1},"end":{"line":1549,"column":1}},"key":"cp16NbW9Em"}],"key":"yQJB58lI88"},{"type":"paragraph","position":{"start":{"line":1551,"column":1},"end":{"line":1551,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1551,"column":1},"end":{"line":1551,"column":1}},"children":[{"type":"text","value":"or","position":{"start":{"line":1551,"column":1},"end":{"line":1551,"column":1}},"key":"Fvq3RPqoyp"}],"key":"gTJ17oowHD"},{"type":"text","value":": Logical operator that returns True if at least one operand is true, using short-circuit evaluation.","position":{"start":{"line":1551,"column":1},"end":{"line":1551,"column":1}},"key":"EHaUYg2qfX"}],"key":"KvF8nWtm0n"},{"type":"paragraph","position":{"start":{"line":1553,"column":1},"end":{"line":1553,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1553,"column":1},"end":{"line":1553,"column":1}},"children":[{"type":"text","value":"pass","position":{"start":{"line":1553,"column":1},"end":{"line":1553,"column":1}},"key":"CwXGcaVbiA"}],"key":"dddCnwaF6M"},{"type":"text","value":": Null statement that does nothing, used as a placeholder where syntax requires a statement.","position":{"start":{"line":1553,"column":1},"end":{"line":1553,"column":1}},"key":"ExacU3thqu"}],"key":"bLMou0qIPk"},{"type":"paragraph","position":{"start":{"line":1555,"column":1},"end":{"line":1555,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1555,"column":1},"end":{"line":1555,"column":1}},"children":[{"type":"text","value":"Pseudocode","position":{"start":{"line":1555,"column":1},"end":{"line":1555,"column":1}},"key":"DFIbkJpYEj"}],"key":"kMc5PVSYHF"},{"type":"text","value":": A human-readable description of an algorithm that focuses on logic and structure without syntactic details.","position":{"start":{"line":1555,"column":1},"end":{"line":1555,"column":1}},"key":"pwhmKAMJ0r"}],"key":"M7WGLMKCyT"},{"type":"paragraph","position":{"start":{"line":1557,"column":1},"end":{"line":1557,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1557,"column":1},"end":{"line":1557,"column":1}},"children":[{"type":"text","value":"Short-circuit Evaluation","position":{"start":{"line":1557,"column":1},"end":{"line":1557,"column":1}},"key":"t9ppMN6S3E"}],"key":"LqocRqcqM4"},{"type":"text","value":": The behavior where logical operators stop evaluating as soon as the result is determined.","position":{"start":{"line":1557,"column":1},"end":{"line":1557,"column":1}},"key":"f9gJQnOPvK"}],"key":"bt0ioMx1Oq"},{"type":"paragraph","position":{"start":{"line":1559,"column":1},"end":{"line":1559,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1559,"column":1},"end":{"line":1559,"column":1}},"children":[{"type":"text","value":"Walrus Operator","position":{"start":{"line":1559,"column":1},"end":{"line":1559,"column":1}},"key":"PggSWsFK1T"}],"key":"PwvdNLflFJ"},{"type":"text","value":" (","position":{"start":{"line":1559,"column":1},"end":{"line":1559,"column":1}},"key":"EHxP7gqeMA"},{"type":"inlineCode","value":":=","position":{"start":{"line":1559,"column":1},"end":{"line":1559,"column":1}},"key":"EoNnCZtHex"},{"type":"text","value":"): Assignment expression operator (Python 3.8+) that assigns a value to a variable as part of an expression, allowing both assignment and testing in a single statement.","position":{"start":{"line":1559,"column":1},"end":{"line":1559,"column":1}},"key":"R1K8BDxZUy"}],"key":"VQnym4nHmm"},{"type":"paragraph","position":{"start":{"line":1561,"column":1},"end":{"line":1561,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1561,"column":1},"end":{"line":1561,"column":1}},"children":[{"type":"text","value":"while","position":{"start":{"line":1561,"column":1},"end":{"line":1561,"column":1}},"key":"lzy6Ll1722"}],"key":"xATfnoGTEf"},{"type":"text","value":": Loop that continues executing as long as a specified condition remains true.","position":{"start":{"line":1561,"column":1},"end":{"line":1561,"column":1}},"key":"Oh9bYsB4rL"}],"key":"hHZ1bczPzK"},{"type":"heading","depth":2,"position":{"start":{"line":1563,"column":1},"end":{"line":1563,"column":1}},"children":[{"type":"text","value":"Key Takeaways","position":{"start":{"line":1563,"column":1},"end":{"line":1563,"column":1}},"key":"RHtfsI75AW"}],"identifier":"key-takeaways","label":"Key Takeaways","html_id":"key-takeaways","implicit":true,"key":"VSJ05Mz0od"},{"type":"paragraph","position":{"start":{"line":1565,"column":1},"end":{"line":1565,"column":1}},"children":[{"type":"text","value":"✓ Pseudocode reveals logical flaws before they become bugs — always design before implementing","position":{"start":{"line":1565,"column":1},"end":{"line":1565,"column":1}},"key":"dU84oSGH8l"}],"key":"V7hTvcW5kQ"},{"type":"paragraph","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"children":[{"type":"text","value":"✓ Master all six comparison operators (","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"EzI0bTV1GR"},{"type":"inlineCode","value":">","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"Q7OMiXAGkG"},{"type":"text","value":", ","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"PpjmjlC3gV"},{"type":"inlineCode","value":"<","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"MHHtb5AlIV"},{"type":"text","value":", ","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"Y77K374I5q"},{"type":"inlineCode","value":">=","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"MGNLBJwo0T"},{"type":"text","value":", ","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"XwvSRuBhYg"},{"type":"inlineCode","value":"<=","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"sALeLKJ2XE"},{"type":"text","value":", ","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"GAYSMFXEYW"},{"type":"inlineCode","value":"==","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"k0GgJ4ZMdR"},{"type":"text","value":", ","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"kbrBc0jyCS"},{"type":"inlineCode","value":"!=","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"CFgAoHxHjk"},{"type":"text","value":") and three logical operators (","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"b4mSajCn7N"},{"type":"strong","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"children":[{"type":"text","value":"and","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"aGdQ0nWREv"}],"key":"FYxJpnCjjV"},{"type":"text","value":", ","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"D0ux06SJhB"},{"type":"strong","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"children":[{"type":"text","value":"or","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"bDLlSdrpHW"}],"key":"agy7rsgEzw"},{"type":"text","value":", ","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"pFh5dNJJLo"},{"type":"strong","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"ctvG6z7WQK"}],"key":"pS1BCife09"},{"type":"text","value":")","position":{"start":{"line":1567,"column":1},"end":{"line":1567,"column":1}},"key":"f4TXjuqGcj"}],"key":"Sx2WpQ84rZ"},{"type":"paragraph","position":{"start":{"line":1569,"column":1},"end":{"line":1569,"column":1}},"children":[{"type":"text","value":"✓ Never use ","position":{"start":{"line":1569,"column":1},"end":{"line":1569,"column":1}},"key":"pymNdqXWyP"},{"type":"inlineCode","value":"==","position":{"start":{"line":1569,"column":1},"end":{"line":1569,"column":1}},"key":"O48cPixUaG"},{"type":"text","value":" with floating-point numbers; always use tolerance-based comparisons like ","position":{"start":{"line":1569,"column":1},"end":{"line":1569,"column":1}},"key":"GXccg7jiIR"},{"type":"inlineCode","value":"math.isclose()","position":{"start":{"line":1569,"column":1},"end":{"line":1569,"column":1}},"key":"loNMp1CATI"}],"key":"gbnFvKhpHF"},{"type":"paragraph","position":{"start":{"line":1571,"column":1},"end":{"line":1571,"column":1}},"children":[{"type":"text","value":"✓ The ","position":{"start":{"line":1571,"column":1},"end":{"line":1571,"column":1}},"key":"IVnIh7lwzh"},{"type":"strong","position":{"start":{"line":1571,"column":1},"end":{"line":1571,"column":1}},"children":[{"type":"text","value":"is","position":{"start":{"line":1571,"column":1},"end":{"line":1571,"column":1}},"key":"HEnQcAoEYg"}],"key":"SAJCcsymVw"},{"type":"text","value":" operator checks identity, not equality — use it for None checks","position":{"start":{"line":1571,"column":1},"end":{"line":1571,"column":1}},"key":"uMdyKuGYQV"}],"key":"rUXbp0HCtY"},{"type":"paragraph","position":{"start":{"line":1573,"column":1},"end":{"line":1573,"column":1}},"children":[{"type":"text","value":"✓ The ","position":{"start":{"line":1573,"column":1},"end":{"line":1573,"column":1}},"key":"nfvsh4kSUP"},{"type":"strong","position":{"start":{"line":1573,"column":1},"end":{"line":1573,"column":1}},"children":[{"type":"text","value":"in","position":{"start":{"line":1573,"column":1},"end":{"line":1573,"column":1}},"key":"q9XDrXbMDA"}],"key":"V1rK1DrHRB"},{"type":"text","value":" operator elegantly tests membership in sequences or strings","position":{"start":{"line":1573,"column":1},"end":{"line":1573,"column":1}},"key":"jWBzzkd45n"}],"key":"ByQO9v47RL"},{"type":"paragraph","position":{"start":{"line":1575,"column":1},"end":{"line":1575,"column":1}},"children":[{"type":"text","value":"✓ Guard clauses handle special cases first, making main logic clearer","position":{"start":{"line":1575,"column":1},"end":{"line":1575,"column":1}},"key":"fofGF2Ypi4"}],"key":"m0oWfsqR3o"},{"type":"paragraph","position":{"start":{"line":1577,"column":1},"end":{"line":1577,"column":1}},"children":[{"type":"text","value":"✓ ","position":{"start":{"line":1577,"column":1},"end":{"line":1577,"column":1}},"key":"mmjC2cc9z3"},{"type":"strong","position":{"start":{"line":1577,"column":1},"end":{"line":1577,"column":1}},"children":[{"type":"text","value":"for","position":{"start":{"line":1577,"column":1},"end":{"line":1577,"column":1}},"key":"aSNg3L30yY"}],"key":"fUenfKzyKZ"},{"type":"text","value":" loops iterate over sequences, ","position":{"start":{"line":1577,"column":1},"end":{"line":1577,"column":1}},"key":"DXDG1wr6Ai"},{"type":"strong","position":{"start":{"line":1577,"column":1},"end":{"line":1577,"column":1}},"children":[{"type":"text","value":"while","position":{"start":{"line":1577,"column":1},"end":{"line":1577,"column":1}},"key":"ErmieEB85S"}],"key":"jEFAgxs0s5"},{"type":"text","value":" loops continue until a condition becomes false","position":{"start":{"line":1577,"column":1},"end":{"line":1577,"column":1}},"key":"Oxgcetjwll"}],"key":"DsOzJ2hebX"},{"type":"paragraph","position":{"start":{"line":1579,"column":1},"end":{"line":1579,"column":1}},"children":[{"type":"text","value":"✓ ","position":{"start":{"line":1579,"column":1},"end":{"line":1579,"column":1}},"key":"Ngu0FCpzpV"},{"type":"strong","position":{"start":{"line":1579,"column":1},"end":{"line":1579,"column":1}},"children":[{"type":"text","value":"break","position":{"start":{"line":1579,"column":1},"end":{"line":1579,"column":1}},"key":"PjzPn1G0SE"}],"key":"dfxYwNuI8h"},{"type":"text","value":" exits loops early, ","position":{"start":{"line":1579,"column":1},"end":{"line":1579,"column":1}},"key":"CvxkaprVz2"},{"type":"strong","position":{"start":{"line":1579,"column":1},"end":{"line":1579,"column":1}},"children":[{"type":"text","value":"continue","position":{"start":{"line":1579,"column":1},"end":{"line":1579,"column":1}},"key":"Tb7YnhCljh"}],"key":"LVIQkDtYpI"},{"type":"text","value":" skips to the next iteration, ","position":{"start":{"line":1579,"column":1},"end":{"line":1579,"column":1}},"key":"IHrdzqTaq3"},{"type":"strong","position":{"start":{"line":1579,"column":1},"end":{"line":1579,"column":1}},"children":[{"type":"text","value":"else","position":{"start":{"line":1579,"column":1},"end":{"line":1579,"column":1}},"key":"lZYTC1OEvv"}],"key":"j2Ldv0iarb"},{"type":"text","value":" runs if loop completes","position":{"start":{"line":1579,"column":1},"end":{"line":1579,"column":1}},"key":"Rv3KGBkMgA"}],"key":"sqWZSWglYM"},{"type":"paragraph","position":{"start":{"line":1581,"column":1},"end":{"line":1581,"column":1}},"children":[{"type":"text","value":"✓ List comprehensions are faster than loops for simple transformations but become unreadable for complex logic","position":{"start":{"line":1581,"column":1},"end":{"line":1581,"column":1}},"key":"aPo2rqmcOB"}],"key":"ykXdsFDFy5"},{"type":"paragraph","position":{"start":{"line":1583,"column":1},"end":{"line":1583,"column":1}},"children":[{"type":"text","value":"✓ Short-circuit evaluation in ","position":{"start":{"line":1583,"column":1},"end":{"line":1583,"column":1}},"key":"MFLExBokcH"},{"type":"strong","position":{"start":{"line":1583,"column":1},"end":{"line":1583,"column":1}},"children":[{"type":"text","value":"and","position":{"start":{"line":1583,"column":1},"end":{"line":1583,"column":1}},"key":"WxfWL8FZZD"}],"key":"KARUzNdg2p"},{"type":"text","value":"/","position":{"start":{"line":1583,"column":1},"end":{"line":1583,"column":1}},"key":"gxJNvHCgVa"},{"type":"strong","position":{"start":{"line":1583,"column":1},"end":{"line":1583,"column":1}},"children":[{"type":"text","value":"or","position":{"start":{"line":1583,"column":1},"end":{"line":1583,"column":1}},"key":"hMf2BLctsB"}],"key":"Jk0ttIIzx4"},{"type":"text","value":" prevents errors and improves performance","position":{"start":{"line":1583,"column":1},"end":{"line":1583,"column":1}},"key":"TIAzLLbhHQ"}],"key":"wfrQqYAdvz"},{"type":"paragraph","position":{"start":{"line":1585,"column":1},"end":{"line":1585,"column":1}},"children":[{"type":"text","value":"✓ The accumulator pattern is fundamental to scientific computing, appearing in all statistical calculations","position":{"start":{"line":1585,"column":1},"end":{"line":1585,"column":1}},"key":"UO2ZwEb1Ce"}],"key":"Z4Xqd1KHlw"},{"type":"paragraph","position":{"start":{"line":1587,"column":1},"end":{"line":1587,"column":1}},"children":[{"type":"text","value":"✓ Always include maximum iteration limits in ","position":{"start":{"line":1587,"column":1},"end":{"line":1587,"column":1}},"key":"fGuuCMsc8j"},{"type":"strong","position":{"start":{"line":1587,"column":1},"end":{"line":1587,"column":1}},"children":[{"type":"text","value":"while","position":{"start":{"line":1587,"column":1},"end":{"line":1587,"column":1}},"key":"Z6xbtVPGB2"}],"key":"NxSBfO8Srq"},{"type":"text","value":" loops to prevent infinite loops","position":{"start":{"line":1587,"column":1},"end":{"line":1587,"column":1}},"key":"QL5kiygH5g"}],"key":"pgQS18AeoQ"},{"type":"paragraph","position":{"start":{"line":1589,"column":1},"end":{"line":1589,"column":1}},"children":[{"type":"text","value":"✓ Welford’s algorithm solves numerical stability issues in streaming statistics","position":{"start":{"line":1589,"column":1},"end":{"line":1589,"column":1}},"key":"q6Ud6XGrSA"}],"key":"AsBljGE9Kw"},{"type":"paragraph","position":{"start":{"line":1591,"column":1},"end":{"line":1591,"column":1}},"children":[{"type":"text","value":"✓ Use ","position":{"start":{"line":1591,"column":1},"end":{"line":1591,"column":1}},"key":"e6n5RcpEDv"},{"type":"strong","position":{"start":{"line":1591,"column":1},"end":{"line":1591,"column":1}},"children":[{"type":"text","value":"assert","position":{"start":{"line":1591,"column":1},"end":{"line":1591,"column":1}},"key":"y9G8LOjYVg"}],"key":"Qj0v1navNY"},{"type":"text","value":" statements to document and enforce assumptions during development","position":{"start":{"line":1591,"column":1},"end":{"line":1591,"column":1}},"key":"smE3Wfw8i4"}],"key":"imOdVjgVks"},{"type":"paragraph","position":{"start":{"line":1593,"column":1},"end":{"line":1593,"column":1}},"children":[{"type":"text","value":"✓ Every major astronomical discovery relies on the control flow patterns you’ve learned","position":{"start":{"line":1593,"column":1},"end":{"line":1593,"column":1}},"key":"hiYveFPlTp"}],"key":"vycGuGF5Xk"},{"type":"heading","depth":2,"position":{"start":{"line":1595,"column":1},"end":{"line":1595,"column":1}},"children":[{"type":"text","value":"Quick Reference Tables","position":{"start":{"line":1595,"column":1},"end":{"line":1595,"column":1}},"key":"tDyutlVIrD"}],"identifier":"quick-reference-tables","label":"Quick Reference Tables","html_id":"quick-reference-tables","implicit":true,"key":"EccVTJqahH"},{"type":"container","kind":"table","children":[{"type":"caption","children":[{"type":"paragraph","children":[{"type":"text","value":"Comparison Operators","position":{"start":{"line":1597,"column":1},"end":{"line":1597,"column":1}},"key":"YuXFoF6XM4"}],"key":"hzYEG1HLBb"}],"key":"Nxv9qU38OL"},{"type":"table","children":[{"type":"tableRow","children":[{"type":"tableCell","header":true,"children":[{"type":"text","value":"Operator","position":{"start":{"line":1601,"column":1},"end":{"line":1601,"column":1}},"key":"AgTYYkcAbl"}],"key":"zYkSLjPoie"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Description","position":{"start":{"line":1602,"column":1},"end":{"line":1602,"column":1}},"key":"G0oKXUZ5Jy"}],"key":"AaI1ElYI2J"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Example","position":{"start":{"line":1603,"column":1},"end":{"line":1603,"column":1}},"key":"xU3eVlEwLl"}],"key":"L7BOi43XX1"}],"key":"gxl6rRUgPn"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":">","position":{"start":{"line":1604,"column":1},"end":{"line":1604,"column":1}},"key":"PE2RCiiLDy"}],"key":"LgbysZgN3a"},{"type":"tableCell","children":[{"type":"text","value":"Greater than","position":{"start":{"line":1605,"column":1},"end":{"line":1605,"column":1}},"key":"SIXwC28fQe"}],"key":"vuCAUhWvdk"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if magnitude > 6.0:","position":{"start":{"line":1606,"column":1},"end":{"line":1606,"column":1}},"key":"lKqjIbuUwG"}],"key":"aaRwqG7utb"}],"key":"SGxIvGNOw1"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"<","position":{"start":{"line":1607,"column":1},"end":{"line":1607,"column":1}},"key":"krccQntckO"}],"key":"ujKoWzhnQw"},{"type":"tableCell","children":[{"type":"text","value":"Less than","position":{"start":{"line":1608,"column":1},"end":{"line":1608,"column":1}},"key":"BulyRqOdtz"}],"key":"jS0E8o6bem"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if redshift < 0.1:","position":{"start":{"line":1609,"column":1},"end":{"line":1609,"column":1}},"key":"Rko1bEjsH4"}],"key":"sNmwVH3jjd"}],"key":"YeaZjxVzdZ"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":">=","position":{"start":{"line":1610,"column":1},"end":{"line":1610,"column":1}},"key":"Lupobc3uh6"}],"key":"TawCg2fzbk"},{"type":"tableCell","children":[{"type":"text","value":"Greater or equal","position":{"start":{"line":1611,"column":1},"end":{"line":1611,"column":1}},"key":"k8JPdo1osl"}],"key":"NQLGaolDZq"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if snr >= 5.0:","position":{"start":{"line":1612,"column":1},"end":{"line":1612,"column":1}},"key":"j7B3fejVM7"}],"key":"XjSryQZWCF"}],"key":"mrqu6Dkq9t"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"<=","position":{"start":{"line":1613,"column":1},"end":{"line":1613,"column":1}},"key":"mKsQP2rKDr"}],"key":"Do7Kdwpgvz"},{"type":"tableCell","children":[{"type":"text","value":"Less or equal","position":{"start":{"line":1614,"column":1},"end":{"line":1614,"column":1}},"key":"uI7TlgKcmT"}],"key":"Hh4oyWnlYw"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if error <= tolerance:","position":{"start":{"line":1615,"column":1},"end":{"line":1615,"column":1}},"key":"nf8h0eQKn4"}],"key":"NknY7O2wbJ"}],"key":"ZIoygp62S4"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"==","position":{"start":{"line":1616,"column":1},"end":{"line":1616,"column":1}},"key":"JKKfc9n3HH"}],"key":"lqjzLrtKjc"},{"type":"tableCell","children":[{"type":"text","value":"Equal (avoid with floats!)","position":{"start":{"line":1617,"column":1},"end":{"line":1617,"column":1}},"key":"MpZFL8R3wO"}],"key":"GARZ7VF0Q0"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if status == 'complete':","position":{"start":{"line":1618,"column":1},"end":{"line":1618,"column":1}},"key":"w3FG0wdZbY"}],"key":"oHE8RzDyab"}],"key":"TCeQ4NjgYs"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"!=","position":{"start":{"line":1619,"column":1},"end":{"line":1619,"column":1}},"key":"FSAWHqRw1a"}],"key":"ljk0dJHubG"},{"type":"tableCell","children":[{"type":"text","value":"Not equal","position":{"start":{"line":1620,"column":1},"end":{"line":1620,"column":1}},"key":"uGXAwyvoaw"}],"key":"J05fFeNnYD"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if flag != -999:","position":{"start":{"line":1621,"column":1},"end":{"line":1621,"column":1}},"key":"seqgtJ7sAo"}],"key":"OKfu5FIaKs"}],"key":"swklsinhQn"}],"key":"iPlhkRmOQO"}],"enumerator":"1","key":"lzwPiIDM71"},{"type":"container","kind":"table","children":[{"type":"caption","children":[{"type":"paragraph","children":[{"type":"text","value":"Logical Operators","position":{"start":{"line":1624,"column":1},"end":{"line":1624,"column":1}},"key":"YoShDcb0BL"}],"key":"JcRyokrKbv"}],"key":"qrgOu8KXnA"},{"type":"table","children":[{"type":"tableRow","children":[{"type":"tableCell","header":true,"children":[{"type":"text","value":"Operator","position":{"start":{"line":1628,"column":1},"end":{"line":1628,"column":1}},"key":"Xpy8DchRUk"}],"key":"QQE6CbfjU5"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Description","position":{"start":{"line":1629,"column":1},"end":{"line":1629,"column":1}},"key":"vewUy1zFKM"}],"key":"JwuM0impgJ"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Example","position":{"start":{"line":1630,"column":1},"end":{"line":1630,"column":1}},"key":"lJA7R4aqRH"}],"key":"KxDpkDLb1n"}],"key":"jtYAmTZ7U2"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"and","position":{"start":{"line":1631,"column":1},"end":{"line":1631,"column":1}},"key":"EpQ52hdkbS"}],"key":"iRQ8wGsYko"},{"type":"tableCell","children":[{"type":"text","value":"Both must be true","position":{"start":{"line":1632,"column":1},"end":{"line":1632,"column":1}},"key":"QyVLaG8yw2"}],"key":"dWqbNpmzjm"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if x > 0 and y > 0:","position":{"start":{"line":1633,"column":1},"end":{"line":1633,"column":1}},"key":"nJ5VpSuO7c"}],"key":"DfyRU91iwr"}],"key":"RhaORtUBu3"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"or","position":{"start":{"line":1634,"column":1},"end":{"line":1634,"column":1}},"key":"HsoYRqQ1nz"}],"key":"rptNCLKQag"},{"type":"tableCell","children":[{"type":"text","value":"At least one true","position":{"start":{"line":1635,"column":1},"end":{"line":1635,"column":1}},"key":"KQawn54jeZ"}],"key":"Jdn6mq3AxV"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if bright or variable:","position":{"start":{"line":1636,"column":1},"end":{"line":1636,"column":1}},"key":"gAiGfDHum9"}],"key":"yvTkHfqKJf"}],"key":"z8m4towiz3"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"not","position":{"start":{"line":1637,"column":1},"end":{"line":1637,"column":1}},"key":"ADcIpkVHZ7"}],"key":"KxkuvhR5RV"},{"type":"tableCell","children":[{"type":"text","value":"Inverts boolean","position":{"start":{"line":1638,"column":1},"end":{"line":1638,"column":1}},"key":"PBYkloFrbf"}],"key":"XBhQg1EaJ6"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if not converged:","position":{"start":{"line":1639,"column":1},"end":{"line":1639,"column":1}},"key":"MD5uGjIwTX"}],"key":"F04NosUmay"}],"key":"Mp6GYo94aN"}],"key":"USRjeCNc7M"}],"enumerator":"2","key":"RIGdlPTRt0"},{"type":"container","kind":"table","children":[{"type":"caption","children":[{"type":"paragraph","children":[{"type":"text","value":"Special Operators","position":{"start":{"line":1642,"column":1},"end":{"line":1642,"column":1}},"key":"U8wt4dSuvy"}],"key":"dn14cn7gcl"}],"key":"fiVYBHe4sm"},{"type":"table","children":[{"type":"tableRow","children":[{"type":"tableCell","header":true,"children":[{"type":"text","value":"Operator","position":{"start":{"line":1646,"column":1},"end":{"line":1646,"column":1}},"key":"IbAszvl64C"}],"key":"vTN5KtNC8S"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Description","position":{"start":{"line":1647,"column":1},"end":{"line":1647,"column":1}},"key":"IuMB88e88D"}],"key":"tKBITQaAhr"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Example","position":{"start":{"line":1648,"column":1},"end":{"line":1648,"column":1}},"key":"L2tTn78vKd"}],"key":"TevV6AKF39"}],"key":"zher7Jwc1O"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"in","position":{"start":{"line":1649,"column":1},"end":{"line":1649,"column":1}},"key":"b68IHuw5dT"}],"key":"ta8GcXLJ76"},{"type":"tableCell","children":[{"type":"text","value":"Membership test","position":{"start":{"line":1650,"column":1},"end":{"line":1650,"column":1}},"key":"ggjDSHJbgV"}],"key":"NZF3eWOXCV"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if 'fits' in filename:","position":{"start":{"line":1651,"column":1},"end":{"line":1651,"column":1}},"key":"OeNcLVkFeN"}],"key":"qKM6RAJp8J"}],"key":"CIRyKzeuUb"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"is","position":{"start":{"line":1652,"column":1},"end":{"line":1652,"column":1}},"key":"ZdbwhFmO3o"}],"key":"aswCUk8H2A"},{"type":"tableCell","children":[{"type":"text","value":"Identity test","position":{"start":{"line":1653,"column":1},"end":{"line":1653,"column":1}},"key":"GODVHyDO9t"}],"key":"LbuQFGtNSb"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if result is None:","position":{"start":{"line":1654,"column":1},"end":{"line":1654,"column":1}},"key":"geyyMmSRBR"}],"key":"g7RtUygFbk"}],"key":"qqmgv68V6G"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"is not","position":{"start":{"line":1655,"column":1},"end":{"line":1655,"column":1}},"key":"WQpEFfTlSM"}],"key":"dj4wweHLBO"},{"type":"tableCell","children":[{"type":"text","value":"Negative identity","position":{"start":{"line":1656,"column":1},"end":{"line":1656,"column":1}},"key":"WP4ckebFwX"}],"key":"YHQ0DUTIjC"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if data is not None:","position":{"start":{"line":1657,"column":1},"end":{"line":1657,"column":1}},"key":"YhMnAhmOaU"}],"key":"EFunbwBD5H"}],"key":"hdgVMHjJnF"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":":=","position":{"start":{"line":1658,"column":1},"end":{"line":1658,"column":1}},"key":"EWVdfOPoC3"}],"key":"epiG15uD2A"},{"type":"tableCell","children":[{"type":"text","value":"Walrus operator (Python 3.8+)","position":{"start":{"line":1659,"column":1},"end":{"line":1659,"column":1}},"key":"ejJfRSPpSQ"}],"key":"M8kQ5Kesai"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if (n := len(data)) > 100:","position":{"start":{"line":1660,"column":1},"end":{"line":1660,"column":1}},"key":"xnKJDpUcjT"}],"key":"OiQQ7xylad"}],"key":"jLvtg1hs4A"}],"key":"pqQR0lketM"}],"enumerator":"3","key":"cMqyi5pvoN"},{"type":"container","kind":"table","children":[{"type":"caption","children":[{"type":"paragraph","children":[{"type":"text","value":"Control Flow Statements","position":{"start":{"line":1663,"column":1},"end":{"line":1663,"column":1}},"key":"lMJ53EH7S7"}],"key":"G9pSDJjMSv"}],"key":"Asa306mEer"},{"type":"table","children":[{"type":"tableRow","children":[{"type":"tableCell","header":true,"children":[{"type":"text","value":"Statement","position":{"start":{"line":1667,"column":1},"end":{"line":1667,"column":1}},"key":"FCx9UIWk9D"}],"key":"ck5piAZzPC"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Purpose","position":{"start":{"line":1668,"column":1},"end":{"line":1668,"column":1}},"key":"hWnxHZmlew"}],"key":"q9o8KlJx5H"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Example","position":{"start":{"line":1669,"column":1},"end":{"line":1669,"column":1}},"key":"bXuQW4lmnv"}],"key":"tRibbOaGnj"}],"key":"WSeqaiALfx"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"if/elif/else","position":{"start":{"line":1670,"column":1},"end":{"line":1670,"column":1}},"key":"k2je4LBMUg"}],"key":"FvTr6NUDEq"},{"type":"tableCell","children":[{"type":"text","value":"Conditional execution","position":{"start":{"line":1671,"column":1},"end":{"line":1671,"column":1}},"key":"fG77fwZqMv"}],"key":"K7AotCsoZK"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if mag < 6: visible = True","position":{"start":{"line":1672,"column":1},"end":{"line":1672,"column":1}},"key":"HdVTGjU2a3"}],"key":"BLSMafJ0as"}],"key":"f8vAgBRjuK"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"for","position":{"start":{"line":1673,"column":1},"end":{"line":1673,"column":1}},"key":"La6UFnNDqp"}],"key":"K6KZTSWXtV"},{"type":"tableCell","children":[{"type":"text","value":"Iterate over sequence","position":{"start":{"line":1674,"column":1},"end":{"line":1674,"column":1}},"key":"O8l9oDidNa"}],"key":"zl0xKdS5GC"},{"type":"tableCell","children":[{"type":"inlineCode","value":"for star in catalog:","position":{"start":{"line":1675,"column":1},"end":{"line":1675,"column":1}},"key":"cqqOVmm8pk"}],"key":"S0FyHWf01x"}],"key":"oWjOCIJLn9"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"while","position":{"start":{"line":1676,"column":1},"end":{"line":1676,"column":1}},"key":"X7vHiwwe65"}],"key":"fyVnb8qIf7"},{"type":"tableCell","children":[{"type":"text","value":"Loop while condition true","position":{"start":{"line":1677,"column":1},"end":{"line":1677,"column":1}},"key":"lXe3IGRndB"}],"key":"cVO95kmFup"},{"type":"tableCell","children":[{"type":"inlineCode","value":"while error > tolerance:","position":{"start":{"line":1678,"column":1},"end":{"line":1678,"column":1}},"key":"js4sqLQ6Ex"}],"key":"iKUR6UIrTO"}],"key":"UFsGo7L5t4"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"break","position":{"start":{"line":1679,"column":1},"end":{"line":1679,"column":1}},"key":"LW3kKcx0uo"}],"key":"rYKJFFTSnf"},{"type":"tableCell","children":[{"type":"text","value":"Exit loop early","position":{"start":{"line":1680,"column":1},"end":{"line":1680,"column":1}},"key":"nlefNs1prL"}],"key":"jNd3bjanEx"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if converged: break","position":{"start":{"line":1681,"column":1},"end":{"line":1681,"column":1}},"key":"zTs7p6k4dg"}],"key":"eOltuOp56X"}],"key":"vfRAdaQzGw"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"continue","position":{"start":{"line":1682,"column":1},"end":{"line":1682,"column":1}},"key":"YF8pcfOdpg"}],"key":"iVyD8jf67F"},{"type":"tableCell","children":[{"type":"text","value":"Skip to next iteration","position":{"start":{"line":1683,"column":1},"end":{"line":1683,"column":1}},"key":"q0VuTjP7Zh"}],"key":"F6d6sdJ0S3"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if bad_data: continue","position":{"start":{"line":1684,"column":1},"end":{"line":1684,"column":1}},"key":"J43iw8Hezd"}],"key":"majI2olbel"}],"key":"x3U4TVjJbi"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"pass","position":{"start":{"line":1685,"column":1},"end":{"line":1685,"column":1}},"key":"gPZwpJae0X"}],"key":"ZwKBWuGtAT"},{"type":"tableCell","children":[{"type":"text","value":"Do nothing (placeholder)","position":{"start":{"line":1686,"column":1},"end":{"line":1686,"column":1}},"key":"o7lqSFpjSW"}],"key":"M7Ju0o8ges"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if not ready: pass","position":{"start":{"line":1687,"column":1},"end":{"line":1687,"column":1}},"key":"OzpWSvdkVb"}],"key":"XXLP9xRdVw"}],"key":"bAv0eMKDG4"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"assert","position":{"start":{"line":1688,"column":1},"end":{"line":1688,"column":1}},"key":"ehrvXcZpTP"}],"key":"B4oraEEwnN"},{"type":"tableCell","children":[{"type":"text","value":"Debug check","position":{"start":{"line":1689,"column":1},"end":{"line":1689,"column":1}},"key":"ceImBBGnYG"}],"key":"Ce3iHLmdwB"},{"type":"tableCell","children":[{"type":"inlineCode","value":"assert len(data) > 0","position":{"start":{"line":1690,"column":1},"end":{"line":1690,"column":1}},"key":"VQdiQykJHA"}],"key":"aFtkGp4WrB"}],"key":"Rs0FdjdMNJ"}],"key":"PcgHkZpsB4"}],"enumerator":"4","key":"Jf56bfOaUK"},{"type":"container","kind":"table","children":[{"type":"caption","children":[{"type":"paragraph","children":[{"type":"text","value":"Built-in Functions for Loops","position":{"start":{"line":1693,"column":1},"end":{"line":1693,"column":1}},"key":"i0qSaztWfH"}],"key":"LmabffWy6w"}],"key":"aaSPEEdX5Y"},{"type":"table","children":[{"type":"tableRow","children":[{"type":"tableCell","header":true,"children":[{"type":"text","value":"Function","position":{"start":{"line":1697,"column":1},"end":{"line":1697,"column":1}},"key":"oublbnab2r"}],"key":"QdoZmxOp4O"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Purpose","position":{"start":{"line":1698,"column":1},"end":{"line":1698,"column":1}},"key":"IpFzLZ2iGu"}],"key":"q86K9iN92W"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Example","position":{"start":{"line":1699,"column":1},"end":{"line":1699,"column":1}},"key":"nmBqdOaduz"}],"key":"i0u7fXz7X5"}],"key":"VjVWCkV8SX"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"range(n)","position":{"start":{"line":1700,"column":1},"end":{"line":1700,"column":1}},"key":"Cx00XIzfY5"}],"key":"tEcmwmeV8N"},{"type":"tableCell","children":[{"type":"text","value":"Generate 0 to n-1","position":{"start":{"line":1701,"column":1},"end":{"line":1701,"column":1}},"key":"QOd7OdMQfp"}],"key":"Y78swGbENH"},{"type":"tableCell","children":[{"type":"inlineCode","value":"for i in range(10):","position":{"start":{"line":1702,"column":1},"end":{"line":1702,"column":1}},"key":"eKOhDoZk6p"}],"key":"YlFguGahBa"}],"key":"zWOQhxPjoQ"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"range(start, stop, step)","position":{"start":{"line":1703,"column":1},"end":{"line":1703,"column":1}},"key":"KfyKy9MCc9"}],"key":"ytjqVYVEM1"},{"type":"tableCell","children":[{"type":"text","value":"Generate with step","position":{"start":{"line":1704,"column":1},"end":{"line":1704,"column":1}},"key":"CyJe3ZLJ8R"}],"key":"D5hTMymYgz"},{"type":"tableCell","children":[{"type":"inlineCode","value":"for i in range(0, 10, 2):","position":{"start":{"line":1705,"column":1},"end":{"line":1705,"column":1}},"key":"HUN8FYweFS"}],"key":"nvW9Wuf24z"}],"key":"Fb7iyKAhgK"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"enumerate(seq)","position":{"start":{"line":1706,"column":1},"end":{"line":1706,"column":1}},"key":"wduDhV0VsO"}],"key":"GCFjgNVtpH"},{"type":"tableCell","children":[{"type":"text","value":"Get index and value","position":{"start":{"line":1707,"column":1},"end":{"line":1707,"column":1}},"key":"m179aboqGk"}],"key":"BMZpBwI5ys"},{"type":"tableCell","children":[{"type":"inlineCode","value":"for i, val in enumerate(data):","position":{"start":{"line":1708,"column":1},"end":{"line":1708,"column":1}},"key":"mHNzNY6bDU"}],"key":"td2HbTVwpY"}],"key":"vRWFtby2cS"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"zip(seq1, seq2)","position":{"start":{"line":1709,"column":1},"end":{"line":1709,"column":1}},"key":"Aw7jSnVVNk"}],"key":"kzcGQp6cD6"},{"type":"tableCell","children":[{"type":"text","value":"Parallel iteration","position":{"start":{"line":1710,"column":1},"end":{"line":1710,"column":1}},"key":"jvIRGs4v9W"}],"key":"O8fKckBKp9"},{"type":"tableCell","children":[{"type":"inlineCode","value":"for x, y in zip(xs, ys):","position":{"start":{"line":1711,"column":1},"end":{"line":1711,"column":1}},"key":"MtCGB1dXUp"}],"key":"WR4V8EHg2e"}],"key":"vd0ubmEaD5"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"len(seq)","position":{"start":{"line":1712,"column":1},"end":{"line":1712,"column":1}},"key":"NpjANT38MB"}],"key":"xKnWmbwgxl"},{"type":"tableCell","children":[{"type":"text","value":"Sequence length","position":{"start":{"line":1713,"column":1},"end":{"line":1713,"column":1}},"key":"dElveRpGp7"}],"key":"CaEc4NArZh"},{"type":"tableCell","children":[{"type":"inlineCode","value":"for i in range(len(data)):","position":{"start":{"line":1714,"column":1},"end":{"line":1714,"column":1}},"key":"U3J2xDJj5b"}],"key":"Cc4acJP68L"}],"key":"DAttVzNfkf"}],"key":"GLhACDtdEg"}],"enumerator":"5","key":"CnY2bDkwNs"},{"type":"container","kind":"table","children":[{"type":"caption","children":[{"type":"paragraph","children":[{"type":"text","value":"Comparison Functions","position":{"start":{"line":1717,"column":1},"end":{"line":1717,"column":1}},"key":"H9neFnT5NK"}],"key":"XHsDmlRcDl"}],"key":"YFbigLzk7T"},{"type":"table","children":[{"type":"tableRow","children":[{"type":"tableCell","header":true,"children":[{"type":"text","value":"Function","position":{"start":{"line":1721,"column":1},"end":{"line":1721,"column":1}},"key":"OudKzRbROd"}],"key":"v7awQZyDZK"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Purpose","position":{"start":{"line":1722,"column":1},"end":{"line":1722,"column":1}},"key":"S4Y0Y6CM2M"}],"key":"YzOuF14HRO"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Example","position":{"start":{"line":1723,"column":1},"end":{"line":1723,"column":1}},"key":"BqVtOe3Qyg"}],"key":"SXSVdh9o6X"}],"key":"xI9LWoYAY7"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"all(iterable)","position":{"start":{"line":1724,"column":1},"end":{"line":1724,"column":1}},"key":"IVGw5qeTyx"}],"key":"Q9yMEVcPC8"},{"type":"tableCell","children":[{"type":"text","value":"All elements true","position":{"start":{"line":1725,"column":1},"end":{"line":1725,"column":1}},"key":"qY4uF9TqoZ"}],"key":"utYmWJ0rEa"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if all(x > 0 for x in data):","position":{"start":{"line":1726,"column":1},"end":{"line":1726,"column":1}},"key":"rZiHtuELbY"}],"key":"k4K1Fa3dO3"}],"key":"ux6ZxJ15VL"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"any(iterable)","position":{"start":{"line":1727,"column":1},"end":{"line":1727,"column":1}},"key":"uTTatBvOPv"}],"key":"IfhW2lCcrq"},{"type":"tableCell","children":[{"type":"text","value":"Any element true","position":{"start":{"line":1728,"column":1},"end":{"line":1728,"column":1}},"key":"qoFtvxogzi"}],"key":"P9ilzpjcb1"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if any(x < 0 for x in data):","position":{"start":{"line":1729,"column":1},"end":{"line":1729,"column":1}},"key":"qQWmmI7pqD"}],"key":"PbaI72OJjR"}],"key":"FKHmoGSAaV"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"math.isclose()","position":{"start":{"line":1730,"column":1},"end":{"line":1730,"column":1}},"key":"Sce81xzAvh"}],"key":"yiT3Lrt0Vh"},{"type":"tableCell","children":[{"type":"text","value":"Safe float comparison","position":{"start":{"line":1731,"column":1},"end":{"line":1731,"column":1}},"key":"KzV9bjrph0"}],"key":"FN7imLK80h"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if math.isclose(a, b):","position":{"start":{"line":1732,"column":1},"end":{"line":1732,"column":1}},"key":"bQ3j4SigZy"}],"key":"Z9qEKRc0gh"}],"key":"BVdjgaKALY"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"math.isfinite()","position":{"start":{"line":1733,"column":1},"end":{"line":1733,"column":1}},"key":"bdPG3wZL93"}],"key":"Sjdq9WzI00"},{"type":"tableCell","children":[{"type":"text","value":"Check not inf/nan","position":{"start":{"line":1734,"column":1},"end":{"line":1734,"column":1}},"key":"cObIXvuDnU"}],"key":"gPdsN7qgIu"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if math.isfinite(result):","position":{"start":{"line":1735,"column":1},"end":{"line":1735,"column":1}},"key":"MMniq5Kric"}],"key":"HMhGifgkgG"}],"key":"yTZSi9sksB"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"math.isnan()","position":{"start":{"line":1736,"column":1},"end":{"line":1736,"column":1}},"key":"miZGTXmiS4"}],"key":"HK4m80ky3A"},{"type":"tableCell","children":[{"type":"text","value":"Check for NaN","position":{"start":{"line":1737,"column":1},"end":{"line":1737,"column":1}},"key":"Az8ysg6M8N"}],"key":"B7uXDQfPow"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if not math.isnan(value):","position":{"start":{"line":1738,"column":1},"end":{"line":1738,"column":1}},"key":"DdtKNtCGT3"}],"key":"YkG55n9YMP"}],"key":"qA8h7deNh6"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"math.isinf()","position":{"start":{"line":1739,"column":1},"end":{"line":1739,"column":1}},"key":"XUlgd03xTX"}],"key":"vGvxGpQ9bt"},{"type":"tableCell","children":[{"type":"text","value":"Check for infinity","position":{"start":{"line":1740,"column":1},"end":{"line":1740,"column":1}},"key":"fB1ZVCpZL9"}],"key":"LX7sYMCIGI"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if math.isinf(value):","position":{"start":{"line":1741,"column":1},"end":{"line":1741,"column":1}},"key":"NnfNlFrgkm"}],"key":"aH5kKzDafT"}],"key":"cfWoSqJLjB"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isinstance()","position":{"start":{"line":1742,"column":1},"end":{"line":1742,"column":1}},"key":"g1hkZhq6Be"}],"key":"rNR3XkUh2Q"},{"type":"tableCell","children":[{"type":"text","value":"Type checking","position":{"start":{"line":1743,"column":1},"end":{"line":1743,"column":1}},"key":"lyhfiSWvpG"}],"key":"sWLPknqLZX"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if isinstance(x, float):","position":{"start":{"line":1744,"column":1},"end":{"line":1744,"column":1}},"key":"dYLN6hVZpK"}],"key":"suwMBBqGuW"}],"key":"gVaZLSr1zj"}],"key":"mCyS4qj366"}],"enumerator":"6","key":"YMu60cP1dH"},{"type":"container","kind":"table","children":[{"type":"caption","children":[{"type":"paragraph","children":[{"type":"text","value":"Common Algorithmic Patterns","position":{"start":{"line":1747,"column":1},"end":{"line":1747,"column":1}},"key":"t1zj1ZeLj3"}],"key":"xE7DM0nhIk"}],"key":"i1jPy1BosM"},{"type":"table","children":[{"type":"tableRow","children":[{"type":"tableCell","header":true,"children":[{"type":"text","value":"Pattern","position":{"start":{"line":1751,"column":1},"end":{"line":1751,"column":1}},"key":"xJ1Yz4wyTW"}],"key":"uMG44uGTc8"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Purpose","position":{"start":{"line":1752,"column":1},"end":{"line":1752,"column":1}},"key":"BGyZF8P9bL"}],"key":"Z7D3o95Fi8"},{"type":"tableCell","header":true,"children":[{"type":"text","value":"Structure","position":{"start":{"line":1753,"column":1},"end":{"line":1753,"column":1}},"key":"IsEtOoAZ6M"}],"key":"DnTlVx1rZn"}],"key":"Rdo0rSFuFy"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Accumulator","position":{"start":{"line":1754,"column":1},"end":{"line":1754,"column":1}},"key":"X4SESpfE81"}],"key":"yTjOrXMqZj"},{"type":"tableCell","children":[{"type":"text","value":"Aggregate values","position":{"start":{"line":1755,"column":1},"end":{"line":1755,"column":1}},"key":"DPvHuH3oLz"}],"key":"LkYQYjb4Yn"},{"type":"tableCell","children":[{"type":"inlineCode","value":"total = 0; for x in data: total += x","position":{"start":{"line":1756,"column":1},"end":{"line":1756,"column":1}},"key":"VwVirqMJoc"}],"key":"gYUaXT3ctb"}],"key":"Ko3Jp4k7vK"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Filter","position":{"start":{"line":1757,"column":1},"end":{"line":1757,"column":1}},"key":"pwB1JZ0moM"}],"key":"tYapFL7Fsv"},{"type":"tableCell","children":[{"type":"text","value":"Select subset","position":{"start":{"line":1758,"column":1},"end":{"line":1758,"column":1}},"key":"fpDsRG4DpE"}],"key":"DtYcojjcmZ"},{"type":"tableCell","children":[{"type":"inlineCode","value":"[x for x in data if condition(x)]","position":{"start":{"line":1759,"column":1},"end":{"line":1759,"column":1}},"key":"JzelkGMcjd"}],"key":"BSCOLkA4fc"}],"key":"Th6UymNMP2"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Map","position":{"start":{"line":1760,"column":1},"end":{"line":1760,"column":1}},"key":"YpisWuPdDa"}],"key":"FP6GhH932P"},{"type":"tableCell","children":[{"type":"text","value":"Transform all","position":{"start":{"line":1761,"column":1},"end":{"line":1761,"column":1}},"key":"j215tyVxjP"}],"key":"TZ2plWyprJ"},{"type":"tableCell","children":[{"type":"inlineCode","value":"[f(x) for x in data]","position":{"start":{"line":1762,"column":1},"end":{"line":1762,"column":1}},"key":"mQWyH9mZ32"}],"key":"lYZ1l5dGj5"}],"key":"Ih9yMto8SB"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Search","position":{"start":{"line":1763,"column":1},"end":{"line":1763,"column":1}},"key":"Yj0Kbf5cl5"}],"key":"yHEObTrhpd"},{"type":"tableCell","children":[{"type":"text","value":"Find first match","position":{"start":{"line":1764,"column":1},"end":{"line":1764,"column":1}},"key":"Zt7iqsGgd2"}],"key":"rwfvL5jXnG"},{"type":"tableCell","children":[{"type":"inlineCode","value":"for x in data: if test(x): return x","position":{"start":{"line":1765,"column":1},"end":{"line":1765,"column":1}},"key":"OnAQ70whTn"}],"key":"xN1cATPwd4"}],"key":"fAlAE7vmu6"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Convergence","position":{"start":{"line":1766,"column":1},"end":{"line":1766,"column":1}},"key":"AEAmHZJjkD"}],"key":"xW83dZKIEo"},{"type":"tableCell","children":[{"type":"text","value":"Iterate to solution","position":{"start":{"line":1767,"column":1},"end":{"line":1767,"column":1}},"key":"E3yWwZa3zv"}],"key":"UodSZQeM4y"},{"type":"tableCell","children":[{"type":"inlineCode","value":"while not converged and n < max:","position":{"start":{"line":1768,"column":1},"end":{"line":1768,"column":1}},"key":"pFBWhAX5fl"}],"key":"QpiYQ3e2qc"}],"key":"YJ80JSsqaQ"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Guard clause","position":{"start":{"line":1769,"column":1},"end":{"line":1769,"column":1}},"key":"x98gAkb3z6"}],"key":"hIp1BUUQZB"},{"type":"tableCell","children":[{"type":"text","value":"Handle edge cases","position":{"start":{"line":1770,"column":1},"end":{"line":1770,"column":1}},"key":"vqwfPcfx6Z"}],"key":"a2BijutLvr"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if invalid: return None","position":{"start":{"line":1771,"column":1},"end":{"line":1771,"column":1}},"key":"UOwr7oast3"}],"key":"J5MUtrcHU7"}],"key":"EgzwkVJKNe"},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Sentinel","position":{"start":{"line":1772,"column":1},"end":{"line":1772,"column":1}},"key":"DGMsVlAEvn"}],"key":"BRng5oqLQN"},{"type":"tableCell","children":[{"type":"text","value":"Signal termination","position":{"start":{"line":1773,"column":1},"end":{"line":1773,"column":1}},"key":"EReQ6SXxtE"}],"key":"wLRu9MOFNs"},{"type":"tableCell","children":[{"type":"inlineCode","value":"if value == -999: break","position":{"start":{"line":1774,"column":1},"end":{"line":1774,"column":1}},"key":"oDjNXoo2Wg"}],"key":"htc4rwKIMg"}],"key":"CcKd4TVlaz"}],"key":"ztjEAtMHYL"}],"enumerator":"7","key":"enB9KymMqJ"},{"type":"heading","depth":2,"position":{"start":{"line":1777,"column":1},"end":{"line":1777,"column":1}},"children":[{"type":"text","value":"Python Module & Method Reference (Chapter 3 Additions)","position":{"start":{"line":1777,"column":1},"end":{"line":1777,"column":1}},"key":"nZ6MYpby7q"}],"identifier":"python-module-method-reference-chapter-3-additions","label":"Python Module & Method Reference (Chapter 3 Additions)","html_id":"python-module-method-reference-chapter-3-additions","implicit":true,"key":"aMogcuki3y"},{"type":"heading","depth":3,"position":{"start":{"line":1779,"column":1},"end":{"line":1779,"column":1}},"children":[{"type":"text","value":"New Built-in Functions","position":{"start":{"line":1779,"column":1},"end":{"line":1779,"column":1}},"key":"VLmlaeZAKj"}],"identifier":"new-built-in-functions","label":"New Built-in Functions","html_id":"new-built-in-functions","implicit":true,"key":"tgbF0FSYrI"},{"type":"paragraph","position":{"start":{"line":1781,"column":1},"end":{"line":1781,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1781,"column":1},"end":{"line":1781,"column":1}},"children":[{"type":"text","value":"Logical Testing","position":{"start":{"line":1781,"column":1},"end":{"line":1781,"column":1}},"key":"qwOfX8KMb4"}],"key":"yXmI84Rpmg"}],"key":"nQoKDN0wK8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1782,"column":1},"end":{"line":1785,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1782,"column":1},"end":{"line":1782,"column":1}},"children":[{"type":"inlineCode","value":"all(iterable)","position":{"start":{"line":1782,"column":1},"end":{"line":1782,"column":1}},"key":"lUv4JGORos"},{"type":"text","value":" - Returns True if all elements are true","position":{"start":{"line":1782,"column":1},"end":{"line":1782,"column":1}},"key":"DKXUAeHOV0"}],"key":"PNx7C9KrGz"},{"type":"listItem","spread":true,"position":{"start":{"line":1783,"column":1},"end":{"line":1783,"column":1}},"children":[{"type":"inlineCode","value":"any(iterable)","position":{"start":{"line":1783,"column":1},"end":{"line":1783,"column":1}},"key":"JSvEunbtbS"},{"type":"text","value":" - Returns True if any element is true","position":{"start":{"line":1783,"column":1},"end":{"line":1783,"column":1}},"key":"B32jyZ0TMB"}],"key":"eh8bjTGuJx"},{"type":"listItem","spread":true,"position":{"start":{"line":1784,"column":1},"end":{"line":1785,"column":1}},"children":[{"type":"inlineCode","value":"isinstance(obj, type)","position":{"start":{"line":1784,"column":1},"end":{"line":1784,"column":1}},"key":"BQUqliFy0X"},{"type":"text","value":" - Check if object is of specified type","position":{"start":{"line":1784,"column":1},"end":{"line":1784,"column":1}},"key":"p4G9NJrMRr"}],"key":"V30EyDD6jp"}],"key":"qBWWpBdwAy"},{"type":"paragraph","position":{"start":{"line":1786,"column":1},"end":{"line":1786,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1786,"column":1},"end":{"line":1786,"column":1}},"children":[{"type":"text","value":"Loop Support","position":{"start":{"line":1786,"column":1},"end":{"line":1786,"column":1}},"key":"R5m07du82y"}],"key":"g0ZOhip6Ua"}],"key":"CHvGrtGjfK"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1787,"column":1},"end":{"line":1790,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1787,"column":1},"end":{"line":1787,"column":1}},"children":[{"type":"inlineCode","value":"enumerate(iterable, start=0)","position":{"start":{"line":1787,"column":1},"end":{"line":1787,"column":1}},"key":"dr3kEoGwCF"},{"type":"text","value":" - Returns index-value pairs","position":{"start":{"line":1787,"column":1},"end":{"line":1787,"column":1}},"key":"zAOw7vJ3Ja"}],"key":"MciiohaqIO"},{"type":"listItem","spread":true,"position":{"start":{"line":1788,"column":1},"end":{"line":1788,"column":1}},"children":[{"type":"inlineCode","value":"zip(*iterables)","position":{"start":{"line":1788,"column":1},"end":{"line":1788,"column":1}},"key":"Dygug60JNg"},{"type":"text","value":" - Combines multiple iterables for parallel iteration","position":{"start":{"line":1788,"column":1},"end":{"line":1788,"column":1}},"key":"zQFsZb1PGt"}],"key":"XyuyQViCTQ"},{"type":"listItem","spread":true,"position":{"start":{"line":1789,"column":1},"end":{"line":1790,"column":1}},"children":[{"type":"inlineCode","value":"range(start, stop, step)","position":{"start":{"line":1789,"column":1},"end":{"line":1789,"column":1}},"key":"hxmaIphWs4"},{"type":"text","value":" - Generate arithmetic progression","position":{"start":{"line":1789,"column":1},"end":{"line":1789,"column":1}},"key":"OYunay1zsk"}],"key":"GgKi3PJQsa"}],"key":"f7RHYwdeSj"},{"type":"heading","depth":3,"position":{"start":{"line":1791,"column":1},"end":{"line":1791,"column":1}},"children":[{"type":"text","value":"Control Flow Keywords","position":{"start":{"line":1791,"column":1},"end":{"line":1791,"column":1}},"key":"VnIfs7Z9tD"}],"identifier":"control-flow-keywords","label":"Control Flow Keywords","html_id":"control-flow-keywords","implicit":true,"key":"ANPS0g8XRZ"},{"type":"paragraph","position":{"start":{"line":1793,"column":1},"end":{"line":1793,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1793,"column":1},"end":{"line":1793,"column":1}},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":1793,"column":1},"end":{"line":1793,"column":1}},"key":"Fvw0tln41n"}],"key":"TWDDl3MBEX"}],"key":"VKrDj2K6Yj"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1794,"column":1},"end":{"line":1797,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1794,"column":1},"end":{"line":1794,"column":1}},"children":[{"type":"inlineCode","value":"if","position":{"start":{"line":1794,"column":1},"end":{"line":1794,"column":1}},"key":"tIwNLZHYes"},{"type":"text","value":" - Execute block if condition is true","position":{"start":{"line":1794,"column":1},"end":{"line":1794,"column":1}},"key":"HKjTPEzg13"}],"key":"nSKD559NhD"},{"type":"listItem","spread":true,"position":{"start":{"line":1795,"column":1},"end":{"line":1795,"column":1}},"children":[{"type":"inlineCode","value":"elif","position":{"start":{"line":1795,"column":1},"end":{"line":1795,"column":1}},"key":"kGIXP9mS1k"},{"type":"text","value":" - Check additional condition if previous was false","position":{"start":{"line":1795,"column":1},"end":{"line":1795,"column":1}},"key":"bDIYCId8nG"}],"key":"jkSjlB8InM"},{"type":"listItem","spread":true,"position":{"start":{"line":1796,"column":1},"end":{"line":1797,"column":1}},"children":[{"type":"inlineCode","value":"else","position":{"start":{"line":1796,"column":1},"end":{"line":1796,"column":1}},"key":"SVGO4sisrm"},{"type":"text","value":" - Execute if all previous conditions were false","position":{"start":{"line":1796,"column":1},"end":{"line":1796,"column":1}},"key":"MFOL9CVlkP"}],"key":"jnH7LGRZXA"}],"key":"eVOAH9HoNW"},{"type":"paragraph","position":{"start":{"line":1798,"column":1},"end":{"line":1798,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1798,"column":1},"end":{"line":1798,"column":1}},"children":[{"type":"text","value":"Loops","position":{"start":{"line":1798,"column":1},"end":{"line":1798,"column":1}},"key":"R059NIwYuW"}],"key":"HHwpY4DPoS"}],"key":"O8OXuIgdQL"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1799,"column":1},"end":{"line":1804,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1799,"column":1},"end":{"line":1799,"column":1}},"children":[{"type":"inlineCode","value":"for","position":{"start":{"line":1799,"column":1},"end":{"line":1799,"column":1}},"key":"NHZyVIvGd2"},{"type":"text","value":" - Iterate over sequence","position":{"start":{"line":1799,"column":1},"end":{"line":1799,"column":1}},"key":"PRYNAArmfZ"}],"key":"Qg0fVsYqh9"},{"type":"listItem","spread":true,"position":{"start":{"line":1800,"column":1},"end":{"line":1800,"column":1}},"children":[{"type":"inlineCode","value":"while","position":{"start":{"line":1800,"column":1},"end":{"line":1800,"column":1}},"key":"IR9GvUy1Pa"},{"type":"text","value":" - Loop while condition is true","position":{"start":{"line":1800,"column":1},"end":{"line":1800,"column":1}},"key":"zaJhrPNmCv"}],"key":"c2Kj2qYEH0"},{"type":"listItem","spread":true,"position":{"start":{"line":1801,"column":1},"end":{"line":1801,"column":1}},"children":[{"type":"inlineCode","value":"break","position":{"start":{"line":1801,"column":1},"end":{"line":1801,"column":1}},"key":"MZa074Y9yj"},{"type":"text","value":" - Exit loop immediately","position":{"start":{"line":1801,"column":1},"end":{"line":1801,"column":1}},"key":"c517UVe6XM"}],"key":"zKRmU5svI7"},{"type":"listItem","spread":true,"position":{"start":{"line":1802,"column":1},"end":{"line":1802,"column":1}},"children":[{"type":"inlineCode","value":"continue","position":{"start":{"line":1802,"column":1},"end":{"line":1802,"column":1}},"key":"ZYuXGJYDMB"},{"type":"text","value":" - Skip to next iteration","position":{"start":{"line":1802,"column":1},"end":{"line":1802,"column":1}},"key":"l7N5aRm27V"}],"key":"BOOJJ9BPTK"},{"type":"listItem","spread":true,"position":{"start":{"line":1803,"column":1},"end":{"line":1804,"column":1}},"children":[{"type":"inlineCode","value":"else","position":{"start":{"line":1803,"column":1},"end":{"line":1803,"column":1}},"key":"i7Xwj9QbpT"},{"type":"text","value":" - Execute if loop completes without break","position":{"start":{"line":1803,"column":1},"end":{"line":1803,"column":1}},"key":"cF7vHabGIg"}],"key":"sT3cKFUbqJ"}],"key":"PqmlGxTR4f"},{"type":"paragraph","position":{"start":{"line":1805,"column":1},"end":{"line":1805,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1805,"column":1},"end":{"line":1805,"column":1}},"children":[{"type":"text","value":"Other","position":{"start":{"line":1805,"column":1},"end":{"line":1805,"column":1}},"key":"fB0ZbF3id5"}],"key":"GiAmG9pjri"}],"key":"zYY02VE0rv"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1806,"column":1},"end":{"line":1808,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1806,"column":1},"end":{"line":1806,"column":1}},"children":[{"type":"inlineCode","value":"pass","position":{"start":{"line":1806,"column":1},"end":{"line":1806,"column":1}},"key":"HnA9PwVSbZ"},{"type":"text","value":" - Null operation placeholder","position":{"start":{"line":1806,"column":1},"end":{"line":1806,"column":1}},"key":"serUHBd0ZQ"}],"key":"pi0YtNR52P"},{"type":"listItem","spread":true,"position":{"start":{"line":1807,"column":1},"end":{"line":1808,"column":1}},"children":[{"type":"inlineCode","value":"assert","position":{"start":{"line":1807,"column":1},"end":{"line":1807,"column":1}},"key":"dDUDHUK5RV"},{"type":"text","value":" - Raise AssertionError if condition is false","position":{"start":{"line":1807,"column":1},"end":{"line":1807,"column":1}},"key":"B6LUX3Z82k"}],"key":"txOQPQdGEx"}],"key":"KZCFtl9ovz"},{"type":"heading","depth":3,"position":{"start":{"line":1809,"column":1},"end":{"line":1809,"column":1}},"children":[{"type":"text","value":"Operators","position":{"start":{"line":1809,"column":1},"end":{"line":1809,"column":1}},"key":"RFEHgSvTWY"}],"identifier":"operators","label":"Operators","html_id":"operators","implicit":true,"key":"AHOrcyN2uH"},{"type":"paragraph","position":{"start":{"line":1811,"column":1},"end":{"line":1811,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1811,"column":1},"end":{"line":1811,"column":1}},"children":[{"type":"text","value":"Comparison","position":{"start":{"line":1811,"column":1},"end":{"line":1811,"column":1}},"key":"qBKhIjx4WR"}],"key":"rQ687JN1Dx"}],"key":"AoP3lvhlsx"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1812,"column":1},"end":{"line":1815,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"children":[{"type":"inlineCode","value":">","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"d6VjG0gQEY"},{"type":"text","value":", ","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"OS1xGt1NZM"},{"type":"inlineCode","value":"<","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"RCYJaCRYfm"},{"type":"text","value":", ","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"qiGbzxVUfy"},{"type":"inlineCode","value":">=","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"dX4jyX1fMT"},{"type":"text","value":", ","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"wRO1RdJoxa"},{"type":"inlineCode","value":"<=","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"a7W5vG0On7"},{"type":"text","value":", ","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"kKbHNOhFtM"},{"type":"inlineCode","value":"==","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"i0RvaPuqBz"},{"type":"text","value":", ","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"e7BeJ9C5v6"},{"type":"inlineCode","value":"!=","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"I6zaxqY1wW"},{"type":"text","value":" - Numerical comparisons","position":{"start":{"line":1812,"column":1},"end":{"line":1812,"column":1}},"key":"QcP9yll452"}],"key":"mU3cQBi8FQ"},{"type":"listItem","spread":true,"position":{"start":{"line":1813,"column":1},"end":{"line":1813,"column":1}},"children":[{"type":"inlineCode","value":"is","position":{"start":{"line":1813,"column":1},"end":{"line":1813,"column":1}},"key":"S8CDDp8y8P"},{"type":"text","value":", ","position":{"start":{"line":1813,"column":1},"end":{"line":1813,"column":1}},"key":"amFtFZK5WG"},{"type":"inlineCode","value":"is not","position":{"start":{"line":1813,"column":1},"end":{"line":1813,"column":1}},"key":"dKUcloy2H4"},{"type":"text","value":" - Identity comparisons","position":{"start":{"line":1813,"column":1},"end":{"line":1813,"column":1}},"key":"N7hl7FiZtD"}],"key":"Pmi0omcomv"},{"type":"listItem","spread":true,"position":{"start":{"line":1814,"column":1},"end":{"line":1815,"column":1}},"children":[{"type":"inlineCode","value":"in","position":{"start":{"line":1814,"column":1},"end":{"line":1814,"column":1}},"key":"gQjmzuvNmj"},{"type":"text","value":", ","position":{"start":{"line":1814,"column":1},"end":{"line":1814,"column":1}},"key":"dDCpJ3EkJx"},{"type":"inlineCode","value":"not in","position":{"start":{"line":1814,"column":1},"end":{"line":1814,"column":1}},"key":"Ty2AVRELKS"},{"type":"text","value":" - Membership testing","position":{"start":{"line":1814,"column":1},"end":{"line":1814,"column":1}},"key":"kNR7xdPihL"}],"key":"nVaHAMQyKU"}],"key":"GgXgpnKV3O"},{"type":"paragraph","position":{"start":{"line":1816,"column":1},"end":{"line":1816,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1816,"column":1},"end":{"line":1816,"column":1}},"children":[{"type":"text","value":"Logical","position":{"start":{"line":1816,"column":1},"end":{"line":1816,"column":1}},"key":"FnWnyAEdtC"}],"key":"LFl627xp2f"}],"key":"BshRatidL8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1817,"column":1},"end":{"line":1820,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1817,"column":1},"end":{"line":1817,"column":1}},"children":[{"type":"inlineCode","value":"and","position":{"start":{"line":1817,"column":1},"end":{"line":1817,"column":1}},"key":"Ud51m47PoX"},{"type":"text","value":" - Logical AND with short-circuit evaluation","position":{"start":{"line":1817,"column":1},"end":{"line":1817,"column":1}},"key":"pwVBdYxdgj"}],"key":"YRfmI3V4wQ"},{"type":"listItem","spread":true,"position":{"start":{"line":1818,"column":1},"end":{"line":1818,"column":1}},"children":[{"type":"inlineCode","value":"or","position":{"start":{"line":1818,"column":1},"end":{"line":1818,"column":1}},"key":"WphgfYzrwT"},{"type":"text","value":" - Logical OR with short-circuit evaluation","position":{"start":{"line":1818,"column":1},"end":{"line":1818,"column":1}},"key":"lzh6AJQHSZ"}],"key":"D7tzOxQZNE"},{"type":"listItem","spread":true,"position":{"start":{"line":1819,"column":1},"end":{"line":1820,"column":1}},"children":[{"type":"inlineCode","value":"not","position":{"start":{"line":1819,"column":1},"end":{"line":1819,"column":1}},"key":"qHi0wNozLu"},{"type":"text","value":" - Logical NOT (inversion)","position":{"start":{"line":1819,"column":1},"end":{"line":1819,"column":1}},"key":"H2lw4Y9VWs"}],"key":"OpVPIZRD0Z"}],"key":"x0luYM4hnP"},{"type":"heading","depth":3,"position":{"start":{"line":1821,"column":1},"end":{"line":1821,"column":1}},"children":[{"type":"text","value":"New Math Module Functions","position":{"start":{"line":1821,"column":1},"end":{"line":1821,"column":1}},"key":"VbmbMUxDhX"}],"identifier":"new-math-module-functions","label":"New Math Module Functions","html_id":"new-math-module-functions","implicit":true,"key":"BERXKXWq3U"},{"type":"code","lang":"python","value":"import math","position":{"start":{"line":1823,"column":1},"end":{"line":1825,"column":1}},"key":"RVID341dY7"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1826,"column":1},"end":{"line":1830,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1826,"column":1},"end":{"line":1826,"column":1}},"children":[{"type":"inlineCode","value":"math.isclose(a, b, rel_tol=1e-9, abs_tol=0.0)","position":{"start":{"line":1826,"column":1},"end":{"line":1826,"column":1}},"key":"GPkqjohAL6"},{"type":"text","value":" - Safe floating-point comparison","position":{"start":{"line":1826,"column":1},"end":{"line":1826,"column":1}},"key":"tzvJxXe1ZV"}],"key":"HOh5LHb3C4"},{"type":"listItem","spread":true,"position":{"start":{"line":1827,"column":1},"end":{"line":1827,"column":1}},"children":[{"type":"inlineCode","value":"math.isfinite(x)","position":{"start":{"line":1827,"column":1},"end":{"line":1827,"column":1}},"key":"LktKb5SeMY"},{"type":"text","value":" - Check if neither infinite nor NaN","position":{"start":{"line":1827,"column":1},"end":{"line":1827,"column":1}},"key":"ixVNNA451u"}],"key":"SxzFGpjuMx"},{"type":"listItem","spread":true,"position":{"start":{"line":1828,"column":1},"end":{"line":1828,"column":1}},"children":[{"type":"inlineCode","value":"math.isnan(x)","position":{"start":{"line":1828,"column":1},"end":{"line":1828,"column":1}},"key":"thzK1UFtxp"},{"type":"text","value":" - Check if value is NaN","position":{"start":{"line":1828,"column":1},"end":{"line":1828,"column":1}},"key":"b73KYnKfCM"}],"key":"e9hjDnIoLt"},{"type":"listItem","spread":true,"position":{"start":{"line":1829,"column":1},"end":{"line":1830,"column":1}},"children":[{"type":"inlineCode","value":"math.isinf(x)","position":{"start":{"line":1829,"column":1},"end":{"line":1829,"column":1}},"key":"p3jHLM8EoH"},{"type":"text","value":" - Check if value is infinite","position":{"start":{"line":1829,"column":1},"end":{"line":1829,"column":1}},"key":"nlnSzsQb3g"}],"key":"myyc4owHcj"}],"key":"gq9uIPtila"},{"type":"heading","depth":3,"position":{"start":{"line":1831,"column":1},"end":{"line":1831,"column":1}},"children":[{"type":"text","value":"Debugging Support","position":{"start":{"line":1831,"column":1},"end":{"line":1831,"column":1}},"key":"LLsuOP6zog"}],"identifier":"debugging-support","label":"Debugging Support","html_id":"debugging-support","implicit":true,"key":"OT4kwxNL3T"},{"type":"paragraph","position":{"start":{"line":1833,"column":1},"end":{"line":1833,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1833,"column":1},"end":{"line":1833,"column":1}},"children":[{"type":"text","value":"IPython Magic Commands","position":{"start":{"line":1833,"column":1},"end":{"line":1833,"column":1}},"key":"C9SbvGRQmd"}],"key":"Z7mgDK8w6Y"}],"key":"N3wqWuWSE4"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1834,"column":1},"end":{"line":1836,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1834,"column":1},"end":{"line":1834,"column":1}},"children":[{"type":"inlineCode","value":"%debug","position":{"start":{"line":1834,"column":1},"end":{"line":1834,"column":1}},"key":"qYEaXp6Fmo"},{"type":"text","value":" - Enter debugger after exception","position":{"start":{"line":1834,"column":1},"end":{"line":1834,"column":1}},"key":"km1kGOpQJg"}],"key":"EiRlUyB73H"},{"type":"listItem","spread":true,"position":{"start":{"line":1835,"column":1},"end":{"line":1836,"column":1}},"children":[{"type":"inlineCode","value":"%pdb","position":{"start":{"line":1835,"column":1},"end":{"line":1835,"column":1}},"key":"e3SInjLVjl"},{"type":"text","value":" - Automatic debugger on exceptions","position":{"start":{"line":1835,"column":1},"end":{"line":1835,"column":1}},"key":"jvBcG5tsY7"}],"key":"GzyJme1P4H"}],"key":"qrq91chNUk"},{"type":"paragraph","position":{"start":{"line":1837,"column":1},"end":{"line":1837,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1837,"column":1},"end":{"line":1837,"column":1}},"children":[{"type":"text","value":"Debugger Commands","position":{"start":{"line":1837,"column":1},"end":{"line":1837,"column":1}},"key":"H9YePs7ELD"}],"key":"YySvC3THxW"},{"type":"text","value":" (when in pdb)","position":{"start":{"line":1837,"column":1},"end":{"line":1837,"column":1}},"key":"bOtcMIPSuf"}],"key":"XHf32oVDgj"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1838,"column":1},"end":{"line":1846,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1838,"column":1},"end":{"line":1838,"column":1}},"children":[{"type":"inlineCode","value":"p variable","position":{"start":{"line":1838,"column":1},"end":{"line":1838,"column":1}},"key":"Z6Qi7uvq3j"},{"type":"text","value":" - Print variable value","position":{"start":{"line":1838,"column":1},"end":{"line":1838,"column":1}},"key":"iJcsNPNjHE"}],"key":"lh6SZgd8nD"},{"type":"listItem","spread":true,"position":{"start":{"line":1839,"column":1},"end":{"line":1839,"column":1}},"children":[{"type":"inlineCode","value":"pp variable","position":{"start":{"line":1839,"column":1},"end":{"line":1839,"column":1}},"key":"sYbDIUISce"},{"type":"text","value":" - Pretty-print variable","position":{"start":{"line":1839,"column":1},"end":{"line":1839,"column":1}},"key":"XSu6bIShNl"}],"key":"zuDDkNKNb5"},{"type":"listItem","spread":true,"position":{"start":{"line":1840,"column":1},"end":{"line":1840,"column":1}},"children":[{"type":"inlineCode","value":"l","position":{"start":{"line":1840,"column":1},"end":{"line":1840,"column":1}},"key":"Qr4Hr3NrTN"},{"type":"text","value":" - List code around current line","position":{"start":{"line":1840,"column":1},"end":{"line":1840,"column":1}},"key":"EtaFBSRuhA"}],"key":"E6D2oEfIYX"},{"type":"listItem","spread":true,"position":{"start":{"line":1841,"column":1},"end":{"line":1841,"column":1}},"children":[{"type":"inlineCode","value":"n","position":{"start":{"line":1841,"column":1},"end":{"line":1841,"column":1}},"key":"idV3v3wCd5"},{"type":"text","value":" - Next line","position":{"start":{"line":1841,"column":1},"end":{"line":1841,"column":1}},"key":"gCo4RzhpOl"}],"key":"vpTcccwgj5"},{"type":"listItem","spread":true,"position":{"start":{"line":1842,"column":1},"end":{"line":1842,"column":1}},"children":[{"type":"inlineCode","value":"s","position":{"start":{"line":1842,"column":1},"end":{"line":1842,"column":1}},"key":"saWO7ltYie"},{"type":"text","value":" - Step into function","position":{"start":{"line":1842,"column":1},"end":{"line":1842,"column":1}},"key":"jWJ9G6w61Z"}],"key":"eWPZvBaegj"},{"type":"listItem","spread":true,"position":{"start":{"line":1843,"column":1},"end":{"line":1843,"column":1}},"children":[{"type":"inlineCode","value":"c","position":{"start":{"line":1843,"column":1},"end":{"line":1843,"column":1}},"key":"n9h24gS6L8"},{"type":"text","value":" - Continue execution","position":{"start":{"line":1843,"column":1},"end":{"line":1843,"column":1}},"key":"SHRAk20hXa"}],"key":"kCodrujKTK"},{"type":"listItem","spread":true,"position":{"start":{"line":1844,"column":1},"end":{"line":1844,"column":1}},"children":[{"type":"inlineCode","value":"u/d","position":{"start":{"line":1844,"column":1},"end":{"line":1844,"column":1}},"key":"RVT70XmZgs"},{"type":"text","value":" - Move up/down call stack","position":{"start":{"line":1844,"column":1},"end":{"line":1844,"column":1}},"key":"NcXj51bCbX"}],"key":"XR5GQDQOmY"},{"type":"listItem","spread":true,"position":{"start":{"line":1845,"column":1},"end":{"line":1846,"column":1}},"children":[{"type":"inlineCode","value":"q","position":{"start":{"line":1845,"column":1},"end":{"line":1845,"column":1}},"key":"frPPj6eV5N"},{"type":"text","value":" - Quit debugger","position":{"start":{"line":1845,"column":1},"end":{"line":1845,"column":1}},"key":"cWlCUxYV2d"}],"key":"vDyhq6xXiB"}],"key":"FfiHNVtVnE"},{"type":"heading","depth":2,"position":{"start":{"line":1847,"column":1},"end":{"line":1847,"column":1}},"children":[{"type":"text","value":"Next Chapter Preview","position":{"start":{"line":1847,"column":1},"end":{"line":1847,"column":1}},"key":"JsrhxE2DlL"}],"identifier":"next-chapter-preview","label":"Next Chapter Preview","html_id":"next-chapter-preview","implicit":true,"key":"QpxenJEWpU"},{"type":"paragraph","position":{"start":{"line":1849,"column":1},"end":{"line":1849,"column":1}},"children":[{"type":"text","value":"You’ve conquered control flow — now get ready for the next level! Chapter 4 will reveal how to organize data efficiently using Python’s powerful data structures. You’ll discover when to use lists versus dictionaries versus sets, and more importantly, you’ll understand why these choices can make your algorithms run 100 times faster or 100 times slower.","position":{"start":{"line":1849,"column":1},"end":{"line":1849,"column":1}},"key":"i85l7wSzIB"}],"key":"injZTNVkSq"},{"type":"paragraph","position":{"start":{"line":1851,"column":1},"end":{"line":1851,"column":1}},"children":[{"type":"text","value":"Imagine trying to find a specific star in a catalog of millions. With a list, you’d check each star one by one — taking minutes or hours. With a dictionary, you’ll find it instantly — in microseconds! The data structures you’ll learn next are the difference between simulations that finish in minutes and ones that run for days.","position":{"start":{"line":1851,"column":1},"end":{"line":1851,"column":1}},"key":"ooYMNPowwD"}],"key":"q1FJq1Jai7"},{"type":"paragraph","position":{"start":{"line":1853,"column":1},"end":{"line":1853,"column":1}},"children":[{"type":"text","value":"The control flow patterns you’ve mastered here will operate on the data structures you’ll learn next. Your loops will iterate through dictionaries of astronomical objects. Your conditionals will filter sets of observations. Your comprehensions will transform lists of measurements into meaningful results. Together, control flow and data structures give you the power to handle the massive datasets of modern astronomy — from Gaia’s billion-star catalog to the petabytes of data from the Square Kilometre Array.","position":{"start":{"line":1853,"column":1},"end":{"line":1853,"column":1}},"key":"bnOJsqUrDs"}],"key":"fq3TvfXfij"},{"type":"paragraph","position":{"start":{"line":1855,"column":1},"end":{"line":1855,"column":1}},"children":[{"type":"text","value":"Get excited — Chapter 4 is where your code goes from processing dozens of data points to handling millions efficiently!","position":{"start":{"line":1855,"column":1},"end":{"line":1855,"column":1}},"key":"HzmEWFALCP"}],"key":"XSfrV9ZGHo"}],"key":"zVfM9gKuvp"}],"key":"t6yB08HdNf"},"references":{"cite":{"order":[],"data":{}}}}