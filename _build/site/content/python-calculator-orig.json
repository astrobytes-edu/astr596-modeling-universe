{"version":2,"kind":"Article","sha256":"51966c6af81b64df2bba23d2f8741d0f8cdfd772907be9cedba105f4aad1d380","slug":"python-calculator-orig","location":"/03-scientific-computing-with-python/01-python-fundamentals/02-python-calculator-ORIG.md","dependencies":[],"frontmatter":{"title":"Chapter 2: Python as a Calculator & Basic Data Types","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Anna Rosen","given":"Anna","family":"Rosen"},"name":"Anna Rosen","orcid":"0000-0003-4423-0660","email":"alrosen@sdsu.edu","affiliations":["San Diego State University"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/astrobytes-edu/astr596-modeling-universe","subject":"Modeling the Universe","venue":{"title":"ASTR 596 - Fall 2025","url":"https://www.anna-rosen.com"},"keywords":["computational astrophysics","python","numerical methods","machine learning","monte carlo","neural networks","radiative transfer","bayesian inference","JAX"],"affiliations":[{"id":"San Diego State University","name":"San Diego State University"}],"numbering":{"title":{"offset":2}},"edit_url":"https://github.com/astrobytes-edu/astr596-modeling-universe/blob/main/03-scientific-computing-with-python/01-python-fundamentals/02-python-calculator-ORIG.md","exports":[{"format":"md","filename":"02-python-calculator-ORIG.md","url":"/02-python-calculator-13f93743bdd988152da160a888b872b9.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Learning Objectives","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MEcaW669Sc"}],"identifier":"learning-objectives","label":"Learning Objectives","html_id":"learning-objectives","implicit":true,"key":"OaeuGKFqld"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"By the end of this chapter, you will be able to:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Hqhi94GorF"}],"key":"XOUEjoAJqT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Use Python as an interactive scientific calculator with proper operator precedence","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"cGgZXPShaB"}],"key":"Xe2rCO2wRF"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Understand how computers represent integers, floats, and complex numbers in memory","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"oaRRlEYSxK"}],"key":"EUNRdFi4g7"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Explain why 0.1 + 0.2 ≠ 0.3 and handle floating-point comparisons correctly","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"taVw46visp"}],"key":"VgaClsbBUd"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Recognize and avoid catastrophic cancellation and numerical overflow/underflow","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"miOjnLVMyp"}],"key":"vMHcpsNvNj"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Choose appropriate numeric types for different computational scenarios","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"pxZSeX1dmA"}],"key":"UHQm74sJn8"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Format output elegantly using f-strings with scientific notation and alignment","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Td4FTqK8as"}],"key":"HyYrVoBuWg"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Convert between data types safely and understand when conversions lose information","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"Lg22Y91Hra"}],"key":"avWMmxvNrc"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Create defensive numerical code that catches precision problems early","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"ieDcIfwAcl"}],"key":"GOh3aSsL1H"}],"key":"bXz6G8QvSl"},{"type":"heading","depth":2,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Prerequisites Check","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"iPc3UZz59P"}],"identifier":"prerequisites-check","label":"Prerequisites Check","html_id":"prerequisites-check","implicit":true,"key":"qc86uh2b2t"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Before starting this chapter, verify you can:","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"QjHs9tRNNO"}],"key":"e7xzoM53qA"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":18,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"✓ Launch IPython and use basic magic commands (Chapter 1)","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"Bs0XnPYNNi"}],"key":"QJ8dRWPfIv"},{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"✓ Understand the difference between scripts and interactive sessions (Chapter 1)","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"iG3oNDhGi5"}],"key":"wa8pMux8BR"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"✓ Navigate your file system and activate your conda environment (Chapter 1)","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"EI1xrTQBVe"}],"key":"L8IQEHrrpU"}],"key":"cGrHHwxsv7"},{"type":"heading","depth":2,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Chapter Overview","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"hKsAy0l00u"}],"identifier":"chapter-overview","label":"Chapter Overview","html_id":"chapter-overview","implicit":true,"key":"Tj8giBCz6j"},{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Before diving into complex simulations or data analysis, you need to understand how Python handles the fundamental building blocks of computation: numbers and text. This chapter explores Python as a scientific calculator, but more importantly, reveals the hidden complexity of numerical computation that can make or break your scientific results.","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"yiIJXNZu1L"}],"key":"zX87UF2yH8"},{"type":"paragraph","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"The floating-point precision issues we explore here aren’t academic exercises — they’re the source of real bugs that have delayed papers, corrupted simulations, and led to wrong scientific conclusions. Understanding these fundamentals now will save you weeks of debugging later when your orbital integrator accumulates errors or your Monte Carlo simulation produces impossible results.","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"TdpBLL9y5N"}],"key":"rm6rM8HyD1"},{"type":"heading","depth":3,"position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"A Note on Units","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"sXb8w60mo2"}],"identifier":"a-note-on-units","label":"A Note on Units","html_id":"a-note-on-units","implicit":true,"key":"g3Ymx2o2b1"},{"type":"paragraph","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"Throughout this course, we’ll use CGS (centimeter-gram-second) units, standard in astrophysics:","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"ALL7To9Oss"}],"key":"nBKuFSuiNc"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":31,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Distances in centimeters (Earth-Sun distance: 1.496 × 10¹³ cm)","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"BLVjBxJm2A"}],"key":"DXnHrc15WB"},{"type":"listItem","spread":true,"position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Masses in grams (Solar mass: 1.989 × 10³³ g)","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"Bj4BhGCMmA"}],"key":"YKuKikAoPL"},{"type":"listItem","spread":true,"position":{"start":{"line":33,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"G = 6.67 × 10⁻⁸ cm³ g⁻¹ s⁻²","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"S2irgODKFj"}],"key":"xetEusMl6P"}],"key":"x82gKn9wBG"},{"type":"paragraph","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"These huge numbers will teach you to work with scientific notation naturally and understand when numerical overflow becomes a real concern.","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"asjIOE2OlY"}],"key":"ZUVXUUbnhX"},{"type":"heading","depth":2,"position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"2.1 Python as Your Scientific Calculator","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"iQVL55BKGn"}],"identifier":"id-2-1-python-as-your-scientific-calculator","label":"2.1 Python as Your Scientific Calculator","html_id":"id-2-1-python-as-your-scientific-calculator","implicit":true,"key":"KvKHxlYmYS"},{"type":"paragraph","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"Open IPython (not the basic Python interpreter) to follow along:","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"vGDx296oJB"}],"key":"AG91Vx8dlS"},{"type":"code","lang":"python","value":"In [1]: 2 + 2\nOut[1]: 4\n\nIn [2]: 10 / 3\nOut[2]: 3.3333333333333335  # Note: not exactly 1/3!\n\nIn [3]: 2 ** 10  # Exponentiation\nOut[3]: 1024","position":{"start":{"line":41,"column":1},"end":{"line":50,"column":1}},"key":"DBDpUYgxGF"},{"type":"heading","depth":3,"position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"children":[{"type":"text","value":"Operator Precedence: A Source of Bugs","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"key":"iRO7ctrVgQ"}],"identifier":"operator-precedence-a-source-of-bugs","label":"Operator Precedence: A Source of Bugs","html_id":"operator-precedence-a-source-of-bugs","implicit":true,"key":"orB73nr2Qm"},{"type":"paragraph","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"children":[{"type":"text","value":"Python follows PEMDAS, but relying on memorized rules causes errors. Let’s see with a real calculation:","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"E082SvLEtU"}],"key":"BOTkSVNjjo"},{"type":"code","lang":"python","value":"In [4]: # Calculate orbital velocity: v = sqrt(GM/r)\nIn [5]: G = 6.67e-8   # CGS units\nIn [6]: M = 1.989e33  # Solar mass in grams\nIn [7]: r = 1.496e13  # 1 AU in cm\n\nIn [8]: # WRONG - operator precedence error!\nIn [9]: v_wrong = G * M / r ** 0.5\nIn [10]: v_wrong\nOut[10]: 27347197.71  # Way too fast!\n\nIn [11]: # CORRECT - parentheses clarify intent\nIn [12]: v_right = (G * M / r) ** 0.5\nIn [13]: v_right\nOut[13]: 2978469.18  # ~30 km/s, Earth's orbital speed\n\nIn [14]: # Even clearer - break into steps\nIn [15]: gravitational_parameter = G * M\nIn [16]: v_clear = (gravitational_parameter / r) ** 0.5","position":{"start":{"line":56,"column":1},"end":{"line":75,"column":1}},"key":"JlLLym3BHq"},{"type":"paragraph","position":{"start":{"line":77,"column":1},"end":{"line":77,"column":1}},"children":[{"type":"text","value":"The wrong version calculated (GM/√r) instead of √(GM/r) — a factor of √r error!","position":{"start":{"line":77,"column":1},"end":{"line":77,"column":1}},"key":"gw8kIsjogX"}],"key":"uO9zTp29dq"},{"type":"paragraph","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"children":[{"type":"strong","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"children":[{"type":"text","value":"⏸️ Pause and Predict","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"key":"D8OcyX3awk"}],"key":"ZFn09m7uFq"},{"type":"text","value":": What will ","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"key":"tQLwn2dxiM"},{"type":"inlineCode","value":"-2 ** 2","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"key":"wOPIadrhA7"},{"type":"text","value":" evaluate to?","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"key":"eIQznoRI6W"}],"key":"BtnvOCzRob"},{"type":"details","children":[{"type":"summary","children":[{"type":"text","value":"Answer","key":"jZ6O3DAIAm"}],"key":"TVL12jCL59"},{"type":"paragraph","children":[{"type":"inlineCode","value":"-4","key":"UdMPq93nHa"},{"type":"text","value":" (not ","key":"OR2Xc0Cr8H"},{"type":"inlineCode","value":"4","key":"HUeiuPxXYg"},{"type":"text","value":"). Exponentiation happens before the negative sign, so this is ","key":"Vel2Pd7UOS"},{"type":"inlineCode","value":"-(2²)","key":"HwA3eaUhEG"},{"type":"text","value":". For squaring negative numbers, use ","key":"Mvk3MXMXyW"},{"type":"inlineCode","value":"(-2) ** 2","key":"pNKoiiLbG8"},{"type":"text","value":".","key":"RzdwgvrJVO"}],"key":"rbHnjgosBg"}],"key":"td1IDtkk44"},{"type":"heading","depth":3,"position":{"start":{"line":88,"column":1},"end":{"line":88,"column":1}},"children":[{"type":"text","value":"Complete Arithmetic Operators","position":{"start":{"line":88,"column":1},"end":{"line":88,"column":1}},"key":"d6CxmJ5kJo"}],"identifier":"complete-arithmetic-operators","label":"Complete Arithmetic Operators","html_id":"complete-arithmetic-operators","implicit":true,"key":"YmcbW4O4lQ"},{"type":"code","lang":"python","value":"In [17]: 17 / 3   # True division (always float)\nOut[17]: 5.666666666666667\n\nIn [18]: 17 // 3  # Floor division\nOut[18]: 5\n\nIn [19]: 17 % 3   # Modulo (remainder)\nOut[19]: 2\n\nIn [20]: -17 // 3  # Warning: rounds toward -infinity!\nOut[20]: -6  # Not -5!","position":{"start":{"line":90,"column":1},"end":{"line":102,"column":1}},"key":"iKUkNuSZ99"},{"type":"heading","depth":2,"position":{"start":{"line":104,"column":1},"end":{"line":104,"column":1}},"children":[{"type":"text","value":"2.2 How Python Stores Numbers: Critical for Scientific Computing","position":{"start":{"line":104,"column":1},"end":{"line":104,"column":1}},"key":"QkODZkSrNs"}],"identifier":"id-2-2-how-python-stores-numbers-critical-for-scientific-computing","label":"2.2 How Python Stores Numbers: Critical for Scientific Computing","html_id":"id-2-2-how-python-stores-numbers-critical-for-scientific-computing","implicit":true,"key":"mpQuYVPILZ"},{"type":"paragraph","position":{"start":{"line":106,"column":1},"end":{"line":106,"column":1}},"children":[{"type":"text","value":"Understanding number representation prevents subtle bugs that can destroy your simulations.","position":{"start":{"line":106,"column":1},"end":{"line":106,"column":1}},"key":"Mk96PB5Orv"}],"key":"pWvs6RBgh3"},{"type":"heading","depth":3,"position":{"start":{"line":108,"column":1},"end":{"line":108,"column":1}},"children":[{"type":"text","value":"Integers: Arbitrary Precision","position":{"start":{"line":108,"column":1},"end":{"line":108,"column":1}},"key":"WrSyxBAn9A"}],"identifier":"integers-arbitrary-precision","label":"Integers: Arbitrary Precision","html_id":"integers-arbitrary-precision","implicit":true,"key":"PkiMgrtukS"},{"type":"paragraph","position":{"start":{"line":110,"column":1},"end":{"line":110,"column":1}},"children":[{"type":"text","value":"Python integers have unlimited precision:","position":{"start":{"line":110,"column":1},"end":{"line":110,"column":1}},"key":"yx0LXL7e0G"}],"key":"JcM9sjVPov"},{"type":"code","lang":"python","value":"In [21]: googol = 10 ** 100\nIn [22]: googol + 1  # Still exact!\nOut[22]: 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\n\nIn [23]: import sys\nIn [24]: sys.getsizeof(42)\nOut[24]: 28  # Small int: 28 bytes\n\nIn [25]: sys.getsizeof(googol)\nOut[25]: 72  # Big int: 72 bytes","position":{"start":{"line":112,"column":1},"end":{"line":123,"column":1}},"key":"NqJDStDZfV"},{"type":"paragraph","position":{"start":{"line":125,"column":1},"end":{"line":125,"column":1}},"children":[{"type":"text","value":"This is why NumPy arrays are crucial later — a million Python integers would use ~28MB, while a NumPy array uses ~4MB.","position":{"start":{"line":125,"column":1},"end":{"line":125,"column":1}},"key":"W3380fEwGG"}],"key":"ZuApaRrHSE"},{"type":"heading","depth":3,"position":{"start":{"line":127,"column":1},"end":{"line":127,"column":1}},"children":[{"type":"text","value":"Floating-Point: The Heart of Numerical Computing","position":{"start":{"line":127,"column":1},"end":{"line":127,"column":1}},"key":"NEwRhAumB9"}],"identifier":"floating-point-the-heart-of-numerical-computing","label":"Floating-Point: The Heart of Numerical Computing","html_id":"floating-point-the-heart-of-numerical-computing","implicit":true,"key":"ZUmnmlCs6M"},{"type":"paragraph","position":{"start":{"line":129,"column":1},"end":{"line":129,"column":1}},"children":[{"type":"text","value":"Floats use IEEE 754 representation: 64 bits split into sign (1 bit), exponent (11 bits), and mantissa (52 bits). This creates fundamental limitations:","position":{"start":{"line":129,"column":1},"end":{"line":129,"column":1}},"key":"dSgl7idYOi"}],"key":"ek6RpzMtHs"},{"type":"code","lang":"python","value":"In [26]: 0.1 + 0.2\nOut[26]: 0.30000000000000004  # Not 0.3!\n\nIn [27]: 0.1 + 0.2 == 0.3\nOut[27]: False  # Never use == with floats!","position":{"start":{"line":131,"column":1},"end":{"line":137,"column":1}},"key":"uFTcimilw2"},{"type":"paragraph","position":{"start":{"line":139,"column":1},"end":{"line":139,"column":1}},"children":[{"type":"text","value":"Why does this happen? Binary can’t represent 0.1 exactly, just like decimal can’t represent 1/3 exactly:","position":{"start":{"line":139,"column":1},"end":{"line":139,"column":1}},"key":"zU9lBEdpZZ"}],"key":"TG8plhw0ls"},{"type":"code","lang":"","value":"Decimal: 1/3 = 0.33333... (repeating forever)\nBinary:  1/10 = 0.0001100110011... (repeating forever)\n\nWhat's actually stored for 0.1:\n0.1000000000000000055511151231257827...\n\nSo: 0.1 + 0.2 = 0.3000000000000000444089209850062616...\nBut 0.3 stored = 0.2999999999999999888977697537484345...\n\nThey're different in the 17th decimal place!","position":{"start":{"line":141,"column":1},"end":{"line":152,"column":1}},"key":"uP4obBUOvl"},{"type":"heading","depth":3,"position":{"start":{"line":154,"column":1},"end":{"line":154,"column":1}},"children":[{"type":"text","value":"Machine Epsilon: The Smallest Distinguishable Difference","position":{"start":{"line":154,"column":1},"end":{"line":154,"column":1}},"key":"X5bB6EiAgX"}],"identifier":"machine-epsilon-the-smallest-distinguishable-difference","label":"Machine Epsilon: The Smallest Distinguishable Difference","html_id":"machine-epsilon-the-smallest-distinguishable-difference","implicit":true,"key":"THgYrZghEt"},{"type":"code","lang":"python","value":"In [28]: import sys\nIn [29]: sys.float_info.epsilon\nOut[29]: 2.220446049250313e-16\n\nIn [30]: 1.0 + 1e-16 == 1.0\nOut[30]: True  # Too small to detect!\n\nIn [31]: 1.0 + 1e-15 == 1.0\nOut[31]: False  # Large enough to matter","position":{"start":{"line":156,"column":1},"end":{"line":166,"column":1}},"key":"GIEwNQHlfR"},{"type":"paragraph","position":{"start":{"line":168,"column":1},"end":{"line":168,"column":1}},"children":[{"type":"text","value":"This matters when checking convergence in iterative algorithms. You can’t get precision better than machine epsilon.","position":{"start":{"line":168,"column":1},"end":{"line":168,"column":1}},"key":"u590VW00dF"}],"key":"fEgvd0j7nB"},{"type":"heading","depth":3,"position":{"start":{"line":170,"column":1},"end":{"line":170,"column":1}},"children":[{"type":"text","value":"Safe Floating-Point Comparisons","position":{"start":{"line":170,"column":1},"end":{"line":170,"column":1}},"key":"YIvvqPd92S"}],"identifier":"safe-floating-point-comparisons","label":"Safe Floating-Point Comparisons","html_id":"safe-floating-point-comparisons","implicit":true,"key":"jqzOpgpgOx"},{"type":"code","lang":"python","value":"In [32]: # WRONG\nIn [33]: if velocity == 299792458.0:  # Speed of light\n   ...:     print(\"At light speed!\")\n\nIn [34]: # CORRECT - absolute tolerance\nIn [35]: if abs(velocity - 299792458.0) < 1.0:  # Within 1 m/s\n   ...:     print(\"Effectively at light speed!\")\n\nIn [36]: # BETTER - relative tolerance\nIn [37]: import math\nIn [38]: if math.isclose(velocity, 299792458.0, rel_tol=1e-9):\n   ...:     print(\"At light speed within relative tolerance!\")","position":{"start":{"line":172,"column":1},"end":{"line":185,"column":1}},"key":"GfXJEYCx6b"},{"type":"heading","depth":3,"position":{"start":{"line":187,"column":1},"end":{"line":187,"column":1}},"children":[{"type":"text","value":"Catastrophic Cancellation: When Subtraction Destroys Precision","position":{"start":{"line":187,"column":1},"end":{"line":187,"column":1}},"key":"Yh16GiqdBg"}],"identifier":"catastrophic-cancellation-when-subtraction-destroys-precision","label":"Catastrophic Cancellation: When Subtraction Destroys Precision","html_id":"catastrophic-cancellation-when-subtraction-destroys-precision","implicit":true,"key":"W6Qsqz4s1C"},{"type":"code","lang":"python","value":"In [39]: # Computing 1 - cos(x) for small x\nIn [40]: import math\nIn [41]: x = 1e-8\n\nIn [42]: # Direct computation - catastrophic cancellation!\nIn [43]: math.cos(x)\nOut[43]: 0.9999999999999999  # Lost most precision\n\nIn [44]: 1 - math.cos(x)\nOut[44]: 0.0  # Complete precision loss!\n\nIn [45]: # Better: use mathematical identity\nIn [46]: 2 * math.sin(x/2) ** 2\nOut[46]: 4.999999999999999e-17  # Maintains precision!","position":{"start":{"line":189,"column":1},"end":{"line":204,"column":1}},"key":"I8KWiBIa3a"},{"type":"paragraph","position":{"start":{"line":206,"column":1},"end":{"line":206,"column":1}},"children":[{"type":"text","value":"This appears in orbital mechanics when computing small changes in energy or angular momentum.","position":{"start":{"line":206,"column":1},"end":{"line":206,"column":1}},"key":"vhhwK7CaKo"}],"key":"B7lM3JLYme"},{"type":"heading","depth":3,"position":{"start":{"line":208,"column":1},"end":{"line":208,"column":1}},"children":[{"type":"text","value":"Overflow and Underflow in Astronomical Calculations","position":{"start":{"line":208,"column":1},"end":{"line":208,"column":1}},"key":"t4dushnWBd"}],"identifier":"overflow-and-underflow-in-astronomical-calculations","label":"Overflow and Underflow in Astronomical Calculations","html_id":"overflow-and-underflow-in-astronomical-calculations","implicit":true,"key":"WWa20gQHKO"},{"type":"code","lang":"python","value":"In [47]: sys.float_info.max\nOut[47]: 1.7976931348623157e+308  # Largest float\n\nIn [48]: sys.float_info.min\nOut[48]: 2.2250738585072014e-308  # Smallest positive float\n\nIn [49]: # Overflow example\nIn [50]: L_sun = 3.828e33  # Solar luminosity (erg/s)\nIn [51]: n_galaxies = 1e12\nIn [52]: L_universe = L_sun * 1e11 * n_galaxies\nOut[52]: inf  # Overflow to infinity!\n\nIn [53]: # Underflow example\nIn [54]: probability = 1e-200\nIn [55]: prob_squared = probability ** 2\nOut[55]: 0.0  # Underflow to zero!\n\nIn [56]: # Solution: work in log space\nIn [57]: log_prob = math.log10(probability)\nOut[57]: -200.0\nIn [58]: log_prob_squared = 2 * log_prob\nOut[58]: -400.0  # Maintains precision in log space","position":{"start":{"line":210,"column":1},"end":{"line":233,"column":1}},"key":"L6OBwKcLxA"},{"type":"heading","depth":3,"position":{"start":{"line":235,"column":1},"end":{"line":235,"column":1}},"children":[{"type":"text","value":"Defensive Programming with Numerical Checks","position":{"start":{"line":235,"column":1},"end":{"line":235,"column":1}},"key":"O2QYJIenwh"}],"identifier":"defensive-programming-with-numerical-checks","label":"Defensive Programming with Numerical Checks","html_id":"defensive-programming-with-numerical-checks","implicit":true,"key":"SgR0J0gKTa"},{"type":"paragraph","position":{"start":{"line":237,"column":1},"end":{"line":237,"column":1}},"children":[{"type":"text","value":"Build habits that catch numerical problems early:","position":{"start":{"line":237,"column":1},"end":{"line":237,"column":1}},"key":"ifdflHJKWA"}],"key":"hfuPznChKY"},{"type":"code","lang":"python","value":"In [59]: def safe_divide(a, b, epsilon=1e-10):\n   ...:     \"\"\"Division with zero check.\"\"\"\n   ...:     if abs(b) < epsilon:\n   ...:         raise ValueError(f\"Division by near-zero: {b}\")\n   ...:     return a / b\n\nIn [60]: def check_finite(value, name=\"value\"):\n   ...:     \"\"\"Ensure value is finite (not inf or nan).\"\"\"\n   ...:     if not math.isfinite(value):\n   ...:         raise ValueError(f\"{name} is not finite: {value}\")\n   ...:     return value","position":{"start":{"line":239,"column":1},"end":{"line":251,"column":1}},"key":"OLVsC3cQ2g"},{"type":"heading","depth":2,"position":{"start":{"line":253,"column":1},"end":{"line":253,"column":1}},"children":[{"type":"text","value":"2.3 Complex Numbers for Wave Physics","position":{"start":{"line":253,"column":1},"end":{"line":253,"column":1}},"key":"EYjaxabzXf"}],"identifier":"id-2-3-complex-numbers-for-wave-physics","label":"2.3 Complex Numbers for Wave Physics","html_id":"id-2-3-complex-numbers-for-wave-physics","implicit":true,"key":"KiZgOATXkS"},{"type":"paragraph","position":{"start":{"line":255,"column":1},"end":{"line":255,"column":1}},"children":[{"type":"text","value":"Python handles complex numbers natively:","position":{"start":{"line":255,"column":1},"end":{"line":255,"column":1}},"key":"vYJhMs9ect"}],"key":"a6wdiB67ms"},{"type":"code","lang":"python","value":"In [61]: z = 3 + 4j  # Engineers use j, physicists use i\nIn [62]: abs(z)  # Magnitude\nOut[62]: 5.0\n\nIn [63]: import cmath\nIn [64]: cmath.phase(z)  # Phase in radians\nOut[64]: 0.9272952180016122\n\nIn [65]: # Euler's formula: e^(iπ) = -1\nIn [66]: cmath.exp(1j * math.pi)\nOut[66]: (-1+1.2246467991473532e-16j)  # Small imaginary part is roundoff","position":{"start":{"line":257,"column":1},"end":{"line":269,"column":1}},"key":"SshYU7siDA"},{"type":"heading","depth":2,"position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"children":[{"type":"text","value":"2.4 Variables and Assignment","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"key":"Epe1FsW0cA"}],"identifier":"id-2-4-variables-and-assignment","label":"2.4 Variables and Assignment","html_id":"id-2-4-variables-and-assignment","implicit":true,"key":"XOfoeVPopL"},{"type":"paragraph","position":{"start":{"line":273,"column":1},"end":{"line":273,"column":1}},"children":[{"type":"text","value":"Variables in Python are names that refer to objects:","position":{"start":{"line":273,"column":1},"end":{"line":273,"column":1}},"key":"rq19vzsTB8"}],"key":"RrMs4KaSHW"},{"type":"code","lang":"python","value":"In [67]: mass = 1.989e33  # Solar mass in grams\nIn [68]: radius = 6.96e10  # Solar radius in cm\n\nIn [69]: # Calculate density\nIn [70]: volume = (4/3) * math.pi * radius**3\nIn [71]: density = mass / volume\nIn [72]: print(f\"Solar density: {density:.2f} g/cm³\")\nSolar density: 1.41 g/cm³","position":{"start":{"line":275,"column":1},"end":{"line":284,"column":1}},"key":"l6RfjfWA5c"},{"type":"paragraph","position":{"start":{"line":286,"column":1},"end":{"line":286,"column":1}},"children":[{"type":"text","value":"Assignment doesn’t copy values; it creates references:","position":{"start":{"line":286,"column":1},"end":{"line":286,"column":1}},"key":"R6Xq712C8c"}],"key":"jkmPpGt3bd"},{"type":"code","lang":"python","value":"In [73]: a = [1, 2, 3]\nIn [74]: b = a  # b refers to SAME list\nIn [75]: b.append(4)\nIn [76]: a  # a changed too!\nOut[76]: [1, 2, 3, 4]","position":{"start":{"line":288,"column":1},"end":{"line":294,"column":1}},"key":"GRdI1V0xvx"},{"type":"heading","depth":2,"position":{"start":{"line":296,"column":1},"end":{"line":296,"column":1}},"children":[{"type":"text","value":"2.5 Strings and Formatting","position":{"start":{"line":296,"column":1},"end":{"line":296,"column":1}},"key":"UdfaUPijGo"}],"identifier":"id-2-5-strings-and-formatting","label":"2.5 Strings and Formatting","html_id":"id-2-5-strings-and-formatting","implicit":true,"key":"prx5HRWnwi"},{"type":"paragraph","position":{"start":{"line":298,"column":1},"end":{"line":298,"column":1}},"children":[{"type":"text","value":"Strings are immutable sequences of characters:","position":{"start":{"line":298,"column":1},"end":{"line":298,"column":1}},"key":"GByRbwAFaC"}],"key":"EvpevJ8ZJ0"},{"type":"code","lang":"python","value":"In [77]: star = \"Betelgeuse\"\nIn [78]: star[0]  # Indexing\nOut[78]: 'B'\nIn [79]: star[-1]  # Negative indexing from end\nOut[79]: 'e'\nIn [80]: star[0:5]  # Slicing\nOut[80]: 'Betel'","position":{"start":{"line":300,"column":1},"end":{"line":308,"column":1}},"key":"PB5a8GPoCs"},{"type":"heading","depth":3,"position":{"start":{"line":310,"column":1},"end":{"line":310,"column":1}},"children":[{"type":"text","value":"F-Strings: Modern Python Formatting","position":{"start":{"line":310,"column":1},"end":{"line":310,"column":1}},"key":"Pzi7s1kELa"}],"identifier":"f-strings-modern-python-formatting","label":"F-Strings: Modern Python Formatting","html_id":"f-strings-modern-python-formatting","implicit":true,"key":"omokAoucPl"},{"type":"paragraph","position":{"start":{"line":312,"column":1},"end":{"line":312,"column":1}},"children":[{"type":"text","value":"F-strings (formatted string literals) are the preferred way to format output:","position":{"start":{"line":312,"column":1},"end":{"line":312,"column":1}},"key":"U2QXkGgFLR"}],"key":"uzT37ipFOD"},{"type":"code","lang":"python","value":"In [81]: # Basic f-string\nIn [82]: object_name = \"M31\"\nIn [83]: distance = 2.537e6  # light-years\nIn [84]: print(f\"The {object_name} galaxy is {distance:.2e} light-years away\")\nThe M31 galaxy is 2.54e+06 light-years away\n\nIn [85]: # Format specifications\nIn [86]: x = 1234.56789\nIn [87]: print(f\"{x:.2f}\")   # 2 decimal places\n1234.57\nIn [88]: print(f\"{x:.2e}\")   # Scientific notation\n1.23e+03\nIn [89]: print(f\"{x:10.2f}\") # Width 10, 2 decimals\n   1234.57\nIn [90]: print(f\"{x:,.0f}\")  # Thousands separator\n1,235\n\nIn [91]: # Debugging with = (Python 3.8+)\nIn [92]: velocity = 29784.7\nIn [93]: print(f\"{velocity=}\")  # Shows name and value\nvelocity=29784.7","position":{"start":{"line":314,"column":1},"end":{"line":336,"column":1}},"key":"YcOoHNXmS2"},{"type":"paragraph","position":{"start":{"line":338,"column":1},"end":{"line":338,"column":1}},"children":[{"type":"text","value":"Common f-string patterns for scientific computing:","position":{"start":{"line":338,"column":1},"end":{"line":338,"column":1}},"key":"Wge8vYhODc"}],"key":"PPAxNeRaaX"},{"type":"code","lang":"python","value":"In [94]: # Aligning columns\nIn [95]: for i, (name, mag) in enumerate([(\"Sirius\", -1.46), (\"Canopus\", -0.74)]):\n   ...:     print(f\"{i:2d}. {name:15s} {mag:6.2f}\")\n 0. Sirius          -1.46\n 1. Canopus         -0.74\n\nIn [96]: # Percentage formatting\nIn [97]: efficiency = 0.8732\nIn [98]: print(f\"Efficiency: {efficiency:.1%}\")\nEfficiency: 87.3%","position":{"start":{"line":340,"column":1},"end":{"line":351,"column":1}},"key":"vN0XJh2glh"},{"type":"heading","depth":2,"position":{"start":{"line":353,"column":1},"end":{"line":353,"column":1}},"children":[{"type":"text","value":"2.6 Type System and Conversions","position":{"start":{"line":353,"column":1},"end":{"line":353,"column":1}},"key":"dWol7E0bgK"}],"identifier":"id-2-6-type-system-and-conversions","label":"2.6 Type System and Conversions","html_id":"id-2-6-type-system-and-conversions","implicit":true,"key":"ZVxstdI540"},{"type":"paragraph","position":{"start":{"line":355,"column":1},"end":{"line":355,"column":1}},"children":[{"type":"text","value":"Python is dynamically typed but strongly typed:","position":{"start":{"line":355,"column":1},"end":{"line":355,"column":1}},"key":"eQhEr7pZwr"}],"key":"gQfrlDsmgM"},{"type":"code","lang":"python","value":"In [99]: # Type checking\nIn [100]: type(42)\nOut[100]: int\nIn [101]: isinstance(3.14, float)\nOut[101]: True\n\nIn [102]: # Type conversion\nIn [103]: int(3.14)  # Truncates toward zero\nOut[103]: 3\nIn [104]: int(-3.14)\nOut[104]: -3  # Not -4!\n\nIn [105]: float(\"1.23e-4\")\nOut[105]: 0.000123\n\nIn [106]: # Common error\nIn [107]: \"Distance: \" + 2.5  # TypeError!\nIn [108]: # Fix with f-string\nIn [109]: f\"Distance: {2.5}\"\nOut[109]: 'Distance: 2.5'","position":{"start":{"line":357,"column":1},"end":{"line":378,"column":1}},"key":"qJXCA77LCP"},{"type":"heading","depth":2,"position":{"start":{"line":380,"column":1},"end":{"line":380,"column":1}},"children":[{"type":"text","value":"2.7 Booleans and None","position":{"start":{"line":380,"column":1},"end":{"line":380,"column":1}},"key":"aVuiywG5Wf"}],"identifier":"id-2-7-booleans-and-none","label":"2.7 Booleans and None","html_id":"id-2-7-booleans-and-none","implicit":true,"key":"H5z3KB242L"},{"type":"paragraph","position":{"start":{"line":382,"column":1},"end":{"line":382,"column":1}},"children":[{"type":"text","value":"Understanding truthiness is crucial for scientific computing:","position":{"start":{"line":382,"column":1},"end":{"line":382,"column":1}},"key":"IZwBKSpC7q"}],"key":"eSBCWUKfci"},{"type":"code","lang":"python","value":"In [110]: bool(0)\nOut[110]: False\nIn [111]: bool(0.0)\nOut[111]: False\nIn [112]: bool(1e-100)  # Tiny but not zero!\nOut[112]: True\n\nIn [113]: # Common bug in scientific code\nIn [114]: error = 1e-15  # Tiny numerical error\nIn [115]: if error:  # WRONG - triggers for any non-zero!\n   ...:     print(\"Error detected!\")\nError detected!\n\nIn [116]: # CORRECT\nIn [117]: threshold = 1e-10\nIn [118]: if error > threshold:\n   ...:     print(\"Significant error!\")\n# No output - error below threshold\n\nIn [119]: # None checks\nIn [120]: result = None\nIn [121]: if result is None:  # Correct way to check\n   ...:     print(\"No result yet\")","position":{"start":{"line":384,"column":1},"end":{"line":408,"column":1}},"key":"ps9UGZMfBL"},{"type":"heading","depth":2,"position":{"start":{"line":410,"column":1},"end":{"line":410,"column":1}},"children":[{"type":"text","value":"2.8 The Math Module","position":{"start":{"line":410,"column":1},"end":{"line":410,"column":1}},"key":"xQRlybqOaa"}],"identifier":"id-2-8-the-math-module","label":"2.8 The Math Module","html_id":"id-2-8-the-math-module","implicit":true,"key":"EZvr1E4dOO"},{"type":"paragraph","position":{"start":{"line":412,"column":1},"end":{"line":412,"column":1}},"children":[{"type":"text","value":"Essential mathematical functions for scientific computing:","position":{"start":{"line":412,"column":1},"end":{"line":412,"column":1}},"key":"SBUSqpMRhZ"}],"key":"QtyW3BJipk"},{"type":"code","lang":"python","value":"In [122]: import math\nIn [123]: math.pi\nOut[123]: 3.141592653589793\nIn [124]: math.e\nOut[124]: 2.718281828459045\n\nIn [125]: # Trigonometry (radians)\nIn [126]: math.sin(math.pi / 6)\nOut[126]: 0.49999999999999994  # Should be 0.5 exactly\n\nIn [127]: # Logarithms\nIn [128]: math.log(math.e)  # Natural log\nOut[128]: 1.0\nIn [129]: math.log10(1000)  # Base-10 log\nOut[129]: 3.0\nIn [130]: math.log2(1024)  # Base-2 log\nOut[130]: 10.0\n\nIn [131]: # Special functions\nIn [132]: math.gamma(5)  # Gamma function: (n-1)!\nOut[132]: 24.0\nIn [133]: math.erf(1)  # Error function\nOut[133]: 0.8427007929497149","position":{"start":{"line":414,"column":1},"end":{"line":438,"column":1}},"key":"Dg1UWNdkfq"},{"type":"heading","depth":2,"position":{"start":{"line":440,"column":1},"end":{"line":440,"column":1}},"children":[{"type":"text","value":"2.9 From Interactive to Script","position":{"start":{"line":440,"column":1},"end":{"line":440,"column":1}},"key":"YqeMdNQBPP"}],"identifier":"id-2-9-from-interactive-to-script","label":"2.9 From Interactive to Script","html_id":"id-2-9-from-interactive-to-script","implicit":true,"key":"w8mnqzWRRG"},{"type":"paragraph","position":{"start":{"line":442,"column":1},"end":{"line":442,"column":1}},"children":[{"type":"text","value":"Convert your IPython explorations into reusable scripts:","position":{"start":{"line":442,"column":1},"end":{"line":442,"column":1}},"key":"WaExZTyD3z"}],"key":"fwnjNoy5mB"},{"type":"code","lang":"python","value":"#!/usr/bin/env python\n\"\"\"\nstellar_calculations.py\nDemonstrate numerical calculations for stellar physics.\n\"\"\"\n\nimport math\n\ndef schwarzschild_radius(mass_grams):\n    \"\"\"Calculate Schwarzschild radius in cm.\n    \n    Rs = 2GM/c^2\n    \"\"\"\n    G = 6.67e-8  # cm^3 g^-1 s^-2\n    c = 2.998e10  # cm/s\n    \n    # Check for numerical issues\n    if mass_grams <= 0:\n        raise ValueError(f\"Mass must be positive: {mass_grams}\")\n    \n    rs = 2 * G * mass_grams / c**2\n    \n    # Check result is reasonable\n    if not math.isfinite(rs):\n        raise ValueError(f\"Calculation overflow for mass {mass_grams}\")\n    \n    return rs\n\nif __name__ == \"__main__\":\n    # Test with solar mass\n    M_sun = 1.989e33  # grams\n    rs_sun = schwarzschild_radius(M_sun)\n    \n    print(f\"Solar mass: {M_sun:.3e} g\")\n    print(f\"Schwarzschild radius: {rs_sun:.3e} cm\")\n    print(f\"That's {rs_sun/1e5:.1f} km\")\n    \n    # Test with Earth mass\n    M_earth = 5.972e27  # grams\n    rs_earth = schwarzschild_radius(M_earth)\n    print(f\"\\nEarth would need to be compressed to {rs_earth:.2f} cm\")","position":{"start":{"line":444,"column":1},"end":{"line":486,"column":1}},"key":"SzswN4aF98"},{"type":"heading","depth":2,"position":{"start":{"line":488,"column":1},"end":{"line":488,"column":1}},"children":[{"type":"text","value":"Practice Exercises","position":{"start":{"line":488,"column":1},"end":{"line":488,"column":1}},"key":"cXddYM8JmE"}],"identifier":"practice-exercises","label":"Practice Exercises","html_id":"practice-exercises","implicit":true,"key":"il0tG7cnwI"},{"type":"heading","depth":3,"position":{"start":{"line":490,"column":1},"end":{"line":490,"column":1}},"children":[{"type":"text","value":"Exercise 2.1: Numerical Precision Investigation","position":{"start":{"line":490,"column":1},"end":{"line":490,"column":1}},"key":"zssS0uC1HQ"}],"identifier":"exercise-2-1-numerical-precision-investigation","label":"Exercise 2.1: Numerical Precision Investigation","html_id":"exercise-2-1-numerical-precision-investigation","implicit":true,"key":"CC5TElic86"},{"type":"code","lang":"python","value":"def explore_precision():\n    \"\"\"\n    Investigate floating-point precision limits.\n    \n    Tasks:\n    1. Find a case where a + b == a even though b != 0\n    2. Find the distance where parallax < machine epsilon\n    3. Demonstrate loss of precision in variance calculation\n    \"\"\"\n    # Your code here\n    pass","position":{"start":{"line":492,"column":1},"end":{"line":504,"column":1}},"key":"iXtxgrt591"},{"type":"heading","depth":3,"position":{"start":{"line":506,"column":1},"end":{"line":506,"column":1}},"children":[{"type":"text","value":"Exercise 2.2: Safe Numerical Functions","position":{"start":{"line":506,"column":1},"end":{"line":506,"column":1}},"key":"mvawnayzRw"}],"identifier":"exercise-2-2-safe-numerical-functions","label":"Exercise 2.2: Safe Numerical Functions","html_id":"exercise-2-2-safe-numerical-functions","implicit":true,"key":"g0Xjrk5gSs"},{"type":"code","lang":"python","value":"def safe_magnitude(values):\n    \"\"\"\n    Calculate magnitude avoiding overflow/underflow.\n    \n    For values = [v1, v2, ..., vn]\n    Return sqrt(v1^2 + v2^2 + ... + vn^2)\n    \n    Handle cases where direct calculation would overflow.\n    Hint: Factor out the largest value.\n    \"\"\"\n    # Your code here\n    pass","position":{"start":{"line":508,"column":1},"end":{"line":521,"column":1}},"key":"QIoVtmKuse"},{"type":"heading","depth":3,"position":{"start":{"line":523,"column":1},"end":{"line":523,"column":1}},"children":[{"type":"text","value":"Exercise 2.3: Format Scientific Output","position":{"start":{"line":523,"column":1},"end":{"line":523,"column":1}},"key":"dqAtk7bhlg"}],"identifier":"exercise-2-3-format-scientific-output","label":"Exercise 2.3: Format Scientific Output","html_id":"exercise-2-3-format-scientific-output","implicit":true,"key":"HhrcVt5Gae"},{"type":"code","lang":"python","value":"def format_stellar_data(stars):\n    \"\"\"\n    Create formatted table of stellar data.\n    \n    Input: List of (name, mass, luminosity) tuples\n    Output: Formatted table with proper alignment and units\n    \n    Use f-strings to create professional-looking output.\n    \"\"\"\n    # Your code here\n    pass","position":{"start":{"line":525,"column":1},"end":{"line":537,"column":1}},"key":"Z4moEjBeBd"},{"type":"heading","depth":2,"position":{"start":{"line":539,"column":1},"end":{"line":539,"column":1}},"children":[{"type":"text","value":"Key Takeaways","position":{"start":{"line":539,"column":1},"end":{"line":539,"column":1}},"key":"m1pnQrYzjc"}],"identifier":"key-takeaways","label":"Key Takeaways","html_id":"key-takeaways","implicit":true,"key":"oUcVTwIkYt"},{"type":"paragraph","position":{"start":{"line":541,"column":1},"end":{"line":541,"column":1}},"children":[{"type":"text","value":"Floating-point arithmetic is approximate by design. Never use ","position":{"start":{"line":541,"column":1},"end":{"line":541,"column":1}},"key":"qsOWNR0Ukv"},{"type":"inlineCode","value":"==","position":{"start":{"line":541,"column":1},"end":{"line":541,"column":1}},"key":"v7q5rfzZ66"},{"type":"text","value":" to compare floats; always use a tolerance. This isn’t a Python quirk — it’s fundamental to how computers work.","position":{"start":{"line":541,"column":1},"end":{"line":541,"column":1}},"key":"fXDzyIyYSh"}],"key":"gBv07LouCO"},{"type":"paragraph","position":{"start":{"line":543,"column":1},"end":{"line":543,"column":1}},"children":[{"type":"text","value":"Catastrophic cancellation occurs when subtracting nearly equal numbers. Use mathematical identities to avoid it. This will matter when computing small changes in conserved quantities.","position":{"start":{"line":543,"column":1},"end":{"line":543,"column":1}},"key":"INgdhV597q"}],"key":"vA2RRiugmC"},{"type":"paragraph","position":{"start":{"line":545,"column":1},"end":{"line":545,"column":1}},"children":[{"type":"text","value":"Overflow and underflow are real concerns in astronomy with its extreme scales. Know when to work in log space or rescale your units.","position":{"start":{"line":545,"column":1},"end":{"line":545,"column":1}},"key":"PxvHuNqsEA"}],"key":"ElETqPV7Jp"},{"type":"paragraph","position":{"start":{"line":547,"column":1},"end":{"line":547,"column":1}},"children":[{"type":"text","value":"Machine epsilon sets the fundamental limit of floating-point precision. You cannot distinguish numbers closer than ~2.2e-16 relative difference.","position":{"start":{"line":547,"column":1},"end":{"line":547,"column":1}},"key":"fQfkXCITWm"}],"key":"UzBkjENtWe"},{"type":"paragraph","position":{"start":{"line":549,"column":1},"end":{"line":549,"column":1}},"children":[{"type":"text","value":"Defensive programming with explicit checks catches numerical problems early. A simple assertion can save weeks of debugging corrupted simulations.","position":{"start":{"line":549,"column":1},"end":{"line":549,"column":1}},"key":"Of8SE9fNhW"}],"key":"ubBjaWjIYY"},{"type":"paragraph","position":{"start":{"line":551,"column":1},"end":{"line":551,"column":1}},"children":[{"type":"text","value":"These concepts aren’t academic — they’re the difference between simulations that conserve energy and ones that explode, between detecting exoplanets and missing them due to numerical noise.","position":{"start":{"line":551,"column":1},"end":{"line":551,"column":1}},"key":"LCp2FPYFPb"}],"key":"FJDj0lAaC9"},{"type":"heading","depth":2,"position":{"start":{"line":553,"column":1},"end":{"line":553,"column":1}},"children":[{"type":"text","value":"Quick Reference: New Functions and Commands","position":{"start":{"line":553,"column":1},"end":{"line":553,"column":1}},"key":"AVdhhoEaM4"}],"identifier":"quick-reference-new-functions-and-commands","label":"Quick Reference: New Functions and Commands","html_id":"quick-reference-new-functions-and-commands","implicit":true,"key":"uKlGGCcEyM"},{"type":"table","position":{"start":{"line":555,"column":1},"end":{"line":581,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":555,"column":1},"end":{"line":555,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":555,"column":1},"end":{"line":555,"column":1}},"children":[{"type":"text","value":"Function/Method","position":{"start":{"line":555,"column":1},"end":{"line":555,"column":1}},"key":"Z15a3ZrKr9"}],"key":"YIaIaPMLBt"},{"type":"tableCell","header":true,"position":{"start":{"line":555,"column":1},"end":{"line":555,"column":1}},"children":[{"type":"text","value":"Purpose","position":{"start":{"line":555,"column":1},"end":{"line":555,"column":1}},"key":"Z6eaBuCymg"}],"key":"jWw9wNFVcL"},{"type":"tableCell","header":true,"position":{"start":{"line":555,"column":1},"end":{"line":555,"column":1}},"children":[{"type":"text","value":"Example","position":{"start":{"line":555,"column":1},"end":{"line":555,"column":1}},"key":"WIpDOdgEUD"}],"key":"bfFJDO2l7p"}],"key":"v1RrG1DvGh"},{"type":"tableRow","position":{"start":{"line":557,"column":1},"end":{"line":557,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":557,"column":1},"end":{"line":557,"column":1}},"children":[{"type":"inlineCode","value":"**","position":{"start":{"line":557,"column":1},"end":{"line":557,"column":1}},"key":"lkhhE2tEBZ"}],"key":"Yq2Kr5eRVF"},{"type":"tableCell","position":{"start":{"line":557,"column":1},"end":{"line":557,"column":1}},"children":[{"type":"text","value":"Exponentiation","position":{"start":{"line":557,"column":1},"end":{"line":557,"column":1}},"key":"TNSM3kO4Fs"}],"key":"lpwovk2Q81"},{"type":"tableCell","position":{"start":{"line":557,"column":1},"end":{"line":557,"column":1}},"children":[{"type":"inlineCode","value":"2 ** 10","position":{"start":{"line":557,"column":1},"end":{"line":557,"column":1}},"key":"uFB1KhX8vj"},{"type":"text","value":" → ","position":{"start":{"line":557,"column":1},"end":{"line":557,"column":1}},"key":"C5mI8zTIGw"},{"type":"inlineCode","value":"1024","position":{"start":{"line":557,"column":1},"end":{"line":557,"column":1}},"key":"pNvEhS4cjY"}],"key":"vTx3ywywAr"}],"key":"hOzyUYFecZ"},{"type":"tableRow","position":{"start":{"line":558,"column":1},"end":{"line":558,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":558,"column":1},"end":{"line":558,"column":1}},"children":[{"type":"inlineCode","value":"//","position":{"start":{"line":558,"column":1},"end":{"line":558,"column":1}},"key":"zgPJcOW3ac"}],"key":"Qli0UWp0uH"},{"type":"tableCell","position":{"start":{"line":558,"column":1},"end":{"line":558,"column":1}},"children":[{"type":"text","value":"Floor division","position":{"start":{"line":558,"column":1},"end":{"line":558,"column":1}},"key":"q5X4GiEOBp"}],"key":"AEQlams8rl"},{"type":"tableCell","position":{"start":{"line":558,"column":1},"end":{"line":558,"column":1}},"children":[{"type":"inlineCode","value":"17 // 3","position":{"start":{"line":558,"column":1},"end":{"line":558,"column":1}},"key":"Myxscm70pO"},{"type":"text","value":" → ","position":{"start":{"line":558,"column":1},"end":{"line":558,"column":1}},"key":"g806LtdIuy"},{"type":"inlineCode","value":"5","position":{"start":{"line":558,"column":1},"end":{"line":558,"column":1}},"key":"UJd48EXD6B"}],"key":"ypCiNwnchO"}],"key":"J2mpWN0Uv9"},{"type":"tableRow","position":{"start":{"line":559,"column":1},"end":{"line":559,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":559,"column":1},"end":{"line":559,"column":1}},"children":[{"type":"inlineCode","value":"%","position":{"start":{"line":559,"column":1},"end":{"line":559,"column":1}},"key":"J3w5nKb1ud"}],"key":"wdehsC30bY"},{"type":"tableCell","position":{"start":{"line":559,"column":1},"end":{"line":559,"column":1}},"children":[{"type":"text","value":"Modulo (remainder)","position":{"start":{"line":559,"column":1},"end":{"line":559,"column":1}},"key":"t1QzuXHlPy"}],"key":"x2mf7YHEEi"},{"type":"tableCell","position":{"start":{"line":559,"column":1},"end":{"line":559,"column":1}},"children":[{"type":"inlineCode","value":"17 % 3","position":{"start":{"line":559,"column":1},"end":{"line":559,"column":1}},"key":"LDiOxyNp9u"},{"type":"text","value":" → ","position":{"start":{"line":559,"column":1},"end":{"line":559,"column":1}},"key":"oGqGekt4cU"},{"type":"inlineCode","value":"2","position":{"start":{"line":559,"column":1},"end":{"line":559,"column":1}},"key":"Vn4cCCt2Zi"}],"key":"cYNazmoFL7"}],"key":"dt3ry2Wsln"},{"type":"tableRow","position":{"start":{"line":560,"column":1},"end":{"line":560,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":560,"column":1},"end":{"line":560,"column":1}},"children":[{"type":"inlineCode","value":"abs()","position":{"start":{"line":560,"column":1},"end":{"line":560,"column":1}},"key":"dWaT6hG74n"}],"key":"m5YsiAE4TA"},{"type":"tableCell","position":{"start":{"line":560,"column":1},"end":{"line":560,"column":1}},"children":[{"type":"text","value":"Absolute value","position":{"start":{"line":560,"column":1},"end":{"line":560,"column":1}},"key":"y8prGyFqxc"}],"key":"CBgIgBB6Gh"},{"type":"tableCell","position":{"start":{"line":560,"column":1},"end":{"line":560,"column":1}},"children":[{"type":"inlineCode","value":"abs(-3.14)","position":{"start":{"line":560,"column":1},"end":{"line":560,"column":1}},"key":"Tw1qGWrYqG"},{"type":"text","value":" → ","position":{"start":{"line":560,"column":1},"end":{"line":560,"column":1}},"key":"XzYv4Gthjf"},{"type":"inlineCode","value":"3.14","position":{"start":{"line":560,"column":1},"end":{"line":560,"column":1}},"key":"BZSIZaarpd"}],"key":"hpBSRQfN4t"}],"key":"yIVwhNqMaC"},{"type":"tableRow","position":{"start":{"line":561,"column":1},"end":{"line":561,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":561,"column":1},"end":{"line":561,"column":1}},"children":[{"type":"inlineCode","value":"round()","position":{"start":{"line":561,"column":1},"end":{"line":561,"column":1}},"key":"Mb8ntALdYS"}],"key":"W8v2AM2I0T"},{"type":"tableCell","position":{"start":{"line":561,"column":1},"end":{"line":561,"column":1}},"children":[{"type":"text","value":"Round to n decimals","position":{"start":{"line":561,"column":1},"end":{"line":561,"column":1}},"key":"hmgZkaEaYn"}],"key":"OqI0kQTuBx"},{"type":"tableCell","position":{"start":{"line":561,"column":1},"end":{"line":561,"column":1}},"children":[{"type":"inlineCode","value":"round(3.14159, 2)","position":{"start":{"line":561,"column":1},"end":{"line":561,"column":1}},"key":"UKoE8ILuMC"},{"type":"text","value":" → ","position":{"start":{"line":561,"column":1},"end":{"line":561,"column":1}},"key":"dSbQiWbdKS"},{"type":"inlineCode","value":"3.14","position":{"start":{"line":561,"column":1},"end":{"line":561,"column":1}},"key":"XDTFBSqfWu"}],"key":"Qw6DdpoNMU"}],"key":"jvPWjYuxDd"},{"type":"tableRow","position":{"start":{"line":562,"column":1},"end":{"line":562,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":562,"column":1},"end":{"line":562,"column":1}},"children":[{"type":"inlineCode","value":"int()","position":{"start":{"line":562,"column":1},"end":{"line":562,"column":1}},"key":"EoSLvH30Ja"}],"key":"Xu1b8FB8PH"},{"type":"tableCell","position":{"start":{"line":562,"column":1},"end":{"line":562,"column":1}},"children":[{"type":"text","value":"Convert to integer","position":{"start":{"line":562,"column":1},"end":{"line":562,"column":1}},"key":"u9ZRWusVQf"}],"key":"umAo1vsOZE"},{"type":"tableCell","position":{"start":{"line":562,"column":1},"end":{"line":562,"column":1}},"children":[{"type":"inlineCode","value":"int(3.14)","position":{"start":{"line":562,"column":1},"end":{"line":562,"column":1}},"key":"VflNaiVJMk"},{"type":"text","value":" → ","position":{"start":{"line":562,"column":1},"end":{"line":562,"column":1}},"key":"B6tkAGExfq"},{"type":"inlineCode","value":"3","position":{"start":{"line":562,"column":1},"end":{"line":562,"column":1}},"key":"XzKVrUAA3R"}],"key":"n0wDxraNFh"}],"key":"PTaNwIBQhy"},{"type":"tableRow","position":{"start":{"line":563,"column":1},"end":{"line":563,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":563,"column":1},"end":{"line":563,"column":1}},"children":[{"type":"inlineCode","value":"float()","position":{"start":{"line":563,"column":1},"end":{"line":563,"column":1}},"key":"EspUTsD5yL"}],"key":"umcbGNxpre"},{"type":"tableCell","position":{"start":{"line":563,"column":1},"end":{"line":563,"column":1}},"children":[{"type":"text","value":"Convert to float","position":{"start":{"line":563,"column":1},"end":{"line":563,"column":1}},"key":"sGjxiEOUcX"}],"key":"R2p4ZHrp57"},{"type":"tableCell","position":{"start":{"line":563,"column":1},"end":{"line":563,"column":1}},"children":[{"type":"inlineCode","value":"float(\"1.23e-4\")","position":{"start":{"line":563,"column":1},"end":{"line":563,"column":1}},"key":"M998PIxX3c"},{"type":"text","value":" → ","position":{"start":{"line":563,"column":1},"end":{"line":563,"column":1}},"key":"KoOJGVJFd8"},{"type":"inlineCode","value":"0.000123","position":{"start":{"line":563,"column":1},"end":{"line":563,"column":1}},"key":"istTDHE3uP"}],"key":"mYyaAxJ0Vo"}],"key":"daOIZOrAMR"},{"type":"tableRow","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"children":[{"type":"inlineCode","value":"complex()","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"key":"U7Qm6piL6o"}],"key":"VpHMZVZuky"},{"type":"tableCell","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"children":[{"type":"text","value":"Create complex number","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"key":"awIwIXMxng"}],"key":"G7cLbcRJbh"},{"type":"tableCell","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"children":[{"type":"inlineCode","value":"complex(3, 4)","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"key":"QVcyHbryAw"},{"type":"text","value":" → ","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"key":"J5Gx4QZtIw"},{"type":"inlineCode","value":"(3+4j)","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"key":"Zft34ftC3W"}],"key":"BlLAo0eR6D"}],"key":"VbYoSjzaLl"},{"type":"tableRow","position":{"start":{"line":565,"column":1},"end":{"line":565,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":565,"column":1},"end":{"line":565,"column":1}},"children":[{"type":"inlineCode","value":"math.isclose()","position":{"start":{"line":565,"column":1},"end":{"line":565,"column":1}},"key":"lUteJQE2mC"}],"key":"IREDiGG11m"},{"type":"tableCell","position":{"start":{"line":565,"column":1},"end":{"line":565,"column":1}},"children":[{"type":"text","value":"Safe float comparison","position":{"start":{"line":565,"column":1},"end":{"line":565,"column":1}},"key":"L33P9GBvJd"}],"key":"PXjNmeeq0E"},{"type":"tableCell","position":{"start":{"line":565,"column":1},"end":{"line":565,"column":1}},"children":[{"type":"inlineCode","value":"math.isclose(0.1+0.2, 0.3)","position":{"start":{"line":565,"column":1},"end":{"line":565,"column":1}},"key":"f9CmAOvqBc"}],"key":"ZRuosUtnJW"}],"key":"ThjCMwilB7"},{"type":"tableRow","position":{"start":{"line":566,"column":1},"end":{"line":566,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":566,"column":1},"end":{"line":566,"column":1}},"children":[{"type":"inlineCode","value":"math.isfinite()","position":{"start":{"line":566,"column":1},"end":{"line":566,"column":1}},"key":"oJgGeqXfE8"}],"key":"km694unhmo"},{"type":"tableCell","position":{"start":{"line":566,"column":1},"end":{"line":566,"column":1}},"children":[{"type":"text","value":"Check not inf/nan","position":{"start":{"line":566,"column":1},"end":{"line":566,"column":1}},"key":"Mh7DM2ylDv"}],"key":"R7GfrKBLD1"},{"type":"tableCell","position":{"start":{"line":566,"column":1},"end":{"line":566,"column":1}},"children":[{"type":"inlineCode","value":"math.isfinite(result)","position":{"start":{"line":566,"column":1},"end":{"line":566,"column":1}},"key":"QkIJjJ3Wlw"}],"key":"oji6tIH9bJ"}],"key":"cRerMigoVE"},{"type":"tableRow","position":{"start":{"line":567,"column":1},"end":{"line":567,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":567,"column":1},"end":{"line":567,"column":1}},"children":[{"type":"inlineCode","value":"math.isnan()","position":{"start":{"line":567,"column":1},"end":{"line":567,"column":1}},"key":"pFntvI01ei"}],"key":"wYNKZGZdvy"},{"type":"tableCell","position":{"start":{"line":567,"column":1},"end":{"line":567,"column":1}},"children":[{"type":"text","value":"Check for NaN","position":{"start":{"line":567,"column":1},"end":{"line":567,"column":1}},"key":"oGGhqpv9mV"}],"key":"NhHc8kZGVw"},{"type":"tableCell","position":{"start":{"line":567,"column":1},"end":{"line":567,"column":1}},"children":[{"type":"inlineCode","value":"math.isnan(value)","position":{"start":{"line":567,"column":1},"end":{"line":567,"column":1}},"key":"kLPr8eVQ21"}],"key":"N2UR67lRCR"}],"key":"iHeAipn9Ru"},{"type":"tableRow","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"children":[{"type":"inlineCode","value":"math.isinf()","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"key":"WaEdskZFfl"}],"key":"NN8Ac5ngDZ"},{"type":"tableCell","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"children":[{"type":"text","value":"Check for infinity","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"key":"wBLyGruHez"}],"key":"UyJYMw1lHL"},{"type":"tableCell","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"children":[{"type":"inlineCode","value":"math.isinf(value)","position":{"start":{"line":568,"column":1},"end":{"line":568,"column":1}},"key":"qKr9jGqafe"}],"key":"ik5ZquYKrX"}],"key":"sKK6sXjYnf"},{"type":"tableRow","position":{"start":{"line":569,"column":1},"end":{"line":569,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":569,"column":1},"end":{"line":569,"column":1}},"children":[{"type":"inlineCode","value":"math.pi","position":{"start":{"line":569,"column":1},"end":{"line":569,"column":1}},"key":"qyMIslshIG"}],"key":"x9FLNC7SB1"},{"type":"tableCell","position":{"start":{"line":569,"column":1},"end":{"line":569,"column":1}},"children":[{"type":"text","value":"π constant","position":{"start":{"line":569,"column":1},"end":{"line":569,"column":1}},"key":"TPqAw9YNXV"}],"key":"xHkQIClyg8"},{"type":"tableCell","position":{"start":{"line":569,"column":1},"end":{"line":569,"column":1}},"children":[{"type":"inlineCode","value":"3.141592653589793","position":{"start":{"line":569,"column":1},"end":{"line":569,"column":1}},"key":"rfJKWmXC2y"}],"key":"LN2SmQhKeH"}],"key":"k0bRvyVbid"},{"type":"tableRow","position":{"start":{"line":570,"column":1},"end":{"line":570,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":570,"column":1},"end":{"line":570,"column":1}},"children":[{"type":"inlineCode","value":"math.e","position":{"start":{"line":570,"column":1},"end":{"line":570,"column":1}},"key":"cz1c7T6VNs"}],"key":"q3y989RZBE"},{"type":"tableCell","position":{"start":{"line":570,"column":1},"end":{"line":570,"column":1}},"children":[{"type":"text","value":"e constant","position":{"start":{"line":570,"column":1},"end":{"line":570,"column":1}},"key":"aAtPvKTivV"}],"key":"JRmIRRYuER"},{"type":"tableCell","position":{"start":{"line":570,"column":1},"end":{"line":570,"column":1}},"children":[{"type":"inlineCode","value":"2.718281828459045","position":{"start":{"line":570,"column":1},"end":{"line":570,"column":1}},"key":"mpTPXDDlAN"}],"key":"iyrh0f8vKb"}],"key":"yfkkvjEZnz"},{"type":"tableRow","position":{"start":{"line":571,"column":1},"end":{"line":571,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":571,"column":1},"end":{"line":571,"column":1}},"children":[{"type":"inlineCode","value":"math.sin()","position":{"start":{"line":571,"column":1},"end":{"line":571,"column":1}},"key":"OuT34CmZVu"}],"key":"qiLFSPjj58"},{"type":"tableCell","position":{"start":{"line":571,"column":1},"end":{"line":571,"column":1}},"children":[{"type":"text","value":"Sine (radians)","position":{"start":{"line":571,"column":1},"end":{"line":571,"column":1}},"key":"tpJpmamivh"}],"key":"KlgfNvANXa"},{"type":"tableCell","position":{"start":{"line":571,"column":1},"end":{"line":571,"column":1}},"children":[{"type":"inlineCode","value":"math.sin(math.pi/2)","position":{"start":{"line":571,"column":1},"end":{"line":571,"column":1}},"key":"woiRdpqkJB"},{"type":"text","value":" → ","position":{"start":{"line":571,"column":1},"end":{"line":571,"column":1}},"key":"aYLh93DjKO"},{"type":"inlineCode","value":"1.0","position":{"start":{"line":571,"column":1},"end":{"line":571,"column":1}},"key":"MCkZG9PQ8Q"}],"key":"nY9pJtrHrK"}],"key":"iOJUovh4S0"},{"type":"tableRow","position":{"start":{"line":572,"column":1},"end":{"line":572,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":572,"column":1},"end":{"line":572,"column":1}},"children":[{"type":"inlineCode","value":"math.cos()","position":{"start":{"line":572,"column":1},"end":{"line":572,"column":1}},"key":"KRuLQREJ5M"}],"key":"je5BE9Gt9s"},{"type":"tableCell","position":{"start":{"line":572,"column":1},"end":{"line":572,"column":1}},"children":[{"type":"text","value":"Cosine (radians)","position":{"start":{"line":572,"column":1},"end":{"line":572,"column":1}},"key":"vBNBD2U3ti"}],"key":"tVYhuVmOCO"},{"type":"tableCell","position":{"start":{"line":572,"column":1},"end":{"line":572,"column":1}},"children":[{"type":"inlineCode","value":"math.cos(0)","position":{"start":{"line":572,"column":1},"end":{"line":572,"column":1}},"key":"Yzy5DXizbL"},{"type":"text","value":" → ","position":{"start":{"line":572,"column":1},"end":{"line":572,"column":1}},"key":"RU3wi1jwJa"},{"type":"inlineCode","value":"1.0","position":{"start":{"line":572,"column":1},"end":{"line":572,"column":1}},"key":"W0IXAx3W5h"}],"key":"rypaCfmdxr"}],"key":"u07c5AbfvX"},{"type":"tableRow","position":{"start":{"line":573,"column":1},"end":{"line":573,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":573,"column":1},"end":{"line":573,"column":1}},"children":[{"type":"inlineCode","value":"math.log()","position":{"start":{"line":573,"column":1},"end":{"line":573,"column":1}},"key":"qzI284it2m"}],"key":"vfMrLwbFo5"},{"type":"tableCell","position":{"start":{"line":573,"column":1},"end":{"line":573,"column":1}},"children":[{"type":"text","value":"Natural logarithm","position":{"start":{"line":573,"column":1},"end":{"line":573,"column":1}},"key":"c1gBPtZrJa"}],"key":"BL2RHbU5rY"},{"type":"tableCell","position":{"start":{"line":573,"column":1},"end":{"line":573,"column":1}},"children":[{"type":"inlineCode","value":"math.log(math.e)","position":{"start":{"line":573,"column":1},"end":{"line":573,"column":1}},"key":"OEJ9zHg2Fg"},{"type":"text","value":" → ","position":{"start":{"line":573,"column":1},"end":{"line":573,"column":1}},"key":"B0X0W9VRc9"},{"type":"inlineCode","value":"1.0","position":{"start":{"line":573,"column":1},"end":{"line":573,"column":1}},"key":"NDyM10ARSB"}],"key":"EVKIQAKB0c"}],"key":"Cgd1ACCyxP"},{"type":"tableRow","position":{"start":{"line":574,"column":1},"end":{"line":574,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":574,"column":1},"end":{"line":574,"column":1}},"children":[{"type":"inlineCode","value":"math.log10()","position":{"start":{"line":574,"column":1},"end":{"line":574,"column":1}},"key":"fQ3G2XlIvw"}],"key":"z66fvVtZvW"},{"type":"tableCell","position":{"start":{"line":574,"column":1},"end":{"line":574,"column":1}},"children":[{"type":"text","value":"Base-10 logarithm","position":{"start":{"line":574,"column":1},"end":{"line":574,"column":1}},"key":"ADjWJXUhEW"}],"key":"cEfPg6eOHt"},{"type":"tableCell","position":{"start":{"line":574,"column":1},"end":{"line":574,"column":1}},"children":[{"type":"inlineCode","value":"math.log10(1000)","position":{"start":{"line":574,"column":1},"end":{"line":574,"column":1}},"key":"hHYnkw2KEQ"},{"type":"text","value":" → ","position":{"start":{"line":574,"column":1},"end":{"line":574,"column":1}},"key":"gbgIdUZCIi"},{"type":"inlineCode","value":"3.0","position":{"start":{"line":574,"column":1},"end":{"line":574,"column":1}},"key":"MKGaqmig92"}],"key":"X56DriDLFd"}],"key":"gfAsLRsOsk"},{"type":"tableRow","position":{"start":{"line":575,"column":1},"end":{"line":575,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":575,"column":1},"end":{"line":575,"column":1}},"children":[{"type":"inlineCode","value":"math.sqrt()","position":{"start":{"line":575,"column":1},"end":{"line":575,"column":1}},"key":"RXzcniuznH"}],"key":"txjEBU6gIR"},{"type":"tableCell","position":{"start":{"line":575,"column":1},"end":{"line":575,"column":1}},"children":[{"type":"text","value":"Square root","position":{"start":{"line":575,"column":1},"end":{"line":575,"column":1}},"key":"CLxTUwmSTi"}],"key":"DGdCWxDjSq"},{"type":"tableCell","position":{"start":{"line":575,"column":1},"end":{"line":575,"column":1}},"children":[{"type":"inlineCode","value":"math.sqrt(2)","position":{"start":{"line":575,"column":1},"end":{"line":575,"column":1}},"key":"Dgj1bgef01"},{"type":"text","value":" → ","position":{"start":{"line":575,"column":1},"end":{"line":575,"column":1}},"key":"B1I4hqMHSu"},{"type":"inlineCode","value":"1.414...","position":{"start":{"line":575,"column":1},"end":{"line":575,"column":1}},"key":"psjBlDqWba"}],"key":"ZfrApHkpse"}],"key":"xjXCM5yR2L"},{"type":"tableRow","position":{"start":{"line":576,"column":1},"end":{"line":576,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":576,"column":1},"end":{"line":576,"column":1}},"children":[{"type":"inlineCode","value":"math.exp()","position":{"start":{"line":576,"column":1},"end":{"line":576,"column":1}},"key":"DedxMWUdhj"}],"key":"HqYGzwxf3D"},{"type":"tableCell","position":{"start":{"line":576,"column":1},"end":{"line":576,"column":1}},"children":[{"type":"text","value":"Exponential","position":{"start":{"line":576,"column":1},"end":{"line":576,"column":1}},"key":"aCEZgvMwwl"}],"key":"Gq2aIp3Z0m"},{"type":"tableCell","position":{"start":{"line":576,"column":1},"end":{"line":576,"column":1}},"children":[{"type":"inlineCode","value":"math.exp(1)","position":{"start":{"line":576,"column":1},"end":{"line":576,"column":1}},"key":"EE8ZhIseOF"},{"type":"text","value":" → ","position":{"start":{"line":576,"column":1},"end":{"line":576,"column":1}},"key":"T2VCEE3GAX"},{"type":"inlineCode","value":"2.718...","position":{"start":{"line":576,"column":1},"end":{"line":576,"column":1}},"key":"UpPziSejnz"}],"key":"qEcRLzVhB7"}],"key":"vOUW8YlZPV"},{"type":"tableRow","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"children":[{"type":"inlineCode","value":"cmath.phase()","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"key":"NMWpLhZT7p"}],"key":"cAWni7oJRL"},{"type":"tableCell","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"children":[{"type":"text","value":"Complex phase","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"key":"cDnUYgA6j4"}],"key":"GRSDd9sFtB"},{"type":"tableCell","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"children":[{"type":"inlineCode","value":"cmath.phase(1+1j)","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"key":"yP1bpZetsq"},{"type":"text","value":" → ","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"key":"tCpGJ2POre"},{"type":"inlineCode","value":"0.785...","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"key":"Ax1YyknKQJ"}],"key":"uXChMjB71l"}],"key":"PYn112B8Jp"},{"type":"tableRow","position":{"start":{"line":578,"column":1},"end":{"line":578,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":578,"column":1},"end":{"line":578,"column":1}},"children":[{"type":"inlineCode","value":"sys.float_info","position":{"start":{"line":578,"column":1},"end":{"line":578,"column":1}},"key":"mXXjJXgOxl"}],"key":"dsIitRAP8w"},{"type":"tableCell","position":{"start":{"line":578,"column":1},"end":{"line":578,"column":1}},"children":[{"type":"text","value":"Float limits","position":{"start":{"line":578,"column":1},"end":{"line":578,"column":1}},"key":"Wo0TFQzkRL"}],"key":"NfAoBq5q5W"},{"type":"tableCell","position":{"start":{"line":578,"column":1},"end":{"line":578,"column":1}},"children":[{"type":"inlineCode","value":".max","position":{"start":{"line":578,"column":1},"end":{"line":578,"column":1}},"key":"wHolrQUwGl"},{"type":"text","value":", ","position":{"start":{"line":578,"column":1},"end":{"line":578,"column":1}},"key":"X8eGiKU2CU"},{"type":"inlineCode","value":".min","position":{"start":{"line":578,"column":1},"end":{"line":578,"column":1}},"key":"ezIAyZtejO"},{"type":"text","value":", ","position":{"start":{"line":578,"column":1},"end":{"line":578,"column":1}},"key":"Cm4yz0yHJo"},{"type":"inlineCode","value":".epsilon","position":{"start":{"line":578,"column":1},"end":{"line":578,"column":1}},"key":"x8efK1wVm8"}],"key":"VdbjFZoZiF"}],"key":"W2WJygqQIl"},{"type":"tableRow","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"children":[{"type":"inlineCode","value":"f\"{x:.2f}\"","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"key":"CvIM42ibv2"}],"key":"qGoiBS2QWL"},{"type":"tableCell","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"children":[{"type":"text","value":"Format 2 decimals","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"key":"X4Y9Iy7mlN"}],"key":"FpXgXCYxw0"},{"type":"tableCell","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"children":[{"type":"inlineCode","value":"f\"{3.14159:.2f}\"","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"key":"c4IGhkBUah"},{"type":"text","value":" → ","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"key":"yC29QgtfP5"},{"type":"inlineCode","value":"\"3.14\"","position":{"start":{"line":579,"column":1},"end":{"line":579,"column":1}},"key":"N2BnwvTwSg"}],"key":"wfvlyZpeeZ"}],"key":"OxT0N7amhp"},{"type":"tableRow","position":{"start":{"line":580,"column":1},"end":{"line":580,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":580,"column":1},"end":{"line":580,"column":1}},"children":[{"type":"inlineCode","value":"f\"{x:.2e}\"","position":{"start":{"line":580,"column":1},"end":{"line":580,"column":1}},"key":"QyGk5EYPM2"}],"key":"ORIdkGwZTp"},{"type":"tableCell","position":{"start":{"line":580,"column":1},"end":{"line":580,"column":1}},"children":[{"type":"text","value":"Scientific notation","position":{"start":{"line":580,"column":1},"end":{"line":580,"column":1}},"key":"ejpuujRnUB"}],"key":"ttRSKJTp14"},{"type":"tableCell","position":{"start":{"line":580,"column":1},"end":{"line":580,"column":1}},"children":[{"type":"inlineCode","value":"f\"{1234:.2e}\"","position":{"start":{"line":580,"column":1},"end":{"line":580,"column":1}},"key":"Ov4WtXduVO"},{"type":"text","value":" → ","position":{"start":{"line":580,"column":1},"end":{"line":580,"column":1}},"key":"tqzfPPGLDL"},{"type":"inlineCode","value":"\"1.23e+03\"","position":{"start":{"line":580,"column":1},"end":{"line":580,"column":1}},"key":"llaLv0dj1M"}],"key":"oH16gbLOc8"}],"key":"cNnawIftSs"},{"type":"tableRow","position":{"start":{"line":581,"column":1},"end":{"line":581,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":581,"column":1},"end":{"line":581,"column":1}},"children":[{"type":"inlineCode","value":"f\"{x:10.2f}\"","position":{"start":{"line":581,"column":1},"end":{"line":581,"column":1}},"key":"COHCaCpG3b"}],"key":"eT9OQuct4L"},{"type":"tableCell","position":{"start":{"line":581,"column":1},"end":{"line":581,"column":1}},"children":[{"type":"text","value":"Width and decimals","position":{"start":{"line":581,"column":1},"end":{"line":581,"column":1}},"key":"mHkcUDClAK"}],"key":"kG2lHLtGwR"},{"type":"tableCell","position":{"start":{"line":581,"column":1},"end":{"line":581,"column":1}},"children":[{"type":"inlineCode","value":"f\"{3.14:10.2f}\"","position":{"start":{"line":581,"column":1},"end":{"line":581,"column":1}},"key":"LjykvBaj5v"},{"type":"text","value":" → ","position":{"start":{"line":581,"column":1},"end":{"line":581,"column":1}},"key":"xGjAU8hxwL"},{"type":"inlineCode","value":"\"      3.14\"","position":{"start":{"line":581,"column":1},"end":{"line":581,"column":1}},"key":"QlrbuYlCtl"}],"key":"jmAtKVidZl"}],"key":"ZGcHcv73jK"}],"key":"IMVVVTdYtJ"},{"type":"heading","depth":2,"position":{"start":{"line":583,"column":1},"end":{"line":583,"column":1}},"children":[{"type":"text","value":"Next Chapter Preview","position":{"start":{"line":583,"column":1},"end":{"line":583,"column":1}},"key":"UkLIR0FyNd"}],"identifier":"next-chapter-preview","label":"Next Chapter Preview","html_id":"next-chapter-preview","implicit":true,"key":"wAaggxUH8C"},{"type":"paragraph","position":{"start":{"line":585,"column":1},"end":{"line":585,"column":1}},"children":[{"type":"text","value":"With a solid understanding of Python’s type system and numerical precision, Chapter 3 will introduce control flow — the if statements and loops that make your code dynamic. You’ll learn to write pseudocode first, implement algorithms systematically, and handle the special challenges of floating-point comparisons in conditional statements. The numerical foundations from this chapter will be essential when you’re checking convergence criteria or detecting numerical instabilities in your simulations.","position":{"start":{"line":585,"column":1},"end":{"line":585,"column":1}},"key":"quBo1rKDQS"}],"key":"kECMiNWiRt"}],"key":"giXOeTJbmj"}],"key":"yfgpHFUjNV"},"references":{"cite":{"order":[],"data":{}}}}