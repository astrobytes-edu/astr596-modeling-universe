{"version":2,"kind":"Article","sha256":"cf9bc623ba1ee60f721d9afe825de4a5589257de04d382873c0ff4175203dd2c","slug":"chapter2-control-flow","location":"/04-computational-methods/python-fundamentals-v1/python-fundamentals/chapter2-control-flow.md","dependencies":[],"frontmatter":{"title":"Chapter 2: Control Flow & Logic - Teaching Computers to Think","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Anna Rosen","given":"Anna","family":"Rosen"},"name":"Anna Rosen","orcid":"0000-0003-4423-0660","email":"alrosen@sdsu.edu","affiliations":["San Diego State University"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/astrobytes-edu/astr596-modeling-universe","subject":"Modeling the Universe","venue":{"title":"ASTR 596 - Fall 2025","url":"https://www.anna-rosen.com"},"keywords":["computational astrophysics","python","numerical methods","machine learning","monte carlo","neural networks","radiative transfer","bayesian inference","JAX"],"affiliations":[{"id":"San Diego State University","name":"San Diego State University"}],"numbering":{"title":{"offset":3}},"edit_url":"https://github.com/astrobytes-edu/astr596-modeling-universe/blob/main/04-computational-methods/python-fundamentals-v1/python-fundamentals/chapter2-control-flow.md","exports":[{"format":"md","filename":"chapter2-control-flow.md","url":"/chapter2-control-flo-630a39e9231b4f5ba0da08753dc8efdb.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"“Logic is the beginning of wisdom, not the end.” - Spock","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VhvTs6Qhji"}],"key":"EZaktdoZFt"}],"key":"F6yA5gbguB"},{"type":"heading","depth":2,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Table of Contents","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"q8tmrnpALj"}],"identifier":"table-of-contents","label":"Table of Contents","html_id":"table-of-contents","implicit":true,"key":"FSnkyWhhKO"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Learning Objectives","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xpA2sfrxHT"}],"identifier":"learning-objectives","label":"learning-objectives","kind":"heading","template":"{name}","resolved":true,"html_id":"learning-objectives","remote":true,"url":"/python-environment-v3","dataUrl":"/python-environment-v3.json","key":"UFtP6dleuQ"}],"key":"RNVS2GLQPB"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Why Logic Matters","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"zi7RdHrloI"}],"identifier":"why-logic-matters","label":"why-logic-matters","kind":"heading","template":"{name}","resolved":true,"html_id":"why-logic-matters","key":"KFwZdVA2nf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"From Philosophy to Circuits","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"nlr7F0ET23"}],"identifier":"from-philosophy-to-circuits","label":"from-philosophy-to-circuits","kind":"heading","template":"{name}","resolved":true,"html_id":"from-philosophy-to-circuits","key":"OhHepmyMD5"}],"key":"wbDk0FeTBC"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Boolean Algebra: The Mathematics of Decision","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"XHv464UX6K"}],"identifier":"boolean-algebra-the-mathematics-of-decision","label":"boolean-algebra-the-mathematics-of-decision","kind":"heading","template":"{name}","resolved":true,"html_id":"boolean-algebra-the-mathematics-of-decision","key":"xFQPHiQGOJ"}],"key":"vQvMLaCkTy"}],"key":"ketEyC3qnB"}],"key":"qR8QnuGv1C"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Truth and Conditions","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"YzyWcgxcoJ"}],"identifier":"truth-and-conditions","label":"truth-and-conditions","kind":"heading","template":"{name}","resolved":true,"html_id":"truth-and-conditions","key":"PxkP0XxzRV"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":12,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Comparison Operators","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"zkM38xVKZ2"}],"identifier":"comparison-operators","label":"comparison-operators","kind":"heading","template":"{name}","resolved":true,"html_id":"comparison-operators","key":"OPa0P2qpFt"}],"key":"GNSZLRoyBF"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"link","url":"#boolean-values-and-truthiness","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Boolean Values and Truthiness","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"GCFIcA7DPl"}],"urlSource":"#boolean-values-and-truthiness","key":"aRHpmQOFzZ"}],"key":"KNZnV5VV3w"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"link","url":"#logical-operators","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Logical Operators","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"bJW0dW5ygt"}],"urlSource":"#logical-operators","key":"jWGed9WTbT"}],"key":"Csn0uiXSNx"}],"key":"AzhEnr3PG0"}],"key":"el61REEam9"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"link","url":"#if-then-logic-making-decisions","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"If-Then Logic: Making Decisions","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"KvWj8fjKrd"}],"urlSource":"#if-then-logic-making-decisions","key":"MhKcAS01Vj"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":16,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"link","url":"#basic-if-statements","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Basic If Statements","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"AK9MF9SUgG"}],"urlSource":"#basic-if-statements","key":"HLzhgLCNpg"}],"key":"lXtH4D7jKd"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"If-Elif-Else Chains","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"Y8X3eEGkgi"}],"identifier":"if-elif-else-chains","label":"if-elif-else-chains","kind":"heading","template":"{name}","resolved":true,"html_id":"if-elif-else-chains","key":"nRXoHUai1a"}],"key":"HLaHQkCRQG"},{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Guard Clauses vs Nested Ifs","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"XFTwrP3aN6"}],"identifier":"guard-clauses-vs-nested-ifs","label":"guard-clauses-vs-nested-ifs","kind":"heading","template":"{name}","resolved":true,"html_id":"guard-clauses-vs-nested-ifs","key":"hfReT1P8Yo"}],"key":"gy2T88mQrj"}],"key":"kHbSZkNjI4"}],"key":"mI9WELG5zN"},{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Loops: Repetition with Purpose","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"mkHw2ZuCkz"}],"identifier":"loops-repetition-with-purpose","label":"loops-repetition-with-purpose","kind":"heading","template":"{name}","resolved":true,"html_id":"loops-repetition-with-purpose","key":"d6V7VXTJFT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":20,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"For Loops - When You Know How Many","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"FbpI4apPCd"}],"identifier":"for-loops-when-you-know-how-many","label":"for-loops-when-you-know-how-many","kind":"heading","template":"{name}","resolved":true,"html_id":"for-loops-when-you-know-how-many","key":"hD1VCiXgSI"}],"key":"ENWuLLyBBt"},{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"While Loops - Until a Condition","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"O0Z8siFb0P"}],"identifier":"while-loops-until-a-condition","label":"while-loops-until-a-condition","kind":"heading","template":"{name}","resolved":true,"html_id":"while-loops-until-a-condition","key":"LeIBz4xEyK"}],"key":"h6LTLlLnKx"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"link","url":"#loop-control-break-continue-else","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Loop Control: Break, Continue, Else","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Eg2jYXD89L"}],"urlSource":"#loop-control-break-continue-else","key":"Ypq99s76Ji"}],"key":"hJq5x5uhpk"}],"key":"DqP45zJiHx"}],"key":"OalylsCS3A"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Comprehensions: Elegant Iteration","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"M8ZleY2eg9"}],"identifier":"comprehensions-elegant-iteration","label":"comprehensions-elegant-iteration","kind":"heading","template":"{name}","resolved":true,"html_id":"comprehensions-elegant-iteration","key":"L1JXLmkor9"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":24,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"List Comprehensions","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"LZTD7MKuEV"}],"identifier":"list-comprehensions","label":"list-comprehensions","kind":"heading","template":"{name}","resolved":true,"html_id":"list-comprehensions","key":"yXaKF6zAfL"}],"key":"IXxvwJwv5h"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"When to Use Comprehensions","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"KL3LiYe7Cc"}],"identifier":"when-to-use-comprehensions","label":"when-to-use-comprehensions","kind":"heading","template":"{name}","resolved":true,"html_id":"when-to-use-comprehensions","key":"hDA9niGCG0"}],"key":"SpozpVdChp"}],"key":"cB8w84knNZ"}],"key":"pYdbn69FxC"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Common Patterns in Scientific Computing","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"wiM5qxpoDA"}],"identifier":"common-patterns-in-scientific-computing","label":"common-patterns-in-scientific-computing","kind":"heading","template":"{name}","resolved":true,"html_id":"common-patterns-in-scientific-computing","key":"erdeDNVkv8"}],"key":"qFC0Sk9aFN"},{"type":"listItem","spread":true,"position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"R36DV71RXz"}],"identifier":"exercises","label":"exercises","kind":"heading","template":"{name}","resolved":true,"html_id":"exercises","remote":true,"url":"/jax-advanced-continued","dataUrl":"/jax-advanced-continued.json","key":"k3aoyMPG0C"}],"key":"jixD93V9Gw"},{"type":"listItem","spread":true,"position":{"start":{"line":28,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Key Takeaways","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"ENqiwPUkHs"}],"identifier":"key-takeaways","label":"key-takeaways","kind":"heading","template":"{name}","resolved":true,"html_id":"key-takeaways","remote":true,"url":"/python-environment-v3","dataUrl":"/python-environment-v3.json","key":"CNrL7Q18eP"}],"key":"AgBu2nTwQG"}],"key":"G8aTVvxpzv"},{"type":"thematicBreak","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"lZuD8DzlxR"},{"type":"heading","depth":2,"position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Learning Objectives","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"Oh43dI5hbm"}],"identifier":"learning-objectives","label":"Learning Objectives","html_id":"learning-objectives","implicit":true,"key":"tEqWdAZbcg"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"By the end of this chapter you will:","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"VQl9S98YVE"}],"key":"oZa3bwBh10"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":36,"column":1},"end":{"line":41,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"Understand Boolean logic and its connection to mathematics and philosophy","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"iyj7hYwiqb"}],"key":"Ah649ruOg0"},{"type":"listItem","spread":true,"position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"Write conditional statements that make intelligent decisions","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"sGOBaDL8gC"}],"key":"nVNcyB0BHr"},{"type":"listItem","spread":true,"position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"Use loops to automate repetitive calculations","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"esI7aeV5Mf"}],"key":"fLA1jW0QiQ"},{"type":"listItem","spread":true,"position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"Recognize when to use different loop patterns","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"LykDV4oHXe"}],"key":"ikOnGhuFQs"},{"type":"listItem","spread":true,"position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"Apply logical thinking to solve astronomical problems","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"F6ZESMb9ld"}],"key":"y9VX4EBy6z"},{"type":"listItem","spread":true,"position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"children":[{"type":"text","value":"Debug logical errors in program flow","position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"key":"lQSWHLYACS"}],"key":"TvaaEc5G16"}],"key":"uS84Z9GhJR"}],"class":"info","key":"KTu4SlcCuc"},{"type":"heading","depth":2,"position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"children":[{"type":"text","value":"Why Logic Matters","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"utGdB9hAvs"}],"identifier":"why-logic-matters","label":"Why Logic Matters","html_id":"why-logic-matters","implicit":true,"key":"xzvvwHAD6o"},{"type":"heading","depth":3,"position":{"start":{"line":46,"column":1},"end":{"line":46,"column":1}},"children":[{"type":"text","value":"From Philosophy to Circuits","position":{"start":{"line":46,"column":1},"end":{"line":46,"column":1}},"key":"MKFAJxoj9a"}],"identifier":"from-philosophy-to-circuits","label":"From Philosophy to Circuits","html_id":"from-philosophy-to-circuits","implicit":true,"key":"ir2ByZ32oZ"},{"type":"paragraph","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"Logic isn’t just programming—it’s the foundation of rational thought, mathematics, and computation itself.","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"YdlQvSBwRY"}],"key":"UPGKJIX8rL"}],"key":"z435oSeyvT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Logic has a rich history\nprint(\"Aristotle (384 BCE): Syllogistic logic - All stars are suns, Proxima is a star, therefore...\")\nprint(\"Boole (1854): Boolean algebra - True/False as 1/0\")\nprint(\"Shannon (1937): Logic gates in circuits\")\nprint(\"Today: Every if-statement in your code\")\n\n# It all reduces to True and False\nprint(f\"\\nIn Python: True = {int(True)}, False = {int(False)}\")\nprint(f\"This is why: True + True + False = {True + True + False}\")","key":"rxJt3TMyFG"},{"type":"output","id":"T8cFzpLVrwYad0Uc5TuvC","data":[],"key":"bi2EcI0fK5"}],"key":"Bo2tQrV0U5"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"The Philosophical Connection","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"IyAzx7yNWk"}],"key":"oxkfdpxdJ5"},{"type":"paragraph","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"strong","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"Logical reasoning forms the basis of the scientific method:","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"jY8imC72OQ"}],"key":"tXTCWYYc92"}],"key":"olpWdGaRkR"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":65,"column":1},"end":{"line":68,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":65,"column":1},"end":{"line":65,"column":1}},"children":[{"type":"strong","position":{"start":{"line":65,"column":1},"end":{"line":65,"column":1}},"children":[{"type":"text","value":"Deduction","position":{"start":{"line":65,"column":1},"end":{"line":65,"column":1}},"key":"VETTeki2RD"}],"key":"qpXwedXo4y"},{"type":"text","value":": If all stars fuse hydrogen (premise) and the Sun is a star (premise), then the Sun fuses hydrogen (conclusion)","position":{"start":{"line":65,"column":1},"end":{"line":65,"column":1}},"key":"N0UmRxWkXg"}],"key":"oXqY54kqU1"},{"type":"listItem","spread":true,"position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"strong","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"text","value":"Induction","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"key":"SUqqMDz6XO"}],"key":"oh9snKIivw"},{"type":"text","value":": We’ve observed 1000 pulsars rotating rapidly, therefore all pulsars probably rotate rapidly","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"key":"bDMNngHDNc"}],"key":"ldI53BoSX4"},{"type":"listItem","spread":true,"position":{"start":{"line":67,"column":1},"end":{"line":68,"column":1}},"children":[{"type":"strong","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"children":[{"type":"text","value":"Abduction","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"key":"NiESHtQHUy"}],"key":"LjBSYAm4QH"},{"type":"text","value":": The CMB has these properties, the best explanation is the Big Bang","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"key":"jMKXPcpCKy"}],"key":"I2n3ryi9B3"}],"key":"ZVzEfpDztr"},{"type":"paragraph","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"children":[{"type":"text","value":"Your code embodies logical reasoning!","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"WEYBZncq2V"}],"key":"ggRnlaAuzL"}],"class":"note","key":"L5dqbA8ESG"},{"type":"heading","depth":3,"position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"Boolean Algebra: The Mathematics of Decision","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"nkRItsSigF"}],"identifier":"boolean-algebra-the-mathematics-of-decision","label":"Boolean Algebra: The Mathematics of Decision","html_id":"boolean-algebra-the-mathematics-of-decision","implicit":true,"key":"G93BHXaUL1"},{"type":"paragraph","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"text","value":"Before computers, George Boole showed that logic follows mathematical rules:","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"waDDfEwj5b"}],"key":"JS91CP8K8j"}],"key":"Uk22NaMDrR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Boolean algebra in action\nA = True\nB = False\n\n# Basic operations (same as logic gates in circuits!)\nprint(f\"NOT A = {not A}\")\nprint(f\"A AND B = {A and B}\")\nprint(f\"A OR B = {A or B}\")\nprint(f\"A XOR B = {A != B}\")  # Exclusive OR\n\n# De Morgan's Laws - fundamental to logic\nprint(\"\\nDe Morgan's Laws:\")\nprint(f\"not (A and B) = (not A) or (not B): {not (A and B) == (not A) or (not B)}\")\nprint(f\"not (A or B) = (not A) and (not B): {not (A or B) == (not A) and (not B)}\")","key":"EAjaPV8RoM"},{"type":"output","id":"1sFVUszJ6PL-BWwVOMr7_","data":[],"key":"UpGXhK5iVD"}],"key":"QnflIIvvuM"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"ccIvqWmaqB"},{"type":"heading","depth":2,"position":{"start":{"line":95,"column":1},"end":{"line":95,"column":1}},"children":[{"type":"text","value":"Truth and Conditions","position":{"start":{"line":95,"column":1},"end":{"line":95,"column":1}},"key":"diPrPdXYKp"}],"identifier":"truth-and-conditions","label":"Truth and Conditions","html_id":"truth-and-conditions","implicit":true,"key":"cGSTGuJPFE"},{"type":"heading","depth":3,"position":{"start":{"line":97,"column":1},"end":{"line":97,"column":1}},"children":[{"type":"text","value":"Comparison Operators","position":{"start":{"line":97,"column":1},"end":{"line":97,"column":1}},"key":"nrWL6bipmg"}],"identifier":"comparison-operators","label":"Comparison Operators","html_id":"comparison-operators","implicit":true,"key":"iSpJuuW3az"},{"type":"paragraph","position":{"start":{"line":99,"column":1},"end":{"line":99,"column":1}},"children":[{"type":"text","value":"Every decision starts with a comparison:","position":{"start":{"line":99,"column":1},"end":{"line":99,"column":1}},"key":"qPXEyhDZaI"}],"key":"bVm1FUtNM9"}],"key":"kecGIldx7a"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Astronomical example: Is this a habitable zone planet?\nstar_luminosity = 0.5  # Solar units\nplanet_distance = 0.7  # AU\ninner_habitable = 0.95 * (star_luminosity ** 0.5)\nouter_habitable = 1.37 * (star_luminosity ** 0.5)\n\nprint(f\"Star luminosity: {star_luminosity} L☉\")\nprint(f\"Planet distance: {planet_distance} AU\")\nprint(f\"Habitable zone: {inner_habitable:.2f} - {outer_habitable:.2f} AU\")\nprint()\n\n# All comparison operators\nprint(f\"Distance > inner edge? {planet_distance > inner_habitable}\")\nprint(f\"Distance < outer edge? {planet_distance < outer_habitable}\")\nprint(f\"Distance >= inner? {planet_distance >= inner_habitable}\")\nprint(f\"Distance <= outer? {planet_distance <= outer_habitable}\")\nprint(f\"Exactly at inner edge? {planet_distance == inner_habitable}\")\nprint(f\"Not at inner edge? {planet_distance != inner_habitable}\")","key":"Upn9ILCAV3"},{"type":"output","id":"kZPaCsuZdZAUY36Ze-WDR","data":[],"key":"O5XqoS2ZVS"}],"key":"IuUMzBXfho"},{"type":"block","children":[{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Floating Point Comparisons (Again!)","position":{"start":{"line":122,"column":1},"end":{"line":122,"column":1}},"key":"R2SxMxsp4g"}],"key":"Yc93a8GLOj"},{"type":"paragraph","position":{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},"children":[{"type":"text","value":"Remember from Chapter 1: Never use ","position":{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},"key":"FLRVikfcp8"},{"type":"inlineCode","value":"==","position":{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},"key":"RMWFjBu6dA"},{"type":"text","value":" with floats!","position":{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},"key":"rDosGJRxWZ"}],"key":"cdwE6xGvJp"},{"type":"code","lang":"python","value":"# WRONG\nif orbit_period == 365.25:\n    \n# RIGHT\nif abs(orbit_period - 365.25) < 0.01:","position":{"start":{"line":124,"column":1},"end":{"line":129,"column":1}},"key":"Z3caql6w1e"}],"key":"DAafR3qGlZ"},{"type":"code","lang":"","value":"\n### Boolean Values and Truthiness\n\nPython has a broader concept of \"truth\" than just True/False:\n\n```{code-cell} ipython3\n# What's considered True or False?\nvalues_to_test = [\n    True, False,           # Booleans\n    1, 0, -1,             # Numbers\n    \"\", \"hello\",          # Strings\n    [], [1, 2, 3],        # Lists\n    None,                 # Special null value\n    0.0, 0.000001,        # Floats\n]\n\nprint(\"Value\".ljust(15), \"Bool\".ljust(8), \"Type\")\nprint(\"-\" * 35)\nfor value in values_to_test:\n    print(f\"{str(value):15} {bool(value)!s:8} {type(value).__name__}\")","position":{"start":{"line":131,"column":1},"end":{"line":152,"column":1}},"key":"XHgiFcX9iL"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"The Truthiness Rule","position":{"start":{"line":154,"column":1},"end":{"line":154,"column":1}},"key":"EqshqtQubI"}],"key":"HJEJNMOKoV"},{"type":"paragraph","position":{"start":{"line":156,"column":1},"end":{"line":157,"column":1}},"children":[{"type":"strong","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"children":[{"type":"text","value":"Falsy values","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"iiiwXgwQ58"}],"key":"kgdw6x4A54"},{"type":"text","value":": ","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"Wh69w4tS19"},{"type":"inlineCode","value":"False","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"wTTsI0WqDK"},{"type":"text","value":", ","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"LCswU1OiZ4"},{"type":"inlineCode","value":"0","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"dCV2z6U4Z4"},{"type":"text","value":", ","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"IDHBRal5tp"},{"type":"inlineCode","value":"0.0","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"ltCzowSYYQ"},{"type":"text","value":", ","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"K1H7rXnFUh"},{"type":"inlineCode","value":"\"\"","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"FhDEPu4iK7"},{"type":"text","value":", ","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"wuG8BWo6bC"},{"type":"inlineCode","value":"[]","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"VL783g0qy8"},{"type":"text","value":", ","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"iB2KTwc8My"},{"type":"inlineCode","value":"{}","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"yHhuvKtF68"},{"type":"text","value":", ","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"bWangvqVKc"},{"type":"inlineCode","value":"None","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"SLIRhDdZFF"},{"type":"text","value":"\n","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"OZd8leSWQZ"},{"type":"strong","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"children":[{"type":"text","value":"Everything else is Truthy!","position":{"start":{"line":156,"column":1},"end":{"line":156,"column":1}},"key":"Wig7wmfY8k"}],"key":"zgYQe41cAc"}],"key":"Idh74OgrIk"},{"type":"paragraph","position":{"start":{"line":159,"column":1},"end":{"line":159,"column":1}},"children":[{"type":"text","value":"This enables elegant code:","position":{"start":{"line":159,"column":1},"end":{"line":159,"column":1}},"key":"ww3mIDjf3g"}],"key":"GzPmfE853K"},{"type":"code","lang":"python","value":"# Instead of: if len(observations) > 0:\nif observations:  # Empty list is False!\n    process(observations)","position":{"start":{"line":160,"column":1},"end":{"line":163,"column":1}},"key":"DnkbUoHv5G"}],"class":"important","key":"zJiJ56ZZju"},{"type":"code","lang":"","value":"\n### Logical Operators\n\nCombine conditions to express complex logic:\n\n```{code-cell} ipython3\n# Stellar classification logic\ntemperature = 5800  # Kelvin\nluminosity = 1.0    # Solar units\nmass = 1.0          # Solar masses\n\n# Complex conditions\nis_main_sequence = 0.08 < mass < 150  # Stars have mass limits\nis_sun_like = 5300 < temperature < 6000 and 0.8 < luminosity < 1.2\nis_giant = luminosity > 10 and temperature < 5000\nis_white_dwarf = luminosity < 0.01 and temperature > 8000\n\nprint(f\"Temperature: {temperature}K, Luminosity: {luminosity}L☉, Mass: {mass}M☉\")\nprint(f\"Main sequence? {is_main_sequence}\")\nprint(f\"Sun-like? {is_sun_like}\")\nprint(f\"Giant? {is_giant}\")\nprint(f\"White dwarf? {is_white_dwarf}\")\n\n# Operator precedence (like math!)\n# not > and > or\nresult = True or False and False  # What's this?\nprint(f\"\\nTrue or False and False = {result}\")\nprint(\"Because 'and' binds tighter than 'or': True or (False and False)\")","position":{"start":{"line":165,"column":1},"end":{"line":194,"column":1}},"key":"iOhCYpJXPZ"},{"type":"exercise","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Short-Circuit Evaluation","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"Ecx1m5no6J"}],"key":"XD0qcXNAvB"},{"type":"paragraph","position":{"start":{"line":197,"column":1},"end":{"line":197,"column":1}},"children":[{"type":"text","value":"Python stops evaluating as soon as it knows the answer. Why do these matter?","position":{"start":{"line":197,"column":1},"end":{"line":197,"column":1}},"key":"qBBxvFkQJ6"}],"key":"QPDql9SqsN"},{"type":"code","lang":"python","value":"# This is safe even if divisor is 0\nif divisor != 0 and value/divisor > 10:\n    print(\"Large ratio\")\n\n# This would crash!\nif value/divisor > 10 and divisor != 0:\n    print(\"Large ratio\")","position":{"start":{"line":199,"column":1},"end":{"line":206,"column":1}},"key":"POu3djfS7l"}],"enumerated":true,"label":"exercise-lJRe3igoEq","identifier":"exercise-ljre3igoeq","enumerator":"1","html_id":"exercise-ljre3igoeq","key":"y8PXLSbQlQ"},{"type":"paragraph","position":{"start":{"line":209,"column":1},"end":{"line":209,"column":1}},"children":[{"type":"text","value":"When might this be useful in astronomy code?","position":{"start":{"line":209,"column":1},"end":{"line":209,"column":1}},"key":"xB0YqMqlNn"}],"key":"vQvdB326LB"},{"type":"code","lang":"","value":"\n```{solution}\n:class: dropdown\n\nShort-circuit evaluation is crucial for:\n\n1. **Avoiding division by zero**:\n```python\nif parallax != 0 and 1/parallax < 100:  # Safe!\n    print(\"Nearby star\")","position":{"start":{"line":210,"column":1},"end":{"line":221,"column":1}},"key":"caDVTZ4FVM"},{"type":"list","ordered":true,"start":2,"spread":false,"position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"children":[{"type":"strong","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"children":[{"type":"text","value":"Checking existence before access","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"fIETGKjS0z"}],"key":"Fs2tikekaY"},{"type":"text","value":":","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"r8NobstTKM"}],"key":"w6zya1gZ2f"}],"key":"TBvnzv25tb"},{"type":"code","lang":"python","value":"if spectrum is not None and spectrum.max() > threshold:\n    print(\"Bright source\")","position":{"start":{"line":224,"column":1},"end":{"line":227,"column":1}},"key":"zL0kFaj6x8"},{"type":"list","ordered":true,"start":3,"spread":false,"position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"children":[{"type":"strong","position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"children":[{"type":"text","value":"Performance","position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"key":"z21gff7srh"}],"key":"ngeqzKVkBg"},{"type":"text","value":" - expensive operations last:","position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"key":"tSznctNtzI"}],"key":"MnbHc1ZCKE"}],"key":"CBxrNm0y0a"},{"type":"code","lang":"python","value":"if quick_check() and expensive_calculation():\n    process()","position":{"start":{"line":230,"column":1},"end":{"line":233,"column":1}},"key":"W2FBz4ySnU"},{"type":"code","lang":"","value":"\n---\n\n## If-Then Logic: Making Decisions\n\n### Basic If Statements\n\nThe fundamental decision structure:\n\n```{code-cell} ipython3\ndef classify_star(temperature):\n    \"\"\"Classify star by temperature using Harvard spectral classification.\"\"\"\n    \n    spectral_class = \"Unknown\"\n    \n    if temperature > 30000:\n        spectral_class = \"O\"  # Blue\n    elif temperature > 10000:\n        spectral_class = \"B\"  # Blue-white\n    elif temperature > 7500:\n        spectral_class = \"A\"  # White\n    elif temperature > 6000:\n        spectral_class = \"F\"  # Yellow-white\n    elif temperature > 5200:\n        spectral_class = \"G\"  # Yellow (Sun)\n    elif temperature > 3700:\n        spectral_class = \"K\"  # Orange\n    elif temperature > 2400:\n        spectral_class = \"M\"  # Red\n    else:\n        spectral_class = \"L/T/Y\"  # Brown dwarfs\n    \n    return spectral_class\n\n# Test the classifier\ntest_temps = [40000, 9700, 5778, 3500, 1000]\nfor temp in test_temps:\n    print(f\"{temp:5}K -> Class {classify_star(temp)}\")","position":{"start":{"line":234,"column":1},"end":{"line":273,"column":1}},"key":"DXIZPhrc0K"},{"type":"heading","depth":3,"position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"children":[{"type":"text","value":"If-Elif-Else Chains","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"vkVv91hMLa"}],"identifier":"if-elif-else-chains","label":"If-Elif-Else Chains","html_id":"if-elif-else-chains","implicit":true,"key":"fiF3ngpFsu"},{"type":"paragraph","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"children":[{"type":"text","value":"Order matters in elif chains!","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"key":"vyOXgKu2mu"}],"key":"hEmjlKrGSM"}],"key":"KxG0bC0B1m"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def determine_evolution_stage(mass, luminosity, temperature):\n    \"\"\"Determine stellar evolution stage from observable parameters.\"\"\"\n    \n    # Check in order of likelihood/importance\n    if luminosity < 0.01 and temperature > 10000:\n        return \"White Dwarf\"\n    elif luminosity > 1000:\n        return \"Supergiant\"\n    elif luminosity > 100 and temperature < 4500:\n        return \"Red Giant\"\n    elif luminosity > 100:\n        return \"Blue Giant\"\n    elif 0.08 < mass < 0.5 and luminosity < 0.08:\n        return \"Red Dwarf\"\n    elif abs(luminosity - mass**3.5) < 0.5 * mass**3.5:  # Within 50% of main sequence\n        return \"Main Sequence\"\n    else:\n        return \"Peculiar/Variable\"\n\n# Test cases\nstars = [\n    (1.0, 1.0, 5778),      # Sun\n    (0.1, 0.001, 3000),    # Red dwarf\n    (10, 10000, 20000),    # Supergiant\n    (0.6, 0.0001, 15000),  # White dwarf\n]\n\nfor mass, lum, temp in stars:\n    stage = determine_evolution_stage(mass, lum, temp)\n    print(f\"M={mass:4.1f}M☉, L={lum:7.4f}L☉, T={temp:5}K -> {stage}\")","key":"fmKnoKNi64"},{"type":"output","id":"6Wu9tmi5TvMm01jHSuxc4","data":[],"key":"v8CqxPNAyK"}],"key":"ef9zdMqqFR"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":312,"column":1},"end":{"line":312,"column":1}},"children":[{"type":"text","value":"Guard Clauses vs Nested Ifs","position":{"start":{"line":312,"column":1},"end":{"line":312,"column":1}},"key":"WYsWLAao7j"}],"identifier":"guard-clauses-vs-nested-ifs","label":"Guard Clauses vs Nested Ifs","html_id":"guard-clauses-vs-nested-ifs","implicit":true,"key":"MMFnBl7FkZ"},{"type":"paragraph","position":{"start":{"line":314,"column":1},"end":{"line":314,"column":1}},"children":[{"type":"text","value":"Write cleaner code with guard clauses:","position":{"start":{"line":314,"column":1},"end":{"line":314,"column":1}},"key":"qHEaois57i"}],"key":"bVi3QFDCrC"}],"key":"Pajq49mC7I"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# ❌ Nested approach - hard to follow\ndef process_observation_nested(data):\n    if data is not None:\n        if len(data) > 0:\n            if data.max() > 0:\n                if data.min() < 1000:\n                    # Finally do the work!\n                    return data.mean()\n                else:\n                    return \"Signal too strong\"\n            else:\n                return \"No positive values\"\n        else:\n            return \"Empty dataset\"\n    else:\n        return \"No data\"\n\n# ✅ Guard clause approach - much cleaner!\ndef process_observation_clean(data):\n    # Handle error cases first and exit early\n    if data is None:\n        return \"No data\"\n    if len(data) == 0:\n        return \"Empty dataset\"\n    if data.max() <= 0:\n        return \"No positive values\"\n    if data.min() >= 1000:\n        return \"Signal too strong\"\n    \n    # Main logic is unindented and clear\n    return data.mean()\n\n# Both give same results, but one is much more readable!","key":"qPNqiHg4Tk"},{"type":"output","id":"svj3eM7TdwGd-ZHmyvYbJ","data":[],"key":"Xfcqwfw7f8"}],"key":"n9aswrk4xm"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Code Philosophy: Fail Fast","position":{"start":{"line":352,"column":1},"end":{"line":352,"column":1}},"key":"sEDfKDJj0g"}],"key":"q2u1gjry2A"},{"type":"paragraph","position":{"start":{"line":354,"column":1},"end":{"line":354,"column":1}},"children":[{"type":"strong","position":{"start":{"line":354,"column":1},"end":{"line":354,"column":1}},"children":[{"type":"text","value":"Guard clauses","position":{"start":{"line":354,"column":1},"end":{"line":354,"column":1}},"key":"jbH7anqs1B"}],"key":"dSgwdpAIDf"},{"type":"text","value":" embody the “fail fast” principle:","position":{"start":{"line":354,"column":1},"end":{"line":354,"column":1}},"key":"BdJItwjEII"}],"key":"LWzNt4Umn2"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":355,"column":1},"end":{"line":358,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":355,"column":1},"end":{"line":355,"column":1}},"children":[{"type":"text","value":"Check for error conditions first","position":{"start":{"line":355,"column":1},"end":{"line":355,"column":1}},"key":"DaUsX1Erl5"}],"key":"UDHSu0BYo4"},{"type":"listItem","spread":true,"position":{"start":{"line":356,"column":1},"end":{"line":356,"column":1}},"children":[{"type":"text","value":"Return/exit immediately if something’s wrong","position":{"start":{"line":356,"column":1},"end":{"line":356,"column":1}},"key":"Z89tzSvodK"}],"key":"ER6AdGME9O"},{"type":"listItem","spread":true,"position":{"start":{"line":357,"column":1},"end":{"line":358,"column":1}},"children":[{"type":"text","value":"Keep the “happy path” unindented and clear","position":{"start":{"line":357,"column":1},"end":{"line":357,"column":1}},"key":"Or50HhgZ8q"}],"key":"wNKpTMJAgt"}],"key":"x7TcgbnWCR"},{"type":"paragraph","position":{"start":{"line":359,"column":1},"end":{"line":359,"column":1}},"children":[{"type":"text","value":"This matches how we think: “If this is wrong, stop. If that’s wrong, stop. Otherwise, proceed.”","position":{"start":{"line":359,"column":1},"end":{"line":359,"column":1}},"key":"oURjDNJ4Jm"}],"key":"YL5KVLPs60"}],"class":"tip","key":"oDfWuiTwnS"},{"type":"thematicBreak","position":{"start":{"line":362,"column":1},"end":{"line":362,"column":1}},"key":"YKI5k8w7vk"},{"type":"heading","depth":2,"position":{"start":{"line":364,"column":1},"end":{"line":364,"column":1}},"children":[{"type":"text","value":"Loops: Repetition with Purpose","position":{"start":{"line":364,"column":1},"end":{"line":364,"column":1}},"key":"Xz4t7jhDoa"}],"identifier":"loops-repetition-with-purpose","label":"Loops: Repetition with Purpose","html_id":"loops-repetition-with-purpose","implicit":true,"key":"eI1atX6jcT"},{"type":"heading","depth":3,"position":{"start":{"line":366,"column":1},"end":{"line":366,"column":1}},"children":[{"type":"text","value":"For Loops - When You Know How Many","position":{"start":{"line":366,"column":1},"end":{"line":366,"column":1}},"key":"UButiQhJuE"}],"identifier":"for-loops-when-you-know-how-many","label":"For Loops - When You Know How Many","html_id":"for-loops-when-you-know-how-many","implicit":true,"key":"Tw3YaIOx1z"},{"type":"paragraph","position":{"start":{"line":368,"column":1},"end":{"line":368,"column":1}},"children":[{"type":"text","value":"For loops are perfect when you know the iterations in advance:","position":{"start":{"line":368,"column":1},"end":{"line":368,"column":1}},"key":"PR9nqX1fHf"}],"key":"qdEQgganPc"}],"key":"OGS2ElFveX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Classic for loop with range\nprint(\"Counting photons in bins:\")\nfor bin_number in range(5):\n    photon_count = 100 + bin_number * 50  # Simulated data\n    print(f\"Bin {bin_number}: {photon_count} photons\")\n\nprint(\"\\n\" + \"=\"*40 + \"\\n\")\n\n# Iterating over data directly\nwavelengths = [656.3, 486.1, 434.0, 410.2]  # Hydrogen Balmer series\nprint(\"Balmer series wavelengths (nm):\")\nfor wavelength in wavelengths:\n    print(f\"  λ = {wavelength} nm\")\n\nprint(\"\\n\" + \"=\"*40 + \"\\n\")\n\n# Enumerate when you need index AND value\nelements = [\"Hydrogen\", \"Helium\", \"Carbon\", \"Oxygen\"]\nprint(\"Cosmic abundances (by number):\")\nabundances = [0.92, 0.078, 0.0003, 0.0005]\nfor i, element in enumerate(elements):\n    print(f\"  {i+1}. {element}: {abundances[i]:.4%}\")","key":"Omfrj80qlu"},{"type":"output","id":"Os8dX-pKRmrJ1K15cjEvf","data":[],"key":"EYg3b0RJok"}],"key":"SUqBCMmkWn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Range variations\nprint(\"range(5):\", list(range(5)))            # 0 to 4\nprint(\"range(2, 8):\", list(range(2, 8)))      # 2 to 7\nprint(\"range(0, 10, 2):\", list(range(0, 10, 2)))  # Even numbers\nprint(\"range(10, 0, -1):\", list(range(10, 0, -1)))  # Countdown\n\n# Practical example: Observing schedule\nprint(\"\\nObservation schedule (hours from midnight):\")\nfor hour in range(20, 28, 2):  # 8pm to 4am, every 2 hours\n    actual_hour = hour if hour < 24 else hour - 24\n    am_pm = \"PM\" if 12 <= hour < 24 else \"AM\"\n    display_hour = actual_hour if actual_hour <= 12 else actual_hour - 12\n    if display_hour == 0:\n        display_hour = 12\n    print(f\"  Observation at {display_hour:2d}:00 {am_pm}\")","key":"Sfl41esqeG"},{"type":"output","id":"w4MNhWbcrCoriBCOPRKci","data":[],"key":"LJfiZETrr9"}],"key":"p7UdaCVejO"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":413,"column":1},"end":{"line":413,"column":1}},"children":[{"type":"text","value":"While Loops - Until a Condition","position":{"start":{"line":413,"column":1},"end":{"line":413,"column":1}},"key":"dKHoKyug9G"}],"identifier":"while-loops-until-a-condition","label":"While Loops - Until a Condition","html_id":"while-loops-until-a-condition","implicit":true,"key":"SNzFopxOVw"},{"type":"paragraph","position":{"start":{"line":415,"column":1},"end":{"line":415,"column":1}},"children":[{"type":"text","value":"While loops continue until a condition becomes false:","position":{"start":{"line":415,"column":1},"end":{"line":415,"column":1}},"key":"RlH3wlXzjV"}],"key":"a10Y44sRoK"}],"key":"ms11I2KZ1p"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Newton's method for finding square roots\ndef sqrt_newton(n, tolerance=1e-10):\n    \"\"\"Calculate square root using Newton's method.\"\"\"\n    if n < 0:\n        return None\n    \n    guess = n / 2  # Initial guess\n    iterations = 0\n    \n    while abs(guess * guess - n) > tolerance:\n        guess = (guess + n/guess) / 2  # Newton's formula\n        iterations += 1\n        \n        # Safety check\n        if iterations > 100:\n            print(\"Warning: Max iterations reached\")\n            break\n    \n    return guess, iterations\n\n# Test it\nimport math\nnumber = 2.0\nmy_sqrt, iters = sqrt_newton(number)\nprint(f\"Newton's sqrt({number}): {my_sqrt} after {iters} iterations\")\nprint(f\"Python's sqrt({number}): {math.sqrt(number)}\")\nprint(f\"Difference: {abs(my_sqrt - math.sqrt(number)):.2e}\")","key":"asFv9O8Tap"},{"type":"output","id":"vm0qBquJvMDLMIXYL0E5m","data":[],"key":"bO3cpVSq4R"}],"key":"oZiQK2kF4Z"},{"type":"block","children":[{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Infinite Loop Danger!","position":{"start":{"line":447,"column":1},"end":{"line":447,"column":1}},"key":"AKKmBO2uwb"}],"key":"QgTNjAZASV"},{"type":"paragraph","position":{"start":{"line":448,"column":1},"end":{"line":448,"column":1}},"children":[{"type":"text","value":"Always ensure your while loop condition will eventually become False!","position":{"start":{"line":448,"column":1},"end":{"line":448,"column":1}},"key":"F6UYKabYig"}],"key":"RhcXtfinWq"},{"type":"code","lang":"python","value":"# DANGER: This runs forever!\nwhile True:\n    print(\"Help, I'm stuck!\")\n    \n# SAFE: Always have an exit strategy\nmax_iterations = 1000\ncount = 0\nwhile condition and count < max_iterations:\n    # do work\n    count += 1","position":{"start":{"line":450,"column":1},"end":{"line":460,"column":1}},"key":"UXAohqg9Bb"}],"key":"O2bk33qQ72"},{"type":"code","lang":"","value":"\n### Loop Control: Break, Continue, Else\n\nFine-tune loop behavior:\n\n```{code-cell} ipython3\n# Break: Exit loop early\ndef find_first_giant_planet(planets):\n    \"\"\"Find first planet with mass > 50 Earth masses.\"\"\"\n    for i, planet in enumerate(planets):\n        if planet['mass'] > 50:\n            print(f\"Found giant planet at index {i}: {planet['name']}\")\n            break\n    else:  # This runs if loop completes without break!\n        print(\"No giant planets found\")\n\nplanets = [\n    {'name': 'Kepler-452b', 'mass': 5},\n    {'name': 'HD 209458 b', 'mass': 220},\n    {'name': 'Proxima b', 'mass': 1.3}\n]\n\nfind_first_giant_planet(planets)\n\nprint(\"\\n\" + \"=\"*40 + \"\\n\")\n\n# Continue: Skip to next iteration\nprint(\"Processing observations (skipping bad data):\")\nobservations = [100, -5, 200, 0, 150, -999, 300]\n\nfor obs in observations:\n    if obs <= 0:  # Bad data\n        print(f\"  Skipping invalid value: {obs}\")\n        continue\n    \n    # Process valid data\n    magnitude = -2.5 * math.log10(obs/100)\n    print(f\"  Flux: {obs:3d} -> Magnitude: {magnitude:+5.2f}\")","position":{"start":{"line":462,"column":1},"end":{"line":501,"column":1}},"key":"mkQrZgU1Ul"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"The Mysterious Loop-Else","position":{"start":{"line":503,"column":1},"end":{"line":503,"column":1}},"key":"fK7xzciNBN"}],"key":"f0N1nq4av2"},{"type":"paragraph","position":{"start":{"line":505,"column":1},"end":{"line":505,"column":1}},"children":[{"type":"text","value":"Python’s ","position":{"start":{"line":505,"column":1},"end":{"line":505,"column":1}},"key":"ooBU779cGX"},{"type":"inlineCode","value":"else","position":{"start":{"line":505,"column":1},"end":{"line":505,"column":1}},"key":"b0T7hDLmMT"},{"type":"text","value":" clause on loops is unique:","position":{"start":{"line":505,"column":1},"end":{"line":505,"column":1}},"key":"Ji9QdMqILA"}],"key":"eIEgmCLZUa"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":506,"column":1},"end":{"line":508,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":506,"column":1},"end":{"line":506,"column":1}},"children":[{"type":"text","value":"Executes if loop completes normally (no ","position":{"start":{"line":506,"column":1},"end":{"line":506,"column":1}},"key":"SyO8o8f2WM"},{"type":"inlineCode","value":"break","position":{"start":{"line":506,"column":1},"end":{"line":506,"column":1}},"key":"faqauajZ5s"},{"type":"text","value":")","position":{"start":{"line":506,"column":1},"end":{"line":506,"column":1}},"key":"p8RoDbjNp8"}],"key":"o5lc0ydfiQ"},{"type":"listItem","spread":true,"position":{"start":{"line":507,"column":1},"end":{"line":507,"column":1}},"children":[{"type":"text","value":"Useful for search patterns: “Find X, else report not found”","position":{"start":{"line":507,"column":1},"end":{"line":507,"column":1}},"key":"aWhUj6G4Fj"}],"key":"TcBYE4stYH"},{"type":"listItem","spread":true,"position":{"start":{"line":508,"column":1},"end":{"line":508,"column":1}},"children":[{"type":"text","value":"Works with both ","position":{"start":{"line":508,"column":1},"end":{"line":508,"column":1}},"key":"AFTtFa3dXa"},{"type":"inlineCode","value":"for","position":{"start":{"line":508,"column":1},"end":{"line":508,"column":1}},"key":"x9j5ingE67"},{"type":"text","value":" and ","position":{"start":{"line":508,"column":1},"end":{"line":508,"column":1}},"key":"gg1FB2XOUH"},{"type":"inlineCode","value":"while","position":{"start":{"line":508,"column":1},"end":{"line":508,"column":1}},"key":"dCWqrYqJr9"},{"type":"text","value":" loops","position":{"start":{"line":508,"column":1},"end":{"line":508,"column":1}},"key":"KsOKjuifg4"}],"key":"p6bmLZo3ot"}],"key":"W1zqpuFNTj"}],"class":"note","key":"rRJvXLGkiC"},{"type":"thematicBreak","position":{"start":{"line":511,"column":1},"end":{"line":511,"column":1}},"key":"PpKblPuPgP"},{"type":"heading","depth":2,"position":{"start":{"line":513,"column":1},"end":{"line":513,"column":1}},"children":[{"type":"text","value":"Comprehensions: Elegant Iteration","position":{"start":{"line":513,"column":1},"end":{"line":513,"column":1}},"key":"vUTmAsiBAg"}],"identifier":"comprehensions-elegant-iteration","label":"Comprehensions: Elegant Iteration","html_id":"comprehensions-elegant-iteration","implicit":true,"key":"PvXhteUMBE"},{"type":"heading","depth":3,"position":{"start":{"line":515,"column":1},"end":{"line":515,"column":1}},"children":[{"type":"text","value":"List Comprehensions","position":{"start":{"line":515,"column":1},"end":{"line":515,"column":1}},"key":"CgvaGx4oPt"}],"identifier":"list-comprehensions","label":"List Comprehensions","html_id":"list-comprehensions","implicit":true,"key":"TWd3I1s6Ed"},{"type":"paragraph","position":{"start":{"line":517,"column":1},"end":{"line":517,"column":1}},"children":[{"type":"text","value":"Transform loops into concise expressions:","position":{"start":{"line":517,"column":1},"end":{"line":517,"column":1}},"key":"Vq095bDoUS"}],"key":"sGvYtmTFI8"}],"key":"LRLgd5Xscp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Traditional loop approach\nmagnitudes = [5.2, 3.1, 6.8, 4.5, 2.3]\nfluxes_loop = []\nfor mag in magnitudes:\n    flux = 10**(-0.4 * mag)\n    fluxes_loop.append(flux)\n\n# List comprehension - same result, one line!\nfluxes_comp = [10**(-0.4 * mag) for mag in magnitudes]\n\nprint(\"Traditional loop result:\", len(fluxes_loop), \"values\")\nprint(\"Comprehension result:\", len(fluxes_comp), \"values\")\nprint(f\"Results identical? {fluxes_loop == fluxes_comp}\")\n\nprint(\"\\n\" + \"=\"*40 + \"\\n\")\n\n# Comprehensions with conditions\nall_stars = [\n    {'name': 'Sirius', 'mag': -1.46, 'type': 'A'},\n    {'name': 'Betelgeuse', 'mag': 0.42, 'type': 'M'},\n    {'name': 'Rigel', 'mag': 0.13, 'type': 'B'},\n    {'name': 'Aldebaran', 'mag': 0.85, 'type': 'K'},\n    {'name': 'Vega', 'mag': 0.03, 'type': 'A'},\n]\n\n# Get bright stars (mag < 0.5)\nbright_stars = [star['name'] for star in all_stars if star['mag'] < 0.5]\nprint(f\"Bright stars: {bright_stars}\")\n\n# Get blue stars with their magnitudes\nblue_stars = [(s['name'], s['mag']) for s in all_stars if s['type'] in ['O', 'B', 'A']]\nprint(f\"Blue stars: {blue_stars}\")","key":"RdgkZsSmqS"},{"type":"output","id":"PjBcxThBnCfQvvvOtnKc0","data":[],"key":"HxjuOuKUwf"}],"key":"Xa9wKLs7wF"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":554,"column":1},"end":{"line":554,"column":1}},"children":[{"type":"text","value":"When to Use Comprehensions","position":{"start":{"line":554,"column":1},"end":{"line":554,"column":1}},"key":"tggvu9TtUc"}],"identifier":"when-to-use-comprehensions","label":"When to Use Comprehensions","html_id":"when-to-use-comprehensions","implicit":true,"key":"Db5hUjPZjE"}],"key":"ofqasJzbu0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# ✅ GOOD: Simple transformation\n# Clear and concise\nsquares = [x**2 for x in range(10)]\n\n# ✅ GOOD: Filtering with simple condition\npositives = [x for x in data if x > 0]\n\n# ❌ BAD: Too complex - use regular loop\n# Hard to read and debug\n# result = [process(x) if complex_condition(x) and other_check(x) \n#          else alternate_process(x) for x in data if pre_filter(x)]\n\n# ❌ BAD: Side effects - comprehensions shouldn't print or modify external state\n# Don't do this:\n# [print(x) for x in range(10)]  # Use regular loop instead\n\n# ✅ GOOD: Nested comprehensions for matrices\n# Create a 3x3 identity matrix\nidentity = [[1 if i == j else 0 for j in range(3)] for i in range(3)]\nprint(\"\\nIdentity matrix:\")\nfor row in identity:\n    print(row)","key":"sQpwYqSPVx"},{"type":"output","id":"so5zAbH_OPA0W6CeZeybd","data":[],"key":"a0YOyGZ0Gn"}],"key":"sZBzxvmbuf"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Comprehension Philosophy","position":{"start":{"line":581,"column":1},"end":{"line":581,"column":1}},"key":"GPMcQGWxme"}],"key":"XKbxDhZMzN"},{"type":"paragraph","position":{"start":{"line":583,"column":1},"end":{"line":583,"column":1}},"children":[{"type":"strong","position":{"start":{"line":583,"column":1},"end":{"line":583,"column":1}},"children":[{"type":"text","value":"Use comprehensions when:","position":{"start":{"line":583,"column":1},"end":{"line":583,"column":1}},"key":"yUYbrl9Cl9"}],"key":"zQfDKZaDyZ"}],"key":"FssxfPpKVq"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":584,"column":1},"end":{"line":587,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":584,"column":1},"end":{"line":584,"column":1}},"children":[{"type":"text","value":"The operation is simple and clear","position":{"start":{"line":584,"column":1},"end":{"line":584,"column":1}},"key":"glsZr22jiP"}],"key":"rP1FSuFynN"},{"type":"listItem","spread":true,"position":{"start":{"line":585,"column":1},"end":{"line":585,"column":1}},"children":[{"type":"text","value":"You’re building a new list from an existing iterable","position":{"start":{"line":585,"column":1},"end":{"line":585,"column":1}},"key":"Q5KAlswy29"}],"key":"Nnnj2BekMJ"},{"type":"listItem","spread":true,"position":{"start":{"line":586,"column":1},"end":{"line":587,"column":1}},"children":[{"type":"text","value":"The logic fits comfortably on 1-2 lines","position":{"start":{"line":586,"column":1},"end":{"line":586,"column":1}},"key":"cbuivUUAZm"}],"key":"wkQjgks228"}],"key":"yxiHAqj0Fs"},{"type":"paragraph","position":{"start":{"line":588,"column":1},"end":{"line":588,"column":1}},"children":[{"type":"strong","position":{"start":{"line":588,"column":1},"end":{"line":588,"column":1}},"children":[{"type":"text","value":"Use regular loops when:","position":{"start":{"line":588,"column":1},"end":{"line":588,"column":1}},"key":"IflGOqQAWT"}],"key":"Lz3F8vR3XN"}],"key":"gfpKPs9VqC"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":589,"column":1},"end":{"line":591,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":589,"column":1},"end":{"line":589,"column":1}},"children":[{"type":"text","value":"Logic is complex or multi-step","position":{"start":{"line":589,"column":1},"end":{"line":589,"column":1}},"key":"qgOS1YbJVu"}],"key":"mAydfU3pEO"},{"type":"listItem","spread":true,"position":{"start":{"line":590,"column":1},"end":{"line":590,"column":1}},"children":[{"type":"text","value":"You need to break or handle errors","position":{"start":{"line":590,"column":1},"end":{"line":590,"column":1}},"key":"KHRRlGtXl5"}],"key":"THV4CsZxCw"},{"type":"listItem","spread":true,"position":{"start":{"line":591,"column":1},"end":{"line":591,"column":1}},"children":[{"type":"text","value":"You’re not building a list (just processing)","position":{"start":{"line":591,"column":1},"end":{"line":591,"column":1}},"key":"ltk37UHrBw"}],"key":"VI81LPxU9L"}],"key":"FrLIviLvHl"}],"class":"tip","key":"mubnZkzz4e"},{"type":"thematicBreak","position":{"start":{"line":594,"column":1},"end":{"line":594,"column":1}},"key":"tfz6s1utZB"},{"type":"heading","depth":2,"position":{"start":{"line":596,"column":1},"end":{"line":596,"column":1}},"children":[{"type":"text","value":"Common Patterns in Scientific Computing","position":{"start":{"line":596,"column":1},"end":{"line":596,"column":1}},"key":"cHS94GcbgC"}],"identifier":"common-patterns-in-scientific-computing","label":"Common Patterns in Scientific Computing","html_id":"common-patterns-in-scientific-computing","implicit":true,"key":"DnLoY7L5fT"},{"type":"heading","depth":3,"position":{"start":{"line":598,"column":1},"end":{"line":598,"column":1}},"children":[{"type":"text","value":"Pattern 1: Accumulator","position":{"start":{"line":598,"column":1},"end":{"line":598,"column":1}},"key":"kcxJR7gwz1"}],"identifier":"pattern-1-accumulator","label":"Pattern 1: Accumulator","html_id":"pattern-1-accumulator","implicit":true,"key":"NMEn2zgJu1"}],"key":"RP0VwUwS2A"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Sum pattern\ndef calculate_total_luminosity(star_luminosities):\n    \"\"\"Sum luminosities of star cluster.\"\"\"\n    total = 0  # Initialize accumulator\n    for luminosity in star_luminosities:\n        total += luminosity  # Accumulate\n    return total\n\n# Product pattern  \ndef calculate_probability_all_detect(individual_probs):\n    \"\"\"Probability that ALL telescopes detect the source.\"\"\"\n    combined = 1  # Initialize for product\n    for prob in individual_probs:\n        combined *= prob  # Accumulate via multiplication\n    return combined\n\ncluster = [1.0, 0.5, 0.3, 2.1, 0.8]  # Solar luminosities\nprint(f\"Total cluster luminosity: {calculate_total_luminosity(cluster):.1f} L☉\")\n\ndetection_probs = [0.9, 0.85, 0.95]\nprint(f\"Combined detection probability: {calculate_probability_all_detect(detection_probs):.3f}\")","key":"ORcdgz5jt1"},{"type":"output","id":"DxP737vNggsJfGtYVRtEo","data":[],"key":"hriYcytmPo"}],"key":"Yxl2s5Oh1N"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":624,"column":1},"end":{"line":624,"column":1}},"children":[{"type":"text","value":"Pattern 2: Search/Filter","position":{"start":{"line":624,"column":1},"end":{"line":624,"column":1}},"key":"FBwPlugxzs"}],"identifier":"pattern-2-search-filter","label":"Pattern 2: Search/Filter","html_id":"pattern-2-search-filter","implicit":true,"key":"Rrk8XMGuku"}],"key":"mx5GbgKJaa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def find_habitable_planets(planets):\n    \"\"\"Find all planets in the habitable zone.\"\"\"\n    habitable = []\n    \n    for planet in planets:\n        # Calculate habitable zone for planet's star\n        inner = 0.95 * math.sqrt(planet['star_luminosity'])\n        outer = 1.37 * math.sqrt(planet['star_luminosity'])\n        \n        # Check if planet is in zone\n        if inner <= planet['distance'] <= outer:\n            habitable.append(planet)\n    \n    return habitable\n\n# Example exoplanet data\nexoplanets = [\n    {'name': 'Proxima b', 'distance': 0.05, 'star_luminosity': 0.0017},\n    {'name': 'Kepler-452b', 'distance': 1.05, 'star_luminosity': 1.2},\n    {'name': 'TRAPPIST-1e', 'distance': 0.029, 'star_luminosity': 0.000524},\n]\n\nhabitable = find_habitable_planets(exoplanets)\nprint(f\"Potentially habitable: {[p['name'] for p in habitable]}\")","key":"CJj2us235C"},{"type":"output","id":"2fG-THjQLT8YmnObjfXeI","data":[],"key":"E2RbbYlJng"}],"key":"ztimluzVL9"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":653,"column":1},"end":{"line":653,"column":1}},"children":[{"type":"text","value":"Pattern 3: Convergence","position":{"start":{"line":653,"column":1},"end":{"line":653,"column":1}},"key":"jXpG93v7lu"}],"identifier":"pattern-3-convergence","label":"Pattern 3: Convergence","html_id":"pattern-3-convergence","implicit":true,"key":"hWCLSgGu2x"}],"key":"eooRSva1aU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def calculate_pi_leibniz(tolerance=1e-6):\n    \"\"\"Calculate π using Leibniz formula until convergence.\"\"\"\n    # π/4 = 1 - 1/3 + 1/5 - 1/7 + ...\n    \n    pi_estimate = 0\n    term_number = 0\n    \n    while True:\n        term = (-1)**term_number / (2*term_number + 1)\n        pi_estimate += term\n        \n        # Check convergence\n        if abs(term) < tolerance:\n            break\n            \n        term_number += 1\n    \n    return 4 * pi_estimate, term_number\n\npi_approx, iterations = calculate_pi_leibniz()\nprint(f\"π ≈ {pi_approx:.8f} after {iterations} iterations\")\nprint(f\"Error: {abs(pi_approx - math.pi):.2e}\")","key":"kdHt4FU5xS"},{"type":"output","id":"tPf7r-mrrka1j7mL9Qttx","data":[],"key":"ZsQfT2h1JB"}],"key":"TO3hsg8dHt"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":680,"column":1},"end":{"line":680,"column":1}},"key":"tC2vqsNrZa"},{"type":"heading","depth":2,"position":{"start":{"line":682,"column":1},"end":{"line":682,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":682,"column":1},"end":{"line":682,"column":1}},"key":"rc8GeIiNr5"}],"identifier":"exercises","label":"Exercises","html_id":"exercises","implicit":true,"key":"Ba6bjbNMDX"},{"type":"heading","depth":3,"position":{"start":{"line":684,"column":1},"end":{"line":684,"column":1}},"children":[{"type":"text","value":"Exercise 1: Logical Thinking","position":{"start":{"line":684,"column":1},"end":{"line":684,"column":1}},"key":"sXBB93uEGv"}],"identifier":"exercise-1-logical-thinking","label":"Exercise 1: Logical Thinking","html_id":"exercise-1-logical-thinking","implicit":true,"key":"ptCeEBi1R5"},{"type":"exercise","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Stellar Classification Logic","position":{"start":{"line":686,"column":1},"end":{"line":686,"column":1}},"key":"K8jpN9Iv5H"}],"key":"rpLhrtdQSm"},{"type":"paragraph","position":{"start":{"line":687,"column":1},"end":{"line":687,"column":1}},"children":[{"type":"text","value":"Write a function that takes temperature, luminosity, and mass as inputs and returns:","position":{"start":{"line":687,"column":1},"end":{"line":687,"column":1}},"key":"b99oUq4CAK"}],"key":"JysVHnMorf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":688,"column":1},"end":{"line":693,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":688,"column":1},"end":{"line":688,"column":1}},"children":[{"type":"text","value":"“Impossible” if the star violates basic physics (e.g., luminosity > 10^6 * mass^3.5)","position":{"start":{"line":688,"column":1},"end":{"line":688,"column":1}},"key":"KTypyQHcdP"}],"key":"bYslCfgknC"},{"type":"listItem","spread":true,"position":{"start":{"line":689,"column":1},"end":{"line":689,"column":1}},"children":[{"type":"text","value":"“White Dwarf” if high temp, low luminosity","position":{"start":{"line":689,"column":1},"end":{"line":689,"column":1}},"key":"jWCplrFDTw"}],"key":"UzGGYIqbEp"},{"type":"listItem","spread":true,"position":{"start":{"line":690,"column":1},"end":{"line":690,"column":1}},"children":[{"type":"text","value":"“Main Sequence” if it follows L ∝ M^3.5 approximately","position":{"start":{"line":690,"column":1},"end":{"line":690,"column":1}},"key":"Gx4gZRFIRU"}],"key":"JKGz9Vb3rL"},{"type":"listItem","spread":true,"position":{"start":{"line":691,"column":1},"end":{"line":691,"column":1}},"children":[{"type":"text","value":"“Giant” if luminosity is much higher than expected for its mass","position":{"start":{"line":691,"column":1},"end":{"line":691,"column":1}},"key":"hWdaFgWUwC"}],"key":"wmEd60Huv6"},{"type":"listItem","spread":true,"position":{"start":{"line":692,"column":1},"end":{"line":693,"column":1}},"children":[{"type":"text","value":"“Not classified” otherwise","position":{"start":{"line":692,"column":1},"end":{"line":692,"column":1}},"key":"aG0S7vKy47"}],"key":"f2krCoCwWI"}],"key":"puJjb1FycV"},{"type":"paragraph","position":{"start":{"line":694,"column":1},"end":{"line":694,"column":1}},"children":[{"type":"text","value":"Test with:","position":{"start":{"line":694,"column":1},"end":{"line":694,"column":1}},"key":"wMVBNtgXoO"}],"key":"jExeX5AGZA"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":695,"column":1},"end":{"line":697,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":695,"column":1},"end":{"line":695,"column":1}},"children":[{"type":"text","value":"Sun: T=5778K, L=1.0, M=1.0","position":{"start":{"line":695,"column":1},"end":{"line":695,"column":1}},"key":"GC9vi0MaPx"}],"key":"Dato23gQ7l"},{"type":"listItem","spread":true,"position":{"start":{"line":696,"column":1},"end":{"line":696,"column":1}},"children":[{"type":"text","value":"Sirius B: T=25000K, L=0.026, M=1.0","position":{"start":{"line":696,"column":1},"end":{"line":696,"column":1}},"key":"mvpX5IFFZb"}],"key":"zqeW4g8x6W"},{"type":"listItem","spread":true,"position":{"start":{"line":697,"column":1},"end":{"line":697,"column":1}},"children":[{"type":"text","value":"Betelgeuse: T=3500K, L=100000, M=20","position":{"start":{"line":697,"column":1},"end":{"line":697,"column":1}},"key":"bjWy61Aulq"}],"key":"iw6avyM9xK"}],"key":"LdVO89CVGW"}],"enumerated":true,"label":"exercise-HhG6JvxROb","identifier":"exercise-hhg6jvxrob","enumerator":"2","html_id":"exercise-hhg6jvxrob","key":"XoXvFeAleL"},{"type":"heading","depth":3,"position":{"start":{"line":700,"column":1},"end":{"line":700,"column":1}},"children":[{"type":"text","value":"Exercise 2: Prime Number Sieve","position":{"start":{"line":700,"column":1},"end":{"line":700,"column":1}},"key":"CTsdwXnnJV"}],"identifier":"exercise-2-prime-number-sieve","label":"Exercise 2: Prime Number Sieve","html_id":"exercise-2-prime-number-sieve","implicit":true,"key":"BqB4hoZspa"},{"type":"exercise","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Sieve of Eratosthenes","position":{"start":{"line":702,"column":1},"end":{"line":702,"column":1}},"key":"fYJCzzH84Y"}],"key":"kftamu3P9x"},{"type":"paragraph","position":{"start":{"line":703,"column":1},"end":{"line":703,"column":1}},"children":[{"type":"text","value":"Implement the ancient algorithm for finding prime numbers:","position":{"start":{"line":703,"column":1},"end":{"line":703,"column":1}},"key":"Hl7T43wD2o"}],"key":"rGCpSSZ3b7"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":704,"column":1},"end":{"line":709,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":704,"column":1},"end":{"line":704,"column":1}},"children":[{"type":"text","value":"Create a list of numbers from 2 to n","position":{"start":{"line":704,"column":1},"end":{"line":704,"column":1}},"key":"MggZr6pgKj"}],"key":"L2H5aPvn7H"},{"type":"listItem","spread":true,"position":{"start":{"line":705,"column":1},"end":{"line":705,"column":1}},"children":[{"type":"text","value":"Start with the first number (2)","position":{"start":{"line":705,"column":1},"end":{"line":705,"column":1}},"key":"gByLopKFyo"}],"key":"CpsUWyNykY"},{"type":"listItem","spread":true,"position":{"start":{"line":706,"column":1},"end":{"line":706,"column":1}},"children":[{"type":"text","value":"Mark all its multiples as composite","position":{"start":{"line":706,"column":1},"end":{"line":706,"column":1}},"key":"ab55lCpCgg"}],"key":"aGJX66cTV5"},{"type":"listItem","spread":true,"position":{"start":{"line":707,"column":1},"end":{"line":707,"column":1}},"children":[{"type":"text","value":"Move to the next unmarked number","position":{"start":{"line":707,"column":1},"end":{"line":707,"column":1}},"key":"EbqyKIsYWs"}],"key":"MrTZa3IFEJ"},{"type":"listItem","spread":true,"position":{"start":{"line":708,"column":1},"end":{"line":709,"column":1}},"children":[{"type":"text","value":"Repeat until you’ve processed all numbers","position":{"start":{"line":708,"column":1},"end":{"line":708,"column":1}},"key":"ROUb0M19xX"}],"key":"oSaM8wpiRD"}],"key":"RyAT7L4NP1"},{"type":"paragraph","position":{"start":{"line":710,"column":1},"end":{"line":710,"column":1}},"children":[{"type":"text","value":"Find all primes less than 100. How many are there?","position":{"start":{"line":710,"column":1},"end":{"line":710,"column":1}},"key":"nqI9CfEyzy"}],"key":"hcjWWxnONZ"},{"type":"paragraph","position":{"start":{"line":712,"column":1},"end":{"line":712,"column":1}},"children":[{"type":"text","value":"Bonus: Why might astronomers care about prime numbers? (Hint: think about periodic signals and aliases)","position":{"start":{"line":712,"column":1},"end":{"line":712,"column":1}},"key":"zZCHWKqzXO"}],"key":"vetiKzXA65"}],"enumerated":true,"label":"exercise-AvvEqp6wSi","identifier":"exercise-avveqp6wsi","enumerator":"3","html_id":"exercise-avveqp6wsi","key":"QhMfPyNXBP"},{"type":"heading","depth":3,"position":{"start":{"line":715,"column":1},"end":{"line":715,"column":1}},"children":[{"type":"text","value":"Exercise 3: Monte Carlo Integration","position":{"start":{"line":715,"column":1},"end":{"line":715,"column":1}},"key":"CRPSlu5ie5"}],"identifier":"exercise-3-monte-carlo-integration","label":"Exercise 3: Monte Carlo Integration","html_id":"exercise-3-monte-carlo-integration","implicit":true,"key":"Dyi0nhtaOa"},{"type":"exercise","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Escape Velocity Distribution","position":{"start":{"line":717,"column":1},"end":{"line":717,"column":1}},"key":"IRPSz2xA7I"}],"key":"KWA5S8KQGS"},{"type":"paragraph","position":{"start":{"line":718,"column":1},"end":{"line":718,"column":1}},"children":[{"type":"text","value":"A globular cluster has stars with random velocities. Use a loop to:","position":{"start":{"line":718,"column":1},"end":{"line":718,"column":1}},"key":"G9rSyd6DNz"}],"key":"rVmCkAwdqz"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":719,"column":1},"end":{"line":723,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":719,"column":1},"end":{"line":719,"column":1}},"children":[{"type":"text","value":"Generate 1000 random velocities (Gaussian distribution, mean=10 km/s, std=3 km/s)","position":{"start":{"line":719,"column":1},"end":{"line":719,"column":1}},"key":"zPz9ha4CoD"}],"key":"etZQc3d7qM"},{"type":"listItem","spread":true,"position":{"start":{"line":720,"column":1},"end":{"line":720,"column":1}},"children":[{"type":"text","value":"Count how many exceed the cluster’s escape velocity (15 km/s)","position":{"start":{"line":720,"column":1},"end":{"line":720,"column":1}},"key":"bPtlwFlNON"}],"key":"zJO7nzHuSj"},{"type":"listItem","spread":true,"position":{"start":{"line":721,"column":1},"end":{"line":721,"column":1}},"children":[{"type":"text","value":"Calculate what fraction will escape","position":{"start":{"line":721,"column":1},"end":{"line":721,"column":1}},"key":"vyZxFU7NTU"}],"key":"fUh0Mlgvj1"},{"type":"listItem","spread":true,"position":{"start":{"line":722,"column":1},"end":{"line":723,"column":1}},"children":[{"type":"text","value":"Use a comprehension to get the list of escaping velocities","position":{"start":{"line":722,"column":1},"end":{"line":722,"column":1}},"key":"etKNpRxaHy"}],"key":"zwd1pwkGR8"}],"key":"KTyrVWw1T1"},{"type":"paragraph","position":{"start":{"line":724,"column":1},"end":{"line":724,"column":1}},"children":[{"type":"text","value":"How does this relate to cluster evaporation over time?","position":{"start":{"line":724,"column":1},"end":{"line":724,"column":1}},"key":"YY9PtaBhXy"}],"key":"hjXdprEhNV"}],"enumerated":true,"label":"exercise-TzLse4Vuas","identifier":"exercise-tzlse4vuas","enumerator":"4","html_id":"exercise-tzlse4vuas","key":"YqXf0Bwq84"},{"type":"heading","depth":3,"position":{"start":{"line":727,"column":1},"end":{"line":727,"column":1}},"children":[{"type":"text","value":"Exercise 4: Convergence Testing","position":{"start":{"line":727,"column":1},"end":{"line":727,"column":1}},"key":"Wndl0ZDWQZ"}],"identifier":"exercise-4-convergence-testing","label":"Exercise 4: Convergence Testing","html_id":"exercise-4-convergence-testing","implicit":true,"key":"uvq2dJe9eN"},{"type":"exercise","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Iterative Orbit Calculation","position":{"start":{"line":729,"column":1},"end":{"line":729,"column":1}},"key":"p7g1J0AC1w"}],"key":"mH2F5l52qr"},{"type":"paragraph","position":{"start":{"line":730,"column":1},"end":{"line":731,"column":1}},"children":[{"type":"text","value":"When calculating orbits, we often need to solve Kepler’s equation iteratively:\nE - e*sin(E) = M","position":{"start":{"line":730,"column":1},"end":{"line":730,"column":1}},"key":"pjWPh8tGwB"}],"key":"HVxFTsxc1A"},{"type":"paragraph","position":{"start":{"line":733,"column":1},"end":{"line":733,"column":1}},"children":[{"type":"text","value":"Where E is eccentric anomaly, e is eccentricity, M is mean anomaly.","position":{"start":{"line":733,"column":1},"end":{"line":733,"column":1}},"key":"L28IForE8z"}],"key":"AI6zr0Aq8q"},{"type":"paragraph","position":{"start":{"line":735,"column":1},"end":{"line":735,"column":1}},"children":[{"type":"text","value":"Write a function that:","position":{"start":{"line":735,"column":1},"end":{"line":735,"column":1}},"key":"ES0zhIz42R"}],"key":"kXd0wHvL76"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":736,"column":1},"end":{"line":740,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":736,"column":1},"end":{"line":736,"column":1}},"children":[{"type":"text","value":"Uses a while loop to solve for E given M and e","position":{"start":{"line":736,"column":1},"end":{"line":736,"column":1}},"key":"B75oCqKED1"}],"key":"s1mAzYTffm"},{"type":"listItem","spread":true,"position":{"start":{"line":737,"column":1},"end":{"line":737,"column":1}},"children":[{"type":"text","value":"Stops when the change in E is less than 1e-10","position":{"start":{"line":737,"column":1},"end":{"line":737,"column":1}},"key":"UplmH5RBtJ"}],"key":"f184SVTUH3"},{"type":"listItem","spread":true,"position":{"start":{"line":738,"column":1},"end":{"line":738,"column":1}},"children":[{"type":"text","value":"Limits iterations to prevent infinite loops","position":{"start":{"line":738,"column":1},"end":{"line":738,"column":1}},"key":"MEvyYmaewb"}],"key":"w1mOayD8h4"},{"type":"listItem","spread":true,"position":{"start":{"line":739,"column":1},"end":{"line":740,"column":1}},"children":[{"type":"text","value":"Returns both E and the number of iterations","position":{"start":{"line":739,"column":1},"end":{"line":739,"column":1}},"key":"tfowHK37KS"}],"key":"N3kPUhg1DU"}],"key":"tGGDA8KWgI"},{"type":"paragraph","position":{"start":{"line":741,"column":1},"end":{"line":741,"column":1}},"children":[{"type":"text","value":"Test with e=0.5, M=π/4. How many iterations does it take?","position":{"start":{"line":741,"column":1},"end":{"line":741,"column":1}},"key":"atGQYEAVUI"}],"key":"wuzWZ6sNwf"}],"enumerated":true,"label":"exercise-zhjPP3keju","identifier":"exercise-zhjpp3keju","enumerator":"5","html_id":"exercise-zhjpp3keju","key":"ZvL5EEpGx1"},{"type":"thematicBreak","position":{"start":{"line":744,"column":1},"end":{"line":744,"column":1}},"key":"hWHslAsTgb"},{"type":"heading","depth":2,"position":{"start":{"line":746,"column":1},"end":{"line":746,"column":1}},"children":[{"type":"text","value":"Key Takeaways","position":{"start":{"line":746,"column":1},"end":{"line":746,"column":1}},"key":"HkDPmBVfly"}],"identifier":"key-takeaways","label":"Key Takeaways","html_id":"key-takeaways","implicit":true,"key":"OBSqrUSJQ2"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Chapter 2 Summary","position":{"start":{"line":748,"column":1},"end":{"line":748,"column":1}},"key":"j0NewUxPEv"}],"key":"c0DaQk5n6B"},{"type":"paragraph","position":{"start":{"line":751,"column":1},"end":{"line":751,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":751,"column":1},"end":{"line":751,"column":1}},"key":"i7hcKdVg6e"},{"type":"strong","position":{"start":{"line":751,"column":1},"end":{"line":751,"column":1}},"children":[{"type":"text","value":"Logic is Universal","position":{"start":{"line":751,"column":1},"end":{"line":751,"column":1}},"key":"Zy8ljX2IuN"}],"key":"wLTOaNWwdE"},{"type":"text","value":": From Aristotle to CPUs, logic underlies all reasoning","position":{"start":{"line":751,"column":1},"end":{"line":751,"column":1}},"key":"nhMhVP0zjv"}],"key":"H5sMTMUFLS"},{"type":"paragraph","position":{"start":{"line":753,"column":1},"end":{"line":753,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":753,"column":1},"end":{"line":753,"column":1}},"key":"moUYEQC1Wz"},{"type":"strong","position":{"start":{"line":753,"column":1},"end":{"line":753,"column":1}},"children":[{"type":"text","value":"Boolean Algebra","position":{"start":{"line":753,"column":1},"end":{"line":753,"column":1}},"key":"TXRbKaXQIC"}],"key":"fB1PZ9nhDx"},{"type":"text","value":": True/False operations follow mathematical rules (De Morgan’s Laws)","position":{"start":{"line":753,"column":1},"end":{"line":753,"column":1}},"key":"RpHirV4TLE"}],"key":"oSp0c4SIp4"},{"type":"paragraph","position":{"start":{"line":755,"column":1},"end":{"line":755,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":755,"column":1},"end":{"line":755,"column":1}},"key":"FuDZW7xfTe"},{"type":"strong","position":{"start":{"line":755,"column":1},"end":{"line":755,"column":1}},"children":[{"type":"text","value":"Truthiness","position":{"start":{"line":755,"column":1},"end":{"line":755,"column":1}},"key":"b4wB5eKzrd"}],"key":"ifdP20C1Db"},{"type":"text","value":": Empty containers and zeros are False; most everything else is True","position":{"start":{"line":755,"column":1},"end":{"line":755,"column":1}},"key":"fQfLHU1z2y"}],"key":"ahwWEt5VPw"},{"type":"paragraph","position":{"start":{"line":757,"column":1},"end":{"line":757,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":757,"column":1},"end":{"line":757,"column":1}},"key":"h148zUK4Xs"},{"type":"strong","position":{"start":{"line":757,"column":1},"end":{"line":757,"column":1}},"children":[{"type":"text","value":"Guard Clauses","position":{"start":{"line":757,"column":1},"end":{"line":757,"column":1}},"key":"shZzkbzkds"}],"key":"tvYhVCjb85"},{"type":"text","value":": Check error conditions first, keep happy path unindented","position":{"start":{"line":757,"column":1},"end":{"line":757,"column":1}},"key":"S7QR4YDVy2"}],"key":"EFhgCgs5rG"},{"type":"paragraph","position":{"start":{"line":759,"column":1},"end":{"line":759,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":759,"column":1},"end":{"line":759,"column":1}},"key":"eJVztf2ZMl"},{"type":"strong","position":{"start":{"line":759,"column":1},"end":{"line":759,"column":1}},"children":[{"type":"text","value":"For vs While","position":{"start":{"line":759,"column":1},"end":{"line":759,"column":1}},"key":"dRLRdzjkwj"}],"key":"pPskIVEvG2"},{"type":"text","value":": Use ","position":{"start":{"line":759,"column":1},"end":{"line":759,"column":1}},"key":"QHA77sRniG"},{"type":"inlineCode","value":"for","position":{"start":{"line":759,"column":1},"end":{"line":759,"column":1}},"key":"wBDZxloX6E"},{"type":"text","value":" when iterations are known, ","position":{"start":{"line":759,"column":1},"end":{"line":759,"column":1}},"key":"xyBUt4cY9W"},{"type":"inlineCode","value":"while","position":{"start":{"line":759,"column":1},"end":{"line":759,"column":1}},"key":"gXLcxYpZMe"},{"type":"text","value":" for conditions","position":{"start":{"line":759,"column":1},"end":{"line":759,"column":1}},"key":"n2vwCXwUnG"}],"key":"kirBIdwEaE"},{"type":"paragraph","position":{"start":{"line":761,"column":1},"end":{"line":761,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":761,"column":1},"end":{"line":761,"column":1}},"key":"GgrC6fvwM8"},{"type":"strong","position":{"start":{"line":761,"column":1},"end":{"line":761,"column":1}},"children":[{"type":"text","value":"Break/Continue/Else","position":{"start":{"line":761,"column":1},"end":{"line":761,"column":1}},"key":"TKehDPOTXH"}],"key":"ry4kYrIY8A"},{"type":"text","value":": Control loop flow precisely","position":{"start":{"line":761,"column":1},"end":{"line":761,"column":1}},"key":"ZF6M8ZPSbK"}],"key":"IV0zuO636n"},{"type":"paragraph","position":{"start":{"line":763,"column":1},"end":{"line":763,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":763,"column":1},"end":{"line":763,"column":1}},"key":"UryCdjdycL"},{"type":"strong","position":{"start":{"line":763,"column":1},"end":{"line":763,"column":1}},"children":[{"type":"text","value":"Comprehensions","position":{"start":{"line":763,"column":1},"end":{"line":763,"column":1}},"key":"mdi7KZGQD8"}],"key":"ozuGFlREvL"},{"type":"text","value":": Elegant one-liners for simple transformations","position":{"start":{"line":763,"column":1},"end":{"line":763,"column":1}},"key":"CbEgk9h7x7"}],"key":"PdS5UqP86y"},{"type":"paragraph","position":{"start":{"line":765,"column":1},"end":{"line":765,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":765,"column":1},"end":{"line":765,"column":1}},"key":"MeAg5YPB7S"},{"type":"strong","position":{"start":{"line":765,"column":1},"end":{"line":765,"column":1}},"children":[{"type":"text","value":"Patterns","position":{"start":{"line":765,"column":1},"end":{"line":765,"column":1}},"key":"C7H8mPnHKy"}],"key":"HGrZ8k0eov"},{"type":"text","value":": Accumulator, Search/Filter, and Convergence appear everywhere","position":{"start":{"line":765,"column":1},"end":{"line":765,"column":1}},"key":"VYWR21tLgv"}],"key":"UdT0mg7Cnq"}],"class":"success","key":"BZqnzsG26H"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Next Chapter Preview","position":{"start":{"line":768,"column":1},"end":{"line":768,"column":1}},"key":"pWeRFMGgM0"}],"key":"q08Lh7MTBU"},{"type":"paragraph","position":{"start":{"line":770,"column":1},"end":{"line":770,"column":1}},"children":[{"type":"text","value":"Chapter 3: Functions - Your First Abstraction. Learn to write reusable, testable code that does one thing well.","position":{"start":{"line":770,"column":1},"end":{"line":770,"column":1}},"key":"Q0NbPLC4g0"}],"key":"qR8Q6CKfSF"}],"class":"info","key":"kKiE69s6ga"},{"type":"heading","depth":2,"position":{"start":{"line":773,"column":1},"end":{"line":773,"column":1}},"children":[{"type":"text","value":"Quick Reference Card","position":{"start":{"line":773,"column":1},"end":{"line":773,"column":1}},"key":"oDXbcqJN0E"}],"identifier":"quick-reference-card","label":"Quick Reference Card","html_id":"quick-reference-card","implicit":true,"key":"bat5NMWetv"},{"type":"code","lang":"python","value":"# Comparisons\n<, >, <=, >=, ==, !=\nmath.isclose(a, b)  # For floats!\n\n# Logical operators (in order of precedence)\nnot x\nx and y  # Short-circuits\nx or y   # Short-circuits\n\n# If statements\nif condition:\n    pass\nelif other_condition:\n    pass\nelse:\n    pass\n\n# Guard clause pattern\nif error_condition:\n    return early\n# Happy path here\n\n# For loops\nfor i in range(n):  # 0 to n-1\nfor i, val in enumerate(list):  # Index and value\nfor item in collection:  # Direct iteration\n\n# While loops\nwhile condition:\n    # work\n    if done:\n        break\n    if skip:\n        continue\nelse:\n    # Runs if no break\n\n# Comprehensions\n[expr for item in iterable if condition]\n\n# Common patterns\ntotal = 0\nfor x in data:\n    total += x  # Accumulator","position":{"start":{"line":775,"column":1},"end":{"line":820,"column":1}},"key":"aE4fIXSARz"}],"key":"i4NPhQj8hb"}],"key":"wSevVSjniJ"},"references":{"cite":{"order":[],"data":{}}}}