{"version":2,"kind":"Article","sha256":"eb1cb35abf47e261a844ef0a758fc1b4b8c7a2a745bedf607d313f17e1765a84","slug":"chapter3-functions","location":"/04-computational-methods/python-fundamentals-v1/python-fundamentals/chapter3-functions.md","dependencies":[],"frontmatter":{"title":"Chapter 3: Functions - The Art of Abstraction","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Anna Rosen","given":"Anna","family":"Rosen"},"name":"Anna Rosen","orcid":"0000-0003-4423-0660","email":"alrosen@sdsu.edu","affiliations":["San Diego State University"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/astrobytes-edu/astr596-modeling-universe","subject":"Modeling the Universe","venue":{"title":"ASTR 596 - Fall 2025","url":"https://www.anna-rosen.com"},"keywords":["computational astrophysics","python","numerical methods","machine learning","monte carlo","neural networks","radiative transfer","bayesian inference","JAX"],"affiliations":[{"id":"San Diego State University","name":"San Diego State University"}],"numbering":{"title":{"offset":3}},"edit_url":"https://github.com/astrobytes-edu/astr596-modeling-universe/blob/main/04-computational-methods/python-fundamentals-v1/python-fundamentals/chapter3-functions.md","exports":[{"format":"md","filename":"chapter3-functions.md","url":"/chapter3-functions-15e9e6413b9106ab13564a7c8b671c05.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"“The function of good software is to make the complex appear to be simple.” - Grady Booch","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"i8CtlUkE5r"}],"key":"HYOG7hkeat"}],"key":"ErjO4Ks7Is"},{"type":"heading","depth":2,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Table of Contents","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"wduIzlOZgW"}],"identifier":"table-of-contents","label":"Table of Contents","html_id":"table-of-contents","implicit":true,"key":"TgjdPMvGZP"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":41,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Learning Objectives","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"UvFJQn3bIz"}],"identifier":"learning-objectives","label":"learning-objectives","kind":"heading","template":"{name}","resolved":true,"html_id":"learning-objectives","remote":true,"url":"/python-environment-v3","dataUrl":"/python-environment-v3.json","key":"FH4myanlv4"}],"key":"SHXAYMams0"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Why Functions Matter","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"tLZQwX7HEJ"}],"identifier":"why-functions-matter","label":"why-functions-matter","kind":"heading","template":"{name}","resolved":true,"html_id":"why-functions-matter","key":"NskFRjMqzD"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The Philosophy of Abstraction","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"FSmjMHnA0Z"}],"identifier":"the-philosophy-of-abstraction","label":"the-philosophy-of-abstraction","kind":"heading","template":"{name}","resolved":true,"html_id":"the-philosophy-of-abstraction","key":"noZgdPTxid"}],"key":"INxqNdfItr"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"DRY: Don’t Repeat Yourself","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"VXO6YS3Ek1"}],"identifier":"dry-dont-repeat-yourself","label":"dry-dont-repeat-yourself","kind":"heading","template":"{name}","resolved":true,"html_id":"dry-dont-repeat-yourself","key":"fh3Wq1PZax"}],"key":"CNAlYdAEKu"}],"key":"nBq1Grukf8"}],"key":"zIdXYei5ul"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Function Fundamentals","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"E5C8blFk1I"}],"identifier":"function-fundamentals","label":"function-fundamentals","kind":"heading","template":"{name}","resolved":true,"html_id":"function-fundamentals","key":"S4WAVelSoW"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":12,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Basic Syntax and Return","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"CHqjL3IACu"}],"identifier":"basic-syntax-and-return","label":"basic-syntax-and-return","kind":"heading","template":"{name}","resolved":true,"html_id":"basic-syntax-and-return","key":"IPtnFxRXWj"}],"key":"uLfRVWivBZ"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Parameters vs Arguments","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Cv3fjXL60j"}],"identifier":"parameters-vs-arguments","label":"parameters-vs-arguments","kind":"heading","template":"{name}","resolved":true,"html_id":"parameters-vs-arguments","key":"besUvJYVMA"}],"key":"DO8k7RoGVm"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"The None Return","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"GdruOTQ2oQ"}],"identifier":"the-none-return","label":"the-none-return","kind":"heading","template":"{name}","resolved":true,"html_id":"the-none-return","key":"gK1pxCDfxT"}],"key":"g2mG1HtGNx"}],"key":"iQIfL778tO"}],"key":"tI6H0gBAh0"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Function Arguments: The Full Story","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"I7l9gNyY3o"}],"identifier":"function-arguments-the-full-story","label":"function-arguments-the-full-story","kind":"heading","template":"{name}","resolved":true,"html_id":"function-arguments-the-full-story","key":"c0XT8OHyHG"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":16,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Positional Arguments","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"hYqUMCtuiN"}],"identifier":"positional-arguments","label":"positional-arguments","kind":"heading","template":"{name}","resolved":true,"html_id":"positional-arguments","key":"M7dcXtnIg1"}],"key":"BIt695LVPb"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Default Arguments and Their Dangers","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"QAx0ddHqx5"}],"identifier":"default-arguments-and-their-dangers","label":"default-arguments-and-their-dangers","kind":"heading","template":"{name}","resolved":true,"html_id":"default-arguments-and-their-dangers","key":"QtwHJgyaod"}],"key":"IUWrHs9Dcf"},{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Keyword Arguments","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"HgZCYDEXFG"}],"identifier":"keyword-arguments","label":"keyword-arguments","kind":"heading","template":"{name}","resolved":true,"html_id":"keyword-arguments","key":"cfiv336uHb"}],"key":"KGeTmBXlNp"},{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"link","url":"#args-variable-positional-arguments","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"*args: Variable Positional Arguments","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"knw35zXnGy"}],"urlSource":"#args-variable-positional-arguments","key":"FQjkNB2cva"}],"key":"kp6sr0IarE"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"link","url":"#kwargs-variable-keyword-arguments","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"**kwargs: Variable Keyword Arguments","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"ySB5m2dxsu"}],"urlSource":"#kwargs-variable-keyword-arguments","key":"iKV3h9URSN"}],"key":"xxQ0PQVxw6"},{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"The Complete Order","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"TzNHoCUeRU"}],"identifier":"the-complete-order","label":"the-complete-order","kind":"heading","template":"{name}","resolved":true,"html_id":"the-complete-order","key":"PL96ci2zdj"}],"key":"xB5en5AH6r"}],"key":"GrJD8746qQ"}],"key":"V8HuPf9DJy"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Scope and Namespaces","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"GbciqvAFTb"}],"identifier":"scope-and-namespaces","label":"scope-and-namespaces","kind":"heading","template":"{name}","resolved":true,"html_id":"scope-and-namespaces","key":"YpIXMGKZWO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":23,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"The LEGB Rule","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"fAtDDJZJA3"}],"identifier":"the-legb-rule","label":"the-legb-rule","kind":"heading","template":"{name}","resolved":true,"html_id":"the-legb-rule","remote":true,"url":"/python-functions-modules-v2","dataUrl":"/python-functions-modules-v2.json","key":"SDUEall48G"}],"key":"knVNohHSUD"},{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Global Variables: Handle with Care","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"pKZVoylai6"}],"identifier":"global-variables-handle-with-care","label":"global-variables-handle-with-care","kind":"heading","template":"{name}","resolved":true,"html_id":"global-variables-handle-with-care","key":"NARtqxAKrm"}],"key":"FI4IRztGlJ"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Nonlocal: Nested Function Scopes","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"SLnIZBOeci"}],"identifier":"nonlocal-nested-function-scopes","label":"nonlocal-nested-function-scopes","kind":"heading","template":"{name}","resolved":true,"html_id":"nonlocal-nested-function-scopes","key":"MZSWLZ3a8K"}],"key":"QMDkV5OnBs"}],"key":"NPGV5KQ155"}],"key":"zNwmnPdzST"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Functions as First-Class Objects","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"QIAzXP2rBu"}],"identifier":"functions-as-first-class-objects","label":"functions-as-first-class-objects","kind":"heading","template":"{name}","resolved":true,"html_id":"functions-as-first-class-objects","remote":true,"url":"/python-functions-modules-v2","dataUrl":"/python-functions-modules-v2.json","key":"XGaqAHkQV7"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":27,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Functions as Arguments","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"MMSs62EJ2B"}],"identifier":"functions-as-arguments","label":"functions-as-arguments","kind":"heading","template":"{name}","resolved":true,"html_id":"functions-as-arguments","key":"vQ4Dp6a7As"}],"key":"pnlhAMphQ5"},{"type":"listItem","spread":true,"position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Functions Returning Functions","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"KwWGX6Gas6"}],"identifier":"functions-returning-functions","label":"functions-returning-functions","kind":"heading","template":"{name}","resolved":true,"html_id":"functions-returning-functions","key":"lbIT8VZc5X"}],"key":"NAhMeePb6H"},{"type":"listItem","spread":true,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Lambda Functions","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"nV1KcFxOVo"}],"identifier":"lambda-functions","label":"lambda-functions","kind":"heading","template":"{name}","resolved":true,"html_id":"lambda-functions","remote":true,"url":"/python-functions-modules-v2","dataUrl":"/python-functions-modules-v2.json","key":"ylfMAAHshI"}],"key":"ZYYVz10E8E"},{"type":"listItem","spread":true,"position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"Decorators: Function Transformers","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"xu6uvyEiT9"}],"identifier":"decorators-function-transformers","label":"decorators-function-transformers","kind":"heading","template":"{name}","resolved":true,"html_id":"decorators-function-transformers","key":"ny5xcrrhJ9"}],"key":"DVkNzHSmux"}],"key":"lCX9Q2W6XT"}],"key":"df6VXfqi3H"},{"type":"listItem","spread":true,"position":{"start":{"line":31,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Documentation and Type Hints","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"gUujNM6MxT"}],"identifier":"documentation-and-type-hints","label":"documentation-and-type-hints","kind":"heading","template":"{name}","resolved":true,"html_id":"documentation-and-type-hints","key":"TqHVunr3oJ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":32,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Docstrings That Matter","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"SS9ziIKmWi"}],"identifier":"docstrings-that-matter","label":"docstrings-that-matter","kind":"heading","template":"{name}","resolved":true,"html_id":"docstrings-that-matter","key":"e5DKSHGyZr"}],"key":"eLCpWrvbEV"},{"type":"listItem","spread":true,"position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"Type Hints for Clarity","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"hIfroOuPWe"}],"identifier":"type-hints-for-clarity","label":"type-hints-for-clarity","kind":"heading","template":"{name}","resolved":true,"html_id":"type-hints-for-clarity","key":"wamHROfKK0"}],"key":"NGBDIs1DXx"}],"key":"Dae4In2SBX"}],"key":"mzwJ0lfZ7z"},{"type":"listItem","spread":true,"position":{"start":{"line":34,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"Advanced Patterns","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"al59PvxATB"}],"identifier":"advanced-patterns","label":"advanced-patterns","kind":"heading","template":"{name}","resolved":true,"html_id":"advanced-patterns","key":"q95ijcOzlx"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":35,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"A32B91RXNm"}],"identifier":"recursion","label":"recursion","kind":"heading","template":"{name}","resolved":true,"html_id":"recursion","key":"yLZupQqomD"}],"key":"EVmGLA4lxs"},{"type":"listItem","spread":true,"position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"link","url":"#closures","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"Closures","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"ENeKeHBPDa"}],"urlSource":"#closures","key":"aEsweMhk2N"}],"key":"q3GKNuIGZz"},{"type":"listItem","spread":true,"position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"Partial Functions","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"CoTeutaeQj"}],"identifier":"partial-functions","label":"partial-functions","kind":"heading","template":"{name}","resolved":true,"html_id":"partial-functions","key":"TDgae6ljrr"}],"key":"R13f9x5Zpn"}],"key":"cM2W18sUGK"}],"key":"hV8N6fLvZe"},{"type":"listItem","spread":true,"position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"Common Pitfalls and Best Practices","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"IRAqTBKNFJ"}],"identifier":"common-pitfalls-and-best-practices","label":"common-pitfalls-and-best-practices","kind":"heading","template":"{name}","resolved":true,"html_id":"common-pitfalls-and-best-practices","key":"v04al9Ockk"}],"key":"ngGWM00vyC"},{"type":"listItem","spread":true,"position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"J0bW8JX5xG"}],"identifier":"exercises","label":"exercises","kind":"heading","template":"{name}","resolved":true,"html_id":"exercises","remote":true,"url":"/jax-advanced-continued","dataUrl":"/jax-advanced-continued.json","key":"DsnLMlm95G"}],"key":"Cdo28dFSI3"},{"type":"listItem","spread":true,"position":{"start":{"line":40,"column":1},"end":{"line":41,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"Key Takeaways","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"XdHPvrLJXg"}],"identifier":"key-takeaways","label":"key-takeaways","kind":"heading","template":"{name}","resolved":true,"html_id":"key-takeaways","remote":true,"url":"/python-environment-v3","dataUrl":"/python-environment-v3.json","key":"vwFsmrQYYk"}],"key":"JFxA07WBOA"}],"key":"cBjt5PqAPu"},{"type":"thematicBreak","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"DqiDy3HL1G"},{"type":"heading","depth":2,"position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"children":[{"type":"text","value":"Learning Objectives","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"FimrDpKNsG"}],"identifier":"learning-objectives","label":"Learning Objectives","html_id":"learning-objectives","implicit":true,"key":"ipNMlISWfo"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"By the end of this chapter you will:","position":{"start":{"line":46,"column":1},"end":{"line":46,"column":1}},"key":"CVbpkvwXka"}],"key":"oskKP2nhsD"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":48,"column":1},"end":{"line":54,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"Write functions that are modular, reusable, and testable","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"reSvXR0CIU"}],"key":"EbDYpcdXBr"},{"type":"listItem","spread":true,"position":{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},"children":[{"type":"text","value":"Master all argument types: positional, keyword, *args, **kwargs","position":{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},"key":"CPbvqy5GPZ"}],"key":"k09Ks7wXRx"},{"type":"listItem","spread":true,"position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"children":[{"type":"text","value":"Understand scope rules and avoid common namespace pitfalls","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"QgyQU7AEpI"}],"key":"lZLflg34ZW"},{"type":"listItem","spread":true,"position":{"start":{"line":51,"column":1},"end":{"line":51,"column":1}},"children":[{"type":"text","value":"Use functions as first-class objects (pass, return, transform)","position":{"start":{"line":51,"column":1},"end":{"line":51,"column":1}},"key":"uyNgccJMdf"}],"key":"avedilMTGg"},{"type":"listItem","spread":true,"position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"children":[{"type":"text","value":"Write comprehensive docstrings and use type hints","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"key":"w9uetdPJuI"}],"key":"I2VHN43zvd"},{"type":"listItem","spread":true,"position":{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},"children":[{"type":"text","value":"Apply functional programming concepts to scientific code","position":{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},"key":"yT9falNLCo"}],"key":"zpqkdpA5Lh"},{"type":"listItem","spread":true,"position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"children":[{"type":"text","value":"Recognize when and how to use advanced patterns like decorators","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"F2QXADSEkF"}],"key":"BIpR70vkCD"}],"key":"Iuw90olmwm"}],"class":"info","key":"diMyoRaJaL"},{"type":"heading","depth":2,"position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"children":[{"type":"text","value":"Why Functions Matter","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"YuhvMIR5WA"}],"identifier":"why-functions-matter","label":"Why Functions Matter","html_id":"why-functions-matter","implicit":true,"key":"ZFkVvgJXln"},{"type":"heading","depth":3,"position":{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},"children":[{"type":"text","value":"The Philosophy of Abstraction","position":{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},"key":"mSAIp8AkxK"}],"identifier":"the-philosophy-of-abstraction","label":"The Philosophy of Abstraction","html_id":"the-philosophy-of-abstraction","implicit":true,"key":"ZvhjbSaqw3"},{"type":"paragraph","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"Functions are humanity’s tool for managing complexity. They let us think at different levels:","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"lKNGyZcKU9"}],"key":"g1rJXolFQz"}],"key":"X0i7pyhfAo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Level 1: The messy details\ndef calculate_schwarzschild_radius_verbose():\n    G = 6.67430e-11  # gravitational constant in m³/kg/s²\n    c = 299792458    # speed of light in m/s\n    M = 1.98892e30   # solar mass in kg\n    \n    # Schwarzschild radius formula\n    numerator = 2 * G * M\n    denominator = c * c\n    r_s = numerator / denominator\n    \n    print(f\"For calculation:\")\n    print(f\"  G = {G:.5e} m³/kg/s²\")\n    print(f\"  c = {c:.5e} m/s\")\n    print(f\"  M = {M:.5e} kg\")\n    print(f\"  r_s = 2GM/c² = {r_s:.3f} m\")\n    \n    return r_s\n\n# Level 2: The abstraction\ndef schwarzschild_radius(mass_kg):\n    \"\"\"Calculate Schwarzschild radius for given mass.\"\"\"\n    G = 6.67430e-11\n    c = 299792458\n    return 2 * G * mass_kg / c**2\n\n# Level 3: The application\ndef is_black_hole(mass_kg, radius_m):\n    \"\"\"Check if object is within its Schwarzschild radius.\"\"\"\n    return radius_m < schwarzschild_radius(mass_kg)\n\n# Now we can think at the problem level, not the math level\nsolar_mass = 1.98892e30\nprint(f\"Sun compressed to 1km: Black hole? {is_black_hole(solar_mass, 1000)}\")\nprint(f\"Sun compressed to 10km: Black hole? {is_black_hole(solar_mass, 10000)}\")","key":"ZLUuXUKmCV"},{"type":"output","id":"GE8E9EdHsgRMPw8CRRCDh","data":[],"key":"HxQxR43Lco"}],"key":"w3UUEYacYw"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"children":[{"type":"text","value":"DRY: Don’t Repeat Yourself","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"key":"bAMV70dzNe"}],"identifier":"dry-dont-repeat-yourself","label":"DRY: Don’t Repeat Yourself","html_id":"dry-dont-repeat-yourself","implicit":true,"key":"fNp2TVbkDP"},{"type":"paragraph","position":{"start":{"line":103,"column":1},"end":{"line":103,"column":1}},"children":[{"type":"text","value":"Every duplicated piece of code is a bug waiting to happen:","position":{"start":{"line":103,"column":1},"end":{"line":103,"column":1}},"key":"pZ3O3zVLri"}],"key":"jPl9F3Q2jU"}],"key":"X5IdmWkbkR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# ❌ BAD: Repeated code\nmag1 = 5.2\nflux1 = 100 * 10**(-0.4 * mag1)  # Pogson's formula\nprint(f\"Magnitude {mag1} → Flux {flux1:.2f}\")\n\nmag2 = 3.7\nflux2 = 100 * 10**(-0.4 * mag2)  # Same formula, repeated\nprint(f\"Magnitude {mag2} → Flux {flux2:.2f}\")\n\nmag3 = 6.1\nflux3 = 100 * 10**(-0.4 * mag3)  # And again...\nprint(f\"Magnitude {mag3} → Flux {flux3:.2f}\")\n\nprint(\"\\n\" + \"=\"*40 + \"\\n\")\n\n# ✅ GOOD: Function eliminates repetition\ndef magnitude_to_flux(magnitude, zero_point_flux=100):\n    \"\"\"Convert astronomical magnitude to flux using Pogson's formula.\"\"\"\n    return zero_point_flux * 10**(-0.4 * magnitude)\n\n# Now if we need to change the formula, we change it in ONE place\nfor mag in [5.2, 3.7, 6.1]:\n    flux = magnitude_to_flux(mag)\n    print(f\"Magnitude {mag} → Flux {flux:.2f}\")","key":"GIhAhVTQPU"},{"type":"output","id":"YjspdB5KbBu7v-1To3KC6","data":[],"key":"neTj4azAhx"}],"key":"wUwT4YsH7U"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"key":"XscMiYbf36"},{"type":"heading","depth":2,"position":{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},"children":[{"type":"text","value":"Function Fundamentals","position":{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},"key":"HH0rciHW3u"}],"identifier":"function-fundamentals","label":"Function Fundamentals","html_id":"function-fundamentals","implicit":true,"key":"Llla9Pa7nL"},{"type":"heading","depth":3,"position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"children":[{"type":"text","value":"Basic Syntax and Return","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"wiANoMFcMv"}],"identifier":"basic-syntax-and-return","label":"Basic Syntax and Return","html_id":"basic-syntax-and-return","implicit":true,"key":"SP7sWykqqk"}],"key":"MAl5zfAW7j"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def kinetic_energy(mass, velocity):\n    \"\"\"\n    Calculate kinetic energy.\n    \n    Parameters\n    ----------\n    mass : float\n        Mass in kg\n    velocity : float\n        Velocity in m/s\n        \n    Returns\n    -------\n    float\n        Kinetic energy in Joules\n    \"\"\"\n    return 0.5 * mass * velocity**2\n\n# Multiple return values\ndef orbital_parameters(semi_major_axis_au, eccentricity):\n    \"\"\"Calculate perihelion and aphelion distances.\"\"\"\n    perihelion = semi_major_axis_au * (1 - eccentricity)\n    aphelion = semi_major_axis_au * (1 + eccentricity)\n    return perihelion, aphelion  # Returns a tuple\n\n# Using the functions\nenergy = kinetic_energy(1000, 7900)  # 1000kg at orbital velocity\nprint(f\"Kinetic energy: {energy:.2e} J\")\n\nperi, aph = orbital_parameters(1.0, 0.0167)  # Earth's orbit\nprint(f\"Earth: Perihelion = {peri:.3f} AU, Aphelion = {aph:.3f} AU\")","key":"lfWo5SlSpG"},{"type":"output","id":"h7LiUaiDTNC5qcNEnpaTL","data":[],"key":"ZFK2BACBoi"}],"key":"OjDChIekFI"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":172,"column":1},"end":{"line":172,"column":1}},"children":[{"type":"text","value":"Parameters vs Arguments","position":{"start":{"line":172,"column":1},"end":{"line":172,"column":1}},"key":"tv8aUtL4KI"}],"identifier":"parameters-vs-arguments","label":"Parameters vs Arguments","html_id":"parameters-vs-arguments","implicit":true,"key":"H7L5Z9xRQB"}],"key":"ZpER5qUrHK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Parameters are the variables in the function definition\ndef greet(name, greeting=\"Hello\"):  # 'name' and 'greeting' are parameters\n    return f\"{greeting}, {name}!\"\n\n# Arguments are the actual values passed when calling\nresult = greet(\"Andromeda\", \"Greetings\")  # \"Andromeda\" and \"Greetings\" are arguments\nprint(result)\n\n# This distinction matters when discussing function behavior!","key":"Bun0VmZGjS"},{"type":"output","id":"TS_mqKuJneaU3nXUuVLoz","data":[],"key":"fPKrinheTY"}],"key":"HHaK1yEF3z"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":186,"column":1},"end":{"line":186,"column":1}},"children":[{"type":"text","value":"The None Return","position":{"start":{"line":186,"column":1},"end":{"line":186,"column":1}},"key":"rIRJOHoHzQ"}],"identifier":"the-none-return","label":"The None Return","html_id":"the-none-return","implicit":true,"key":"DK0GbVj0zD"},{"type":"paragraph","position":{"start":{"line":188,"column":1},"end":{"line":188,"column":1}},"children":[{"type":"text","value":"Functions always return something, even if you don’t specify:","position":{"start":{"line":188,"column":1},"end":{"line":188,"column":1}},"key":"EHVBUCV2Fg"}],"key":"EV3HnBRFmx"}],"key":"VvRoTVKWJo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def print_only(message):\n    \"\"\"This function doesn't explicitly return anything.\"\"\"\n    print(f\"Message: {message}\")\n    # Implicit: return None\n\nresult = print_only(\"Testing\")\nprint(f\"Return value: {result}\")\nprint(f\"Type: {type(result)}\")\n\n# Explicit None return for early exit\ndef safe_divide(a, b):\n    \"\"\"Divide with safety check.\"\"\"\n    if b == 0:\n        return None  # Explicit None for error case\n    return a / b\n\nprint(f\"10/2 = {safe_divide(10, 2)}\")\nprint(f\"10/0 = {safe_divide(10, 0)}\")","key":"Gm4L86SE9P"},{"type":"output","id":"NZgWeC6CzKzYWCF135Dgq","data":[],"key":"lmOOCVnnWV"}],"key":"tPKrjsvnzr"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":211,"column":1},"end":{"line":211,"column":1}},"key":"B1fXTgz8ug"},{"type":"heading","depth":2,"position":{"start":{"line":213,"column":1},"end":{"line":213,"column":1}},"children":[{"type":"text","value":"Function Arguments: The Full Story","position":{"start":{"line":213,"column":1},"end":{"line":213,"column":1}},"key":"Ok8uQtGrsu"}],"identifier":"function-arguments-the-full-story","label":"Function Arguments: The Full Story","html_id":"function-arguments-the-full-story","implicit":true,"key":"y314PU0Cwz"},{"type":"heading","depth":3,"position":{"start":{"line":215,"column":1},"end":{"line":215,"column":1}},"children":[{"type":"text","value":"Positional Arguments","position":{"start":{"line":215,"column":1},"end":{"line":215,"column":1}},"key":"yDuN6cN4dn"}],"identifier":"positional-arguments","label":"Positional Arguments","html_id":"positional-arguments","implicit":true,"key":"aJQPySDtEh"},{"type":"paragraph","position":{"start":{"line":217,"column":1},"end":{"line":217,"column":1}},"children":[{"type":"text","value":"Order matters for positional arguments:","position":{"start":{"line":217,"column":1},"end":{"line":217,"column":1}},"key":"vzJsW49OXw"}],"key":"qL56ejZRe5"}],"key":"AA1kDaCrDS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def calculate_redshift(observed_wavelength, rest_wavelength):\n    \"\"\"Calculate redshift z from wavelengths.\"\"\"\n    return (observed_wavelength - rest_wavelength) / rest_wavelength\n\n# Order matters!\nz1 = calculate_redshift(656.3, 486.1)  # Wrong order\nz2 = calculate_redshift(486.1, 656.3)  # Also wrong\nz_correct = calculate_redshift(750.0, 656.3)  # Correct: observed, then rest\n\nprint(f\"Wrong: z = {z1:.3f}\")\nprint(f\"Also wrong: z = {z2:.3f}\")\nprint(f\"Correct (H-alpha redshifted): z = {z_correct:.3f}\")","key":"oT9IEQ4Toi"},{"type":"output","id":"CivuquLj26QGt4o0MENns","data":[],"key":"zQwMEWqCkw"}],"key":"StHJD8BIsV"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":234,"column":1},"end":{"line":234,"column":1}},"children":[{"type":"text","value":"Default Arguments and Their Dangers","position":{"start":{"line":234,"column":1},"end":{"line":234,"column":1}},"key":"ywB88zUQAd"}],"identifier":"default-arguments-and-their-dangers","label":"Default Arguments and Their Dangers","html_id":"default-arguments-and-their-dangers","implicit":true,"key":"Fej6NxWWYE"},{"type":"paragraph","position":{"start":{"line":236,"column":1},"end":{"line":236,"column":1}},"children":[{"type":"text","value":"Default arguments are evaluated ONCE when the function is defined:","position":{"start":{"line":236,"column":1},"end":{"line":236,"column":1}},"key":"jsYAweL3zm"}],"key":"xTJbVVsENq"}],"key":"JTOvGFuWCG"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# ⚠️ DANGER: Mutable default argument\ndef add_observation_bad(obs, obs_list=[]):  # DON'T DO THIS!\n    obs_list.append(obs)\n    return obs_list\n\n# Watch what happens:\nlist1 = add_observation_bad(\"Galaxy A\")\nlist2 = add_observation_bad(\"Galaxy B\")  # Where did Galaxy A come from?!\nprint(f\"list1: {list1}\")\nprint(f\"list2: {list2}\")\nprint(f\"Same object? {list1 is list2}\")  # They're the same list!\n\nprint(\"\\n\" + \"=\"*40 + \"\\n\")\n\n# ✅ CORRECT: Use None as default for mutable objects\ndef add_observation_good(obs, obs_list=None):\n    if obs_list is None:\n        obs_list = []  # Create new list each time\n    obs_list.append(obs)\n    return obs_list\n\n# Now it works correctly:\nlist3 = add_observation_good(\"Galaxy C\")\nlist4 = add_observation_good(\"Galaxy D\")\nprint(f\"list3: {list3}\")\nprint(f\"list4: {list4}\")\nprint(f\"Same object? {list3 is list4}\")  # Different lists!","key":"Zt5WAFJp5o"},{"type":"output","id":"BJ09u3b8oI78OT20pLWKa","data":[],"key":"RWHZYLv3RN"}],"key":"OoN7ij5rvC"},{"type":"block","children":[{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"The Mutable Default Trap","position":{"start":{"line":268,"column":1},"end":{"line":268,"column":1}},"key":"da3NDWGycc"}],"key":"Iu93mkwxGJ"},{"type":"paragraph","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"children":[{"type":"text","value":"This is one of Python’s most common gotchas!","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"zDloXn6xSg"}],"key":"ETBjkvkqiJ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":270,"column":1},"end":{"line":272,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":270,"column":1},"end":{"line":270,"column":1}},"children":[{"type":"text","value":"Default values are evaluated ONCE when the function is defined","position":{"start":{"line":270,"column":1},"end":{"line":270,"column":1}},"key":"xxTi0Bi4Tk"}],"key":"lNZuvzKBNK"},{"type":"listItem","spread":true,"position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"children":[{"type":"text","value":"Lists, dicts, and sets are mutable and will be shared across calls","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"key":"jl2MQtRPDs"}],"key":"mqdN4lGxDH"},{"type":"listItem","spread":true,"position":{"start":{"line":272,"column":1},"end":{"line":272,"column":1}},"children":[{"type":"text","value":"Always use ","position":{"start":{"line":272,"column":1},"end":{"line":272,"column":1}},"key":"eFkLjwIHnY"},{"type":"inlineCode","value":"None","position":{"start":{"line":272,"column":1},"end":{"line":272,"column":1}},"key":"nEyn0hBnRe"},{"type":"text","value":" as default for mutable objects","position":{"start":{"line":272,"column":1},"end":{"line":272,"column":1}},"key":"pvyMV9ghM5"}],"key":"e4WDxW9GQL"}],"key":"WzNVYPcXje"}],"key":"DMl5gDaCAK"},{"type":"heading","depth":3,"position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"children":[{"type":"text","value":"Keyword Arguments","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"P0UcToS5Rr"}],"identifier":"keyword-arguments","label":"Keyword Arguments","html_id":"keyword-arguments","implicit":true,"key":"TDvvYOH17R"},{"type":"paragraph","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"children":[{"type":"text","value":"Use names for clarity and flexibility:","position":{"start":{"line":277,"column":1},"end":{"line":277,"column":1}},"key":"undPvehbzD"}],"key":"AS6LKUMhlx"}],"key":"BOrH63yRvD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def simulate_orbit(\n    mass1, mass2,  # Positional arguments\n    eccentricity=0,  # Keyword arguments with defaults\n    inclination=0,\n    time_steps=1000,\n    integrator=\"verlet\"\n):\n    \"\"\"Simulate a two-body orbit.\"\"\"\n    print(f\"Simulating: M1={mass1}, M2={mass2}\")\n    print(f\"  e={eccentricity}, i={inclination}°\")\n    print(f\"  {time_steps} steps using {integrator}\")\n    return f\"Orbit data for {time_steps} steps\"\n\n# Can use positional and keyword arguments\nresult1 = simulate_orbit(1.0, 0.5)  # Just positional\nresult2 = simulate_orbit(1.0, 0.5, eccentricity=0.3)  # Mix\nresult3 = simulate_orbit(1.0, 0.5, time_steps=5000, eccentricity=0.1)  # Any order for keywords!","key":"rMlBpBkD4k"},{"type":"output","id":"0sRBthLRol-e5Ih0LkUce","data":[],"key":"bbljP7cZJg"}],"key":"xqtfHJ47e2"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"children":[{"type":"text","value":"*args: Variable Positional Arguments","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"key":"hJbu1Ad7kd"}],"identifier":"id-args-variable-positional-arguments","label":"*args: Variable Positional Arguments","html_id":"id-args-variable-positional-arguments","implicit":true,"key":"fXeOJ59LZH"},{"type":"paragraph","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"children":[{"type":"text","value":"Accept any number of positional arguments:","position":{"start":{"line":301,"column":1},"end":{"line":301,"column":1}},"key":"I5SRdCg1Nb"}],"key":"w7I0fJGJyb"}],"key":"LK7yomeFfu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def total_luminosity(*star_luminosities):\n    \"\"\"\n    Calculate total luminosity of multiple stars.\n    \n    Parameters\n    ----------\n    *star_luminosities : float\n        Variable number of luminosity values (solar units)\n    \"\"\"\n    print(f\"Received {len(star_luminosities)} stars\")\n    print(f\"Type of args: {type(star_luminosities)}\")  # It's a tuple!\n    \n    total = sum(star_luminosities)\n    return total\n\n# Can call with any number of arguments\nprint(f\"Single star: {total_luminosity(1.0)} L☉\")\nprint(f\"Binary: {total_luminosity(1.0, 0.5)} L☉\")\nprint(f\"Cluster: {total_luminosity(1.0, 0.5, 2.3, 0.1, 3.5)} L☉\")\n\n# Can also unpack a list with *\ncluster = [1.0, 0.5, 2.3, 0.1, 3.5]\nprint(f\"From list: {total_luminosity(*cluster)} L☉\")  # Note the *","key":"o0TgBNs28w"},{"type":"output","id":"JeEbv-zhuVrtdI7cs1Nk7","data":[],"key":"exiysG5Z5l"}],"key":"MZ1zqqiXBa"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":329,"column":1},"end":{"line":329,"column":1}},"children":[{"type":"text","value":"**kwargs: Variable Keyword Arguments","position":{"start":{"line":329,"column":1},"end":{"line":329,"column":1}},"key":"ahkvIZBNKR"}],"identifier":"id-kwargs-variable-keyword-arguments","label":"**kwargs: Variable Keyword Arguments","html_id":"id-kwargs-variable-keyword-arguments","implicit":true,"key":"hpGAskFfUA"},{"type":"paragraph","position":{"start":{"line":331,"column":1},"end":{"line":331,"column":1}},"children":[{"type":"text","value":"Accept any number of keyword arguments:","position":{"start":{"line":331,"column":1},"end":{"line":331,"column":1}},"key":"y0BS22adQ0"}],"key":"PxgEZeQI5i"}],"key":"QZ37fNfF6N"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def create_star_catalog(**star_properties):\n    \"\"\"\n    Create a star catalog with arbitrary properties.\n    \n    Parameters\n    ----------\n    **star_properties : various\n        Arbitrary keyword arguments for star properties\n    \"\"\"\n    print(f\"Type of kwargs: {type(star_properties)}\")  # It's a dict!\n    \n    catalog = \"Star Catalog:\\n\"\n    for property_name, value in star_properties.items():\n        catalog += f\"  {property_name}: {value}\\n\"\n    \n    return catalog\n\n# Can pass any keyword arguments\nprint(create_star_catalog(\n    name=\"Sirius A\",\n    spectral_type=\"A1V\",\n    magnitude=-1.46,\n    distance_pc=2.64\n))\n\n# Can also unpack a dictionary with **\nvega_data = {\n    'name': 'Vega',\n    'spectral_type': 'A0V',\n    'magnitude': 0.03,\n    'distance_pc': 7.68,\n    'rotation_km_s': 236\n}\nprint(create_star_catalog(**vega_data))  # Note the **","key":"DtOMx6BPiw"},{"type":"output","id":"1qwPqPMNMrMVa9IijxZxf","data":[],"key":"L59MJUWLyp"}],"key":"IXAlroPeqZ"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":370,"column":1},"end":{"line":370,"column":1}},"children":[{"type":"text","value":"The Complete Order","position":{"start":{"line":370,"column":1},"end":{"line":370,"column":1}},"key":"GQrbacdZPB"}],"identifier":"the-complete-order","label":"The Complete Order","html_id":"the-complete-order","implicit":true,"key":"tSXDUQ8mN8"},{"type":"paragraph","position":{"start":{"line":372,"column":1},"end":{"line":372,"column":1}},"children":[{"type":"text","value":"When combining all argument types, they must appear in this order:","position":{"start":{"line":372,"column":1},"end":{"line":372,"column":1}},"key":"sLQvulqDNL"}],"key":"bdlslbW0al"}],"key":"LYenfhvEEs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def ultimate_function(\n    pos1, pos2,           # Regular positional arguments\n    *args,                # Variable positional arguments\n    kwonly1, kwonly2=10,  # Keyword-only arguments (after *args)\n    **kwargs              # Variable keyword arguments\n):\n    \"\"\"Demonstrates the complete argument order.\"\"\"\n    print(f\"Positional: {pos1}, {pos2}\")\n    print(f\"*args: {args}\")\n    print(f\"Keyword-only: {kwonly1}, {kwonly2}\")\n    print(f\"**kwargs: {kwargs}\")\n\n# Must provide keyword-only arguments by name\nultimate_function(\n    1, 2,                    # Positional\n    3, 4, 5,                 # Extra positional (*args)\n    kwonly1=\"required\",      # Keyword-only (required)\n    kwonly2=\"optional\",      # Keyword-only (has default)\n    extra1=\"bonus\",          # Extra keywords (**kwargs)\n    extra2=\"more\"\n)\n\n# Force keyword-only without *args using bare *\ndef keyword_only_example(*, name, value=0):\n    \"\"\"After *, all arguments must be passed by name.\"\"\"\n    return f\"{name} = {value}\"\n\n# keyword_only_example(\"test\", 5)  # ERROR: won't work\nprint(keyword_only_example(name=\"test\", value=5))  # Must use names","key":"MnBUNzbOH9"},{"type":"output","id":"wMY3fFS-AG_OYNxdDd17F","data":[],"key":"rL44MZ0mPN"}],"key":"PpfZhMjfCy"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":406,"column":1},"end":{"line":406,"column":1}},"key":"HU1hsJNudH"},{"type":"heading","depth":2,"position":{"start":{"line":408,"column":1},"end":{"line":408,"column":1}},"children":[{"type":"text","value":"Scope and Namespaces","position":{"start":{"line":408,"column":1},"end":{"line":408,"column":1}},"key":"tx1R5wGA62"}],"identifier":"scope-and-namespaces","label":"Scope and Namespaces","html_id":"scope-and-namespaces","implicit":true,"key":"YXhCAXPbcq"},{"type":"heading","depth":3,"position":{"start":{"line":410,"column":1},"end":{"line":410,"column":1}},"children":[{"type":"text","value":"The LEGB Rule","position":{"start":{"line":410,"column":1},"end":{"line":410,"column":1}},"key":"eR9Mt47Z9T"}],"identifier":"the-legb-rule","label":"The LEGB Rule","html_id":"the-legb-rule","implicit":true,"key":"OqbNOOjTxl"},{"type":"paragraph","position":{"start":{"line":412,"column":1},"end":{"line":412,"column":1}},"children":[{"type":"text","value":"Python searches for variables in this order: Local → Enclosing → Global → Built-in","position":{"start":{"line":412,"column":1},"end":{"line":412,"column":1}},"key":"DXwh9ejyGW"}],"key":"DOfeahERGA"}],"key":"meWK2BxrHw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Global scope\ngalaxy_name = \"Milky Way\"  # Global variable\n\ndef outer_function():\n    # Enclosing scope\n    star_count = 400_000_000_000  # Enclosing for inner_function\n    \n    def inner_function():\n        # Local scope\n        planet_count = 8  # Local variable\n        \n        # LEGB in action\n        print(f\"Local: {planet_count} planets\")\n        print(f\"Enclosing: {star_count} stars\")\n        print(f\"Global: In the {galaxy_name}\")\n        print(f\"Built-in: sum function is {sum}\")\n        \n    inner_function()\n\nouter_function()\n\n# Shadowing: Local variables can hide outer ones\ndef shadow_example():\n    galaxy_name = \"Andromeda\"  # Shadows global galaxy_name\n    print(f\"Inside function: {galaxy_name}\")\n\nshadow_example()\nprint(f\"Outside function: {galaxy_name}\")  # Global unchanged","key":"qkwGL7Y9Pe"},{"type":"output","id":"5TAbBrZuzvGeZScrvYgQT","data":[],"key":"Ox5i7XW2Bb"}],"key":"tLzfVJX2kX"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":445,"column":1},"end":{"line":445,"column":1}},"children":[{"type":"text","value":"Global Variables: Handle with Care","position":{"start":{"line":445,"column":1},"end":{"line":445,"column":1}},"key":"p9QwL5SK0Y"}],"identifier":"global-variables-handle-with-care","label":"Global Variables: Handle with Care","html_id":"global-variables-handle-with-care","implicit":true,"key":"NnmEDj8nSP"}],"key":"EF1cnUsVPp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Global variable (generally avoid these!)\nobservation_count = 0\n\ndef add_observation_global():\n    global observation_count  # Declare we're modifying global\n    observation_count += 1\n    return observation_count\n\n# Modifying global state (usually bad practice)\nprint(f\"Initial count: {observation_count}\")\nadd_observation_global()\nadd_observation_global()\nprint(f\"After two calls: {observation_count}\")\n\n# Better approach: Pass and return state\ndef add_observation_pure(count):\n    \"\"\"Pure function - no side effects.\"\"\"\n    return count + 1\n\n# Much cleaner and testable\ncount = 0\ncount = add_observation_pure(count)\ncount = add_observation_pure(count)\nprint(f\"Pure function result: {count}\")","key":"ICaBDZApDl"},{"type":"output","id":"vOWe4IpfdbmoNLrOFboj4","data":[],"key":"jGtOtPb450"}],"key":"ExldOG6sgk"},{"type":"block","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Why Avoid Global Variables?","position":{"start":{"line":474,"column":1},"end":{"line":474,"column":1}},"key":"kuGeUcN8bk"}],"key":"EimJqDEEoK"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":476,"column":1},"end":{"line":480,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":476,"column":1},"end":{"line":476,"column":1}},"children":[{"type":"text","value":"Makes code hard to test (tests affect each other)","position":{"start":{"line":476,"column":1},"end":{"line":476,"column":1}},"key":"zZdsvfOreJ"}],"key":"VPTt9mE0Qr"},{"type":"listItem","spread":true,"position":{"start":{"line":477,"column":1},"end":{"line":477,"column":1}},"children":[{"type":"text","value":"Creates hidden dependencies","position":{"start":{"line":477,"column":1},"end":{"line":477,"column":1}},"key":"kNrUr9k17A"}],"key":"D90X51FJEc"},{"type":"listItem","spread":true,"position":{"start":{"line":478,"column":1},"end":{"line":478,"column":1}},"children":[{"type":"text","value":"Concurrent code becomes dangerous","position":{"start":{"line":478,"column":1},"end":{"line":478,"column":1}},"key":"G4RX0i0Sm1"}],"key":"MbjUGrar6D"},{"type":"listItem","spread":true,"position":{"start":{"line":479,"column":1},"end":{"line":480,"column":1}},"children":[{"type":"text","value":"Debugging becomes difficult","position":{"start":{"line":479,"column":1},"end":{"line":479,"column":1}},"key":"hsgFw0x0rE"}],"key":"Y7i3saDyUT"}],"key":"aUHhLB7eHe"},{"type":"paragraph","position":{"start":{"line":481,"column":1},"end":{"line":481,"column":1}},"children":[{"type":"strong","position":{"start":{"line":481,"column":1},"end":{"line":481,"column":1}},"children":[{"type":"text","value":"Better alternatives:","position":{"start":{"line":481,"column":1},"end":{"line":481,"column":1}},"key":"RE5fqiyGhL"}],"key":"nX8OKVMGST"}],"key":"cNLTWXHzuv"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":482,"column":1},"end":{"line":484,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":482,"column":1},"end":{"line":482,"column":1}},"children":[{"type":"text","value":"Pass parameters explicitly","position":{"start":{"line":482,"column":1},"end":{"line":482,"column":1}},"key":"c0HT04Qqqn"}],"key":"CvuMAs3NX7"},{"type":"listItem","spread":true,"position":{"start":{"line":483,"column":1},"end":{"line":483,"column":1}},"children":[{"type":"text","value":"Use classes to encapsulate state","position":{"start":{"line":483,"column":1},"end":{"line":483,"column":1}},"key":"geOuXVfDVn"}],"key":"tTibwRG51q"},{"type":"listItem","spread":true,"position":{"start":{"line":484,"column":1},"end":{"line":484,"column":1}},"children":[{"type":"text","value":"Return updated values","position":{"start":{"line":484,"column":1},"end":{"line":484,"column":1}},"key":"hQqouXLJFE"}],"key":"GOOduplg9v"}],"key":"Jn5kl7ipME"}],"class":"warning","key":"t1HEW1vlh4"},{"type":"heading","depth":3,"position":{"start":{"line":487,"column":1},"end":{"line":487,"column":1}},"children":[{"type":"text","value":"Nonlocal: Nested Function Scopes","position":{"start":{"line":487,"column":1},"end":{"line":487,"column":1}},"key":"ZTgbHdxz71"}],"identifier":"nonlocal-nested-function-scopes","label":"Nonlocal: Nested Function Scopes","html_id":"nonlocal-nested-function-scopes","implicit":true,"key":"gkEnI4z5eD"}],"key":"DA3iEPbtNa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def make_counter():\n    \"\"\"Create a closure that counts calls.\"\"\"\n    count = 0\n    \n    def increment():\n        nonlocal count  # Modify enclosing scope variable\n        count += 1\n        return count\n    \n    return increment\n\n# Create independent counters\ncounter1 = make_counter()\ncounter2 = make_counter()\n\nprint(f\"Counter1: {counter1()}, {counter1()}, {counter1()}\")\nprint(f\"Counter2: {counter2()}, {counter2()}\")  # Independent!","key":"mwhRj1TERE"},{"type":"output","id":"YEJrlyTzEa6zZ069-IqMp","data":[],"key":"ccbBNtbPek"}],"key":"fk64nQ5NJL"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":509,"column":1},"end":{"line":509,"column":1}},"key":"gPeishuNe5"},{"type":"heading","depth":2,"position":{"start":{"line":511,"column":1},"end":{"line":511,"column":1}},"children":[{"type":"text","value":"Functions as First-Class Objects","position":{"start":{"line":511,"column":1},"end":{"line":511,"column":1}},"key":"blRjJ0mxXp"}],"identifier":"functions-as-first-class-objects","label":"Functions as First-Class Objects","html_id":"functions-as-first-class-objects","implicit":true,"key":"gedB4V0g9k"},{"type":"paragraph","position":{"start":{"line":513,"column":1},"end":{"line":513,"column":1}},"children":[{"type":"text","value":"In Python, functions are objects like any other - you can pass them, return them, and store them:","position":{"start":{"line":513,"column":1},"end":{"line":513,"column":1}},"key":"V8uriHIsIc"}],"key":"Li3SHTQBw1"},{"type":"heading","depth":3,"position":{"start":{"line":515,"column":1},"end":{"line":515,"column":1}},"children":[{"type":"text","value":"Functions as Arguments","position":{"start":{"line":515,"column":1},"end":{"line":515,"column":1}},"key":"G1C6Wqipza"}],"identifier":"functions-as-arguments","label":"Functions as Arguments","html_id":"functions-as-arguments","implicit":true,"key":"HkcfHUlbtL"}],"key":"OJF8OL2Xiv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import math\n\ndef apply_to_list(data, function):\n    \"\"\"Apply a function to each element in a list.\"\"\"\n    return [function(x) for x in data]\n\n# Different functions to apply\nmagnitudes = [1.5, 2.3, 0.8, 3.1]\n\n# Pass different functions\nfluxes = apply_to_list(magnitudes, lambda m: 10**(-0.4 * m))\nlogs = apply_to_list(magnitudes, math.log10)\nsquares = apply_to_list(magnitudes, lambda x: x**2)\n\nprint(f\"Magnitudes: {magnitudes}\")\nprint(f\"To fluxes: {[f'{f:.3f}' for f in fluxes]}\")\nprint(f\"Logarithms: {[f'{l:.3f}' for l in logs]}\")\nprint(f\"Squares: {[f'{s:.3f}' for s in squares]}\")\n\n# Real example: Numerical integration with different functions\ndef integrate(func, a, b, n=1000):\n    \"\"\"Simple numerical integration using rectangles.\"\"\"\n    dx = (b - a) / n\n    total = 0\n    for i in range(n):\n        x = a + i * dx\n        total += func(x) * dx\n    return total\n\n# Integrate different functions\nresult1 = integrate(math.sin, 0, math.pi)  # ∫sin(x) from 0 to π\nresult2 = integrate(lambda x: x**2, 0, 1)  # ∫x² from 0 to 1\n\nprint(f\"\\n∫sin(x) from 0 to π = {result1:.4f} (expected: 2)\")\nprint(f\"∫x² from 0 to 1 = {result2:.4f} (expected: 0.333...)\")","key":"PFh6tzPFPc"},{"type":"output","id":"EpCSvIVRSK9RLBKtEnlXe","data":[],"key":"WMFtTFVP62"}],"key":"SZAqJinTsO"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":555,"column":1},"end":{"line":555,"column":1}},"children":[{"type":"text","value":"Functions Returning Functions","position":{"start":{"line":555,"column":1},"end":{"line":555,"column":1}},"key":"iOJjY09FR4"}],"identifier":"functions-returning-functions","label":"Functions Returning Functions","html_id":"functions-returning-functions","implicit":true,"key":"NV0vlJj5u2"}],"key":"TOsln9X9XV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def make_magnitude_converter(zero_point_flux):\n    \"\"\"\n    Create a magnitude-to-flux converter for a specific zero point.\n    \n    This is a 'function factory' - it returns customized functions.\n    \"\"\"\n    def converter(magnitude):\n        return zero_point_flux * 10**(-0.4 * magnitude)\n    \n    # Return the inner function\n    return converter\n\n# Create converters for different photometric systems\nvega_converter = make_magnitude_converter(3.631e-20)  # Vega system\nab_converter = make_magnitude_converter(3.631e-23)    # AB system\n\nmag = 20.0\nprint(f\"Magnitude {mag}:\")\nprint(f\"  Vega system: {vega_converter(mag):.3e} W/m²/Hz\")\nprint(f\"  AB system: {ab_converter(mag):.3e} W/m²/Hz\")\n\n# Another example: Creating custom filters\ndef make_filter(lower, upper):\n    \"\"\"Create a filter function for a wavelength range.\"\"\"\n    def filter_func(wavelength):\n        return lower <= wavelength <= upper\n    \n    filter_func.__name__ = f\"filter_{lower}_{upper}\"\n    return filter_func\n\n# Create filters for different bands\nu_band = make_filter(300, 400)  # U band in nm\ng_band = make_filter(400, 550)  # G band in nm\n\nwavelength = 450\nprint(f\"\\nWavelength {wavelength}nm:\")\nprint(f\"  In U band? {u_band(wavelength)}\")\nprint(f\"  In G band? {g_band(wavelength)}\")","key":"pI9AVu6I3E"},{"type":"output","id":"c3aMj4K0DUJtRvs7LQ-0V","data":[],"key":"SXR38kchxx"}],"key":"JgmNiqbuve"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":598,"column":1},"end":{"line":598,"column":1}},"children":[{"type":"text","value":"Lambda Functions","position":{"start":{"line":598,"column":1},"end":{"line":598,"column":1}},"key":"OOY9pAefFz"}],"identifier":"lambda-functions","label":"Lambda Functions","html_id":"lambda-functions","implicit":true,"key":"RboViykUy2"},{"type":"paragraph","position":{"start":{"line":600,"column":1},"end":{"line":600,"column":1}},"children":[{"type":"text","value":"Anonymous functions for simple operations:","position":{"start":{"line":600,"column":1},"end":{"line":600,"column":1}},"key":"RfocFViSLu"}],"key":"QVRjpb6GPp"}],"key":"Sqio5vRmZg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Lambda syntax: lambda arguments: expression\n\n# Regular function\ndef square(x):\n    return x**2\n\n# Equivalent lambda\nsquare_lambda = lambda x: x**2\n\nprint(f\"Regular: {square(5)}\")\nprint(f\"Lambda: {square_lambda(5)}\")\n\n# Lambdas shine in functional programming\ndata = [\n    {'name': 'Sirius', 'mag': -1.46},\n    {'name': 'Canopus', 'mag': -0.74},\n    {'name': 'Arcturus', 'mag': -0.05},\n    {'name': 'Vega', 'mag': 0.03}\n]\n\n# Sort by magnitude\ndata_sorted = sorted(data, key=lambda star: star['mag'])\nprint(\"\\nStars by brightness:\")\nfor star in data_sorted:\n    print(f\"  {star['name']}: {star['mag']}\")\n\n# Filter bright stars\nbright = filter(lambda s: s['mag'] < 0, data)\nprint(\"\\nBright stars (mag < 0):\")\nfor star in bright:\n    print(f\"  {star['name']}\")","key":"IOJy7yTBW7"},{"type":"output","id":"Dql-xzZ9K-ltghhHiBilb","data":[],"key":"aDWu0agvkY"}],"key":"td48XLrpFo"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":636,"column":1},"end":{"line":636,"column":1}},"children":[{"type":"text","value":"Decorators: Function Transformers","position":{"start":{"line":636,"column":1},"end":{"line":636,"column":1}},"key":"eQnQivtUFB"}],"identifier":"decorators-function-transformers","label":"Decorators: Function Transformers","html_id":"decorators-function-transformers","implicit":true,"key":"oEP8rLD8vo"},{"type":"paragraph","position":{"start":{"line":638,"column":1},"end":{"line":638,"column":1}},"children":[{"type":"text","value":"Decorators modify or enhance functions:","position":{"start":{"line":638,"column":1},"end":{"line":638,"column":1}},"key":"SfyQ0eK5l8"}],"key":"JOy19z94Sb"}],"key":"cogDfX3Al1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import time\nimport functools\n\n# Simple decorator to time function execution\ndef timer(func):\n    \"\"\"Decorator to measure function execution time.\"\"\"\n    @functools.wraps(func)  # Preserves function metadata\n    def wrapper(*args, **kwargs):\n        start = time.perf_counter()\n        result = func(*args, **kwargs)\n        end = time.perf_counter()\n        print(f\"{func.__name__} took {end-start:.6f} seconds\")\n        return result\n    return wrapper\n\n# Apply decorator with @\n@timer\ndef slow_calculation(n):\n    \"\"\"Simulate a slow calculation.\"\"\"\n    total = 0\n    for i in range(n):\n        total += i**2\n    return total\n\nresult = slow_calculation(1000000)\nprint(f\"Result: {result}\")\n\n# Decorator with arguments\ndef validate_range(min_val, max_val):\n    \"\"\"Decorator factory that validates input range.\"\"\"\n    def decorator(func):\n        @functools.wraps(func)\n        def wrapper(value):\n            if not min_val <= value <= max_val:\n                raise ValueError(f\"Value {value} outside range [{min_val}, {max_val}]\")\n            return func(value)\n        return wrapper\n    return decorator\n\n@validate_range(0, 1)\ndef calculate_probability(p):\n    \"\"\"Calculate something with probability.\"\"\"\n    return p * (1 - p)\n\nprint(f\"\\nProbability(0.3) = {calculate_probability(0.3):.3f}\")\n# calculate_probability(1.5)  # Would raise ValueError","key":"JFxTHk8wDs"},{"type":"output","id":"zOnQhKUcnZvnD_vK6beiw","data":[],"key":"DlOgi9IH47"}],"key":"BEiMSVLnDv"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":689,"column":1},"end":{"line":689,"column":1}},"key":"bqbzzp5Q6W"},{"type":"heading","depth":2,"position":{"start":{"line":691,"column":1},"end":{"line":691,"column":1}},"children":[{"type":"text","value":"Documentation and Type Hints","position":{"start":{"line":691,"column":1},"end":{"line":691,"column":1}},"key":"hHOkERV4ev"}],"identifier":"documentation-and-type-hints","label":"Documentation and Type Hints","html_id":"documentation-and-type-hints","implicit":true,"key":"o5u1TouhOH"},{"type":"heading","depth":3,"position":{"start":{"line":693,"column":1},"end":{"line":693,"column":1}},"children":[{"type":"text","value":"Docstrings That Matter","position":{"start":{"line":693,"column":1},"end":{"line":693,"column":1}},"key":"u8yp2Lekxe"}],"identifier":"docstrings-that-matter","label":"Docstrings That Matter","html_id":"docstrings-that-matter","implicit":true,"key":"nAwturAly0"}],"key":"VMmcRkprcB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def calculate_orbital_period(semi_major_axis: float, \n                           total_mass: float) -> float:\n    \"\"\"\n    Calculate orbital period using Kepler's third law.\n    \n    For a two-body system, calculates the orbital period given\n    the semi-major axis and total system mass.\n    \n    Parameters\n    ----------\n    semi_major_axis : float\n        Semi-major axis in AU\n    total_mass : float\n        Total mass of system in solar masses\n    \n    Returns\n    -------\n    float\n        Orbital period in years\n        \n    Notes\n    -----\n    Uses the simplified form of Kepler's third law:\n    P² = a³/M where P is in years, a in AU, M in solar masses\n    \n    Examples\n    --------\n    >>> calculate_orbital_period(1.0, 1.0)  # Earth around Sun\n    1.0\n    >>> calculate_orbital_period(5.2, 1.0)  # Jupiter around Sun\n    11.86\n    \n    References\n    ----------\n    .. [1] Carroll & Ostlie, \"An Introduction to Modern Astrophysics\"\n    \"\"\"\n    return (semi_major_axis**3 / total_mass)**0.5\n\n# Access docstring\nprint(calculate_orbital_period.__doc__)","key":"eh0JZ95P19"},{"type":"output","id":"qRV-LktExytJj4_3x_q2J","data":[],"key":"py5GnH5WTD"}],"key":"fwUbTr7wLu"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":738,"column":1},"end":{"line":738,"column":1}},"children":[{"type":"text","value":"Type Hints for Clarity","position":{"start":{"line":738,"column":1},"end":{"line":738,"column":1}},"key":"gP0HgzKaZY"}],"identifier":"type-hints-for-clarity","label":"Type Hints for Clarity","html_id":"type-hints-for-clarity","implicit":true,"key":"TNQwlwVWj1"}],"key":"jUAxzan3ln"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from typing import List, Tuple, Optional, Union, Callable, Dict\n\ndef process_spectrum(\n    wavelengths: List[float],\n    fluxes: List[float],\n    normalize: bool = True,\n    smooth_window: Optional[int] = None\n) -> Tuple[List[float], List[float]]:\n    \"\"\"\n    Process a spectrum with optional normalization and smoothing.\n    \n    Type hints make the expected inputs and outputs clear!\n    \"\"\"\n    # Processing would happen here\n    return wavelengths, fluxes\n\ndef find_spectral_lines(\n    spectrum: Dict[str, List[float]],\n    threshold: float = 3.0,\n    method: Callable[[List[float]], float] = max\n) -> Union[List[float], None]:\n    \"\"\"\n    Find spectral lines in a spectrum.\n    \n    Shows complex type hints including Callable and Union.\n    \"\"\"\n    if not spectrum:\n        return None\n    \n    # Line finding logic here\n    return [656.3, 486.1]  # H-alpha, H-beta\n\n# Type hints help IDEs provide better autocomplete and catch errors!","key":"zoYei6x0rp"},{"type":"output","id":"1L8ERIHVw2R_sFGdlIVfs","data":[],"key":"qZI5dfvB4S"}],"key":"h5xje5bnd7"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":776,"column":1},"end":{"line":776,"column":1}},"key":"BBKgOtT8nG"},{"type":"heading","depth":2,"position":{"start":{"line":778,"column":1},"end":{"line":778,"column":1}},"children":[{"type":"text","value":"Advanced Patterns","position":{"start":{"line":778,"column":1},"end":{"line":778,"column":1}},"key":"EVmWAZj7Cx"}],"identifier":"advanced-patterns","label":"Advanced Patterns","html_id":"advanced-patterns","implicit":true,"key":"DvOLuPUj8Z"},{"type":"heading","depth":3,"position":{"start":{"line":780,"column":1},"end":{"line":780,"column":1}},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":780,"column":1},"end":{"line":780,"column":1}},"key":"ea9WOoTZ5Z"}],"identifier":"recursion","label":"Recursion","html_id":"recursion","implicit":true,"key":"vtQmj4zqhh"},{"type":"paragraph","position":{"start":{"line":782,"column":1},"end":{"line":782,"column":1}},"children":[{"type":"text","value":"Functions calling themselves - elegant but use with care:","position":{"start":{"line":782,"column":1},"end":{"line":782,"column":1}},"key":"ge0yFdNl8o"}],"key":"wqF3eJvIR1"}],"key":"P5QLPiKFir"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def factorial(n: int) -> int:\n    \"\"\"Calculate factorial recursively.\"\"\"\n    if n <= 1:  # Base case\n        return 1\n    return n * factorial(n - 1)  # Recursive case\n\nprint(f\"5! = {factorial(5)}\")\n\n# More complex: Binary tree traversal for hierarchical structures\ndef calculate_cluster_mass(cluster):\n    \"\"\"\n    Recursively calculate mass of hierarchical structure.\n    \n    Each cluster can contain stars or sub-clusters.\n    \"\"\"\n    if isinstance(cluster, (int, float)):  # Base case: single star\n        return cluster\n    \n    # Recursive case: sum all components\n    total_mass = 0\n    for component in cluster:\n        total_mass += calculate_cluster_mass(component)\n    return total_mass\n\n# Hierarchical cluster structure\nglobular_cluster = [\n    1.5,  # Single star\n    [0.8, 1.2],  # Binary system\n    [0.5, [0.3, 0.4]],  # Triple system\n    [[0.9, 1.1], [1.3, 0.7]]  # Two binaries\n]\n\ntotal = calculate_cluster_mass(globular_cluster)\nprint(f\"Total cluster mass: {total:.1f} M☉\")","key":"LKDWJC5Tch"},{"type":"output","id":"SFNTxmnLRs8P_EIFkQBic","data":[],"key":"y9Am9JlBMt"}],"key":"dCNnMFqcuM"},{"type":"block","children":[{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Recursion Limits","position":{"start":{"line":821,"column":1},"end":{"line":821,"column":1}},"key":"Nlu97KpfSY"}],"key":"AMz0pyJKPE"},{"type":"paragraph","position":{"start":{"line":822,"column":1},"end":{"line":822,"column":1}},"children":[{"type":"text","value":"Python has a recursion limit (usually 1000) to prevent stack overflow:","position":{"start":{"line":822,"column":1},"end":{"line":822,"column":1}},"key":"hXBuFverWv"}],"key":"tOWePYR69T"},{"type":"code","lang":"python","value":"import sys\nprint(sys.getrecursionlimit())  # Usually 1000","position":{"start":{"line":823,"column":1},"end":{"line":825,"column":1}},"key":"MqqEJ99x4B"}],"key":"UbEtD1wXVz"},{"type":"paragraph","position":{"start":{"line":827,"column":1},"end":{"line":827,"column":1}},"children":[{"type":"text","value":"For deep recursion, use iteration or increase the limit carefully.","position":{"start":{"line":827,"column":1},"end":{"line":827,"column":1}},"key":"ExozlBoYhk"}],"key":"dDl3BLzHeo"},{"type":"code","lang":"","value":"\n### Closures\n\nFunctions that \"remember\" their environment:\n\n```{code-cell} ipython3\ndef make_doppler_calculator(rest_wavelength):\n    \"\"\"\n    Create a Doppler shift calculator for a specific spectral line.\n    \n    This is a closure - the inner function 'remembers' rest_wavelength.\n    \"\"\"\n    def calculate_velocity(observed_wavelength):\n        # This function has access to rest_wavelength from outer scope\n        z = (observed_wavelength - rest_wavelength) / rest_wavelength\n        c = 299792.458  # km/s\n        return z * c\n    \n    # Add some metadata\n    calculate_velocity.rest_wavelength = rest_wavelength\n    calculate_velocity.__name__ = f\"doppler_{rest_wavelength}\"\n    \n    return calculate_velocity\n\n# Create specialized calculators\nh_alpha_doppler = make_doppler_calculator(656.28)  # H-alpha line\nh_beta_doppler = make_doppler_calculator(486.13)   # H-beta line\n\n# Use them\nobserved = 658.0\nprint(f\"Observed wavelength: {observed} nm\")\nprint(f\"H-alpha velocity: {h_alpha_doppler(observed):.1f} km/s\")\nprint(f\"H-beta velocity: {h_beta_doppler(observed):.1f} km/s\")\nprint(f\"H-alpha rest λ: {h_alpha_doppler.rest_wavelength} nm\")","position":{"start":{"line":828,"column":1},"end":{"line":863,"column":1}},"key":"PpzvYsJoDc"},{"type":"heading","depth":3,"position":{"start":{"line":865,"column":1},"end":{"line":865,"column":1}},"children":[{"type":"text","value":"Partial Functions","position":{"start":{"line":865,"column":1},"end":{"line":865,"column":1}},"key":"rI2Hzxo7oP"}],"identifier":"partial-functions","label":"Partial Functions","html_id":"partial-functions","implicit":true,"key":"megJkMWKZb"},{"type":"paragraph","position":{"start":{"line":867,"column":1},"end":{"line":867,"column":1}},"children":[{"type":"text","value":"Pre-fill some arguments of a function:","position":{"start":{"line":867,"column":1},"end":{"line":867,"column":1}},"key":"ckW5vw0PM6"}],"key":"TTpCesQAHK"}],"key":"o1t8fqRAnP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from functools import partial\n\ndef planck_law(wavelength, temperature, scale=1e-9):\n    \"\"\"\n    Planck's law for blackbody radiation.\n    \n    Parameters\n    ----------\n    wavelength : float\n        Wavelength in meters\n    temperature : float\n        Temperature in Kelvin\n    scale : float\n        Scale factor for units\n    \"\"\"\n    import math\n    h = 6.626e-34  # Planck constant\n    c = 2.998e8    # Speed of light\n    k = 1.381e-23  # Boltzmann constant\n    \n    numerator = 2 * h * c**2 / wavelength**5\n    denominator = math.exp(h * c / (wavelength * k * temperature)) - 1\n    return scale * numerator / denominator\n\n# Create specialized functions for specific temperatures\nsun_spectrum = partial(planck_law, temperature=5778)  # Sun\nsirius_spectrum = partial(planck_law, temperature=9940)  # Sirius\n\n# Now we can use them easily\nwavelength = 500e-9  # 500 nm (green light)\nprint(f\"At {wavelength*1e9:.0f} nm:\")\nprint(f\"  Sun: {sun_spectrum(wavelength):.2e} W/m²/m\")\nprint(f\"  Sirius: {sirius_spectrum(wavelength):.2e} W/m²/m\")","key":"dw6ALnEzUq"},{"type":"output","id":"b3Qjgjoe-IbrpI632ADZE","data":[],"key":"uxGjRv3wRZ"}],"key":"PdrULfYj5t"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":905,"column":1},"end":{"line":905,"column":1}},"key":"kXiCIhK11H"},{"type":"heading","depth":2,"position":{"start":{"line":907,"column":1},"end":{"line":907,"column":1}},"children":[{"type":"text","value":"Common Pitfalls and Best Practices","position":{"start":{"line":907,"column":1},"end":{"line":907,"column":1}},"key":"RNBqncIyjf"}],"identifier":"common-pitfalls-and-best-practices","label":"Common Pitfalls and Best Practices","html_id":"common-pitfalls-and-best-practices","implicit":true,"key":"Ms87dEJbik"}],"key":"nwgkPHnKiQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Pitfall 1: Modifying arguments\ndef bad_append(item, lst=[]):  # DON'T: mutable default\n    lst.append(item)\n    return lst\n\ndef good_append(item, lst=None):  # DO: None default\n    if lst is None:\n        lst = []\n    lst.append(item)\n    return lst\n\n# Pitfall 2: Too many parameters\ndef bad_function(a, b, c, d, e, f, g, h):  # Too many!\n    pass\n\ndef good_function(config_dict):  # Group related parameters\n    pass\n\n# Pitfall 3: Side effects in unexpected places\ntotal = 0\ndef bad_accumulator(value):\n    global total  # Hidden side effect!\n    total += value\n    return total\n\ndef good_accumulator(value, running_total):  # Explicit\n    return running_total + value\n\n# Pitfall 4: Functions doing too much\ndef bad_do_everything(data):\n    # Load data\n    # Process data\n    # Analyze data\n    # Plot results\n    # Save output\n    pass  # Too many responsibilities!\n\n# Better: Single responsibility\ndef load_data(filename): pass\ndef process_data(data): pass\ndef analyze_data(processed): pass\ndef plot_results(analysis): pass\ndef save_output(results, filename): pass","key":"we3SNvBQzm"},{"type":"output","id":"LNMyf53WFioPIBf4SjAvl","data":[],"key":"Lu5qgiYTTm"}],"key":"bFhLiHJnbY"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":955,"column":1},"end":{"line":955,"column":1}},"key":"AMxokIQBuW"},{"type":"heading","depth":2,"position":{"start":{"line":957,"column":1},"end":{"line":957,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":957,"column":1},"end":{"line":957,"column":1}},"key":"T4pjiisFHK"}],"identifier":"exercises","label":"Exercises","html_id":"exercises","implicit":true,"key":"j1FhADF8nM"},{"type":"heading","depth":3,"position":{"start":{"line":959,"column":1},"end":{"line":959,"column":1}},"children":[{"type":"text","value":"Exercise 1: Advanced Argument Handling","position":{"start":{"line":959,"column":1},"end":{"line":959,"column":1}},"key":"U7viG75urq"}],"identifier":"exercise-1-advanced-argument-handling","label":"Exercise 1: Advanced Argument Handling","html_id":"exercise-1-advanced-argument-handling","implicit":true,"key":"hcvlBTsEhw"},{"type":"exercise","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Flexible Data Processor","position":{"start":{"line":961,"column":1},"end":{"line":961,"column":1}},"key":"Nps4uRCH7j"}],"key":"wRN9PQ6orT"},{"type":"paragraph","position":{"start":{"line":962,"column":1},"end":{"line":962,"column":1}},"children":[{"type":"text","value":"Create a function that:","position":{"start":{"line":962,"column":1},"end":{"line":962,"column":1}},"key":"R6VgqgbeRX"}],"key":"JB8KuKzWRO"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":963,"column":1},"end":{"line":967,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":963,"column":1},"end":{"line":963,"column":1}},"children":[{"type":"text","value":"Takes required positional arguments for data and method","position":{"start":{"line":963,"column":1},"end":{"line":963,"column":1}},"key":"nUS24q0tUe"}],"key":"BuNifHaGL9"},{"type":"listItem","spread":true,"position":{"start":{"line":964,"column":1},"end":{"line":964,"column":1}},"children":[{"type":"text","value":"Accepts any number of filters as *args","position":{"start":{"line":964,"column":1},"end":{"line":964,"column":1}},"key":"ywlCtY9eeT"}],"key":"Vc6A0dIBuZ"},{"type":"listItem","spread":true,"position":{"start":{"line":965,"column":1},"end":{"line":965,"column":1}},"children":[{"type":"text","value":"Takes optional keyword arguments for configuration","position":{"start":{"line":965,"column":1},"end":{"line":965,"column":1}},"key":"N1HWHABucp"}],"key":"dlbfsLf9Xs"},{"type":"listItem","spread":true,"position":{"start":{"line":966,"column":1},"end":{"line":967,"column":1}},"children":[{"type":"text","value":"Accepts any additional metadata as **kwargs","position":{"start":{"line":966,"column":1},"end":{"line":966,"column":1}},"key":"sJX2JteQv8"}],"key":"qDRr8mrPxP"}],"key":"Ce2ooy7cPA"},{"type":"paragraph","position":{"start":{"line":968,"column":1},"end":{"line":968,"column":1}},"children":[{"type":"text","value":"The function should:","position":{"start":{"line":968,"column":1},"end":{"line":968,"column":1}},"key":"B4MwUNhnuc"}],"key":"GjRHrQnn77"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":969,"column":1},"end":{"line":972,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":969,"column":1},"end":{"line":969,"column":1}},"children":[{"type":"text","value":"Apply all filters to the data","position":{"start":{"line":969,"column":1},"end":{"line":969,"column":1}},"key":"oesEvezK4y"}],"key":"M6bD0299TT"},{"type":"listItem","spread":true,"position":{"start":{"line":970,"column":1},"end":{"line":970,"column":1}},"children":[{"type":"text","value":"Process using the specified method","position":{"start":{"line":970,"column":1},"end":{"line":970,"column":1}},"key":"aVqLVqz91I"}],"key":"AB3qNAIcve"},{"type":"listItem","spread":true,"position":{"start":{"line":971,"column":1},"end":{"line":972,"column":1}},"children":[{"type":"text","value":"Return results with metadata attached","position":{"start":{"line":971,"column":1},"end":{"line":971,"column":1}},"key":"LViGgJWveE"}],"key":"hSsq2BWODF"}],"key":"bLBw0W6XfN"},{"type":"paragraph","position":{"start":{"line":973,"column":1},"end":{"line":973,"column":1}},"children":[{"type":"text","value":"Test with astronomical data filtering scenarios.","position":{"start":{"line":973,"column":1},"end":{"line":973,"column":1}},"key":"ITxf6IP4Q1"}],"key":"tqjNeBfwpM"}],"enumerated":true,"label":"exercise-cPRc0D67vU","identifier":"exercise-cprc0d67vu","enumerator":"1","html_id":"exercise-cprc0d67vu","key":"mGGyEoL4xR"},{"type":"heading","depth":3,"position":{"start":{"line":976,"column":1},"end":{"line":976,"column":1}},"children":[{"type":"text","value":"Exercise 2: Function Factory","position":{"start":{"line":976,"column":1},"end":{"line":976,"column":1}},"key":"jtvT7JOBEj"}],"identifier":"exercise-2-function-factory","label":"Exercise 2: Function Factory","html_id":"exercise-2-function-factory","implicit":true,"key":"NHazBYGjSw"},{"type":"exercise","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Custom Integrator Generator","position":{"start":{"line":978,"column":1},"end":{"line":978,"column":1}},"key":"gz3g09Rbub"}],"key":"P6xlC11HhR"},{"type":"paragraph","position":{"start":{"line":979,"column":1},"end":{"line":979,"column":1}},"children":[{"type":"text","value":"Write a function that returns customized numerical integrators:","position":{"start":{"line":979,"column":1},"end":{"line":979,"column":1}},"key":"DaeZoPrV1V"}],"key":"YG20fsjAVX"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":980,"column":1},"end":{"line":983,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":980,"column":1},"end":{"line":980,"column":1}},"children":[{"type":"text","value":"Takes integration method (‘euler’, ‘rk4’, ‘verlet’) as input","position":{"start":{"line":980,"column":1},"end":{"line":980,"column":1}},"key":"njoKCVqiNz"}],"key":"JOS6P3Jyks"},{"type":"listItem","spread":true,"position":{"start":{"line":981,"column":1},"end":{"line":981,"column":1}},"children":[{"type":"text","value":"Returns a function configured for that method","position":{"start":{"line":981,"column":1},"end":{"line":981,"column":1}},"key":"uYVgafAH3E"}],"key":"W7aLpxTP1F"},{"type":"listItem","spread":true,"position":{"start":{"line":982,"column":1},"end":{"line":983,"column":1}},"children":[{"type":"text","value":"The returned function should integrate any differential equation","position":{"start":{"line":982,"column":1},"end":{"line":982,"column":1}},"key":"hexfc9P4w8"}],"key":"VAZjHgTFTa"}],"key":"LGN5RNM08q"},{"type":"paragraph","position":{"start":{"line":984,"column":1},"end":{"line":984,"column":1}},"children":[{"type":"text","value":"Example usage:","position":{"start":{"line":984,"column":1},"end":{"line":984,"column":1}},"key":"iFmqDRvfvL"}],"key":"Jh12AhHqpd"},{"type":"code","lang":"python","value":"euler_integrator = make_integrator('euler')\nresult = euler_integrator(dydt, y0, t_span)","position":{"start":{"line":985,"column":1},"end":{"line":987,"column":1}},"key":"ostxMOG6eC"}],"enumerated":true,"label":"exercise-J7Yg8kQipE","identifier":"exercise-j7yg8kqipe","enumerator":"2","html_id":"exercise-j7yg8kqipe","key":"JUepPxWzHW"},{"type":"paragraph","position":{"start":{"line":990,"column":1},"end":{"line":990,"column":1}},"children":[{"type":"text","value":"Test with orbital dynamics equations.","position":{"start":{"line":990,"column":1},"end":{"line":990,"column":1}},"key":"nBTbkhdKe5"}],"key":"SeIQA7uZKX"},{"type":"code","lang":"","value":"\n### Exercise 3: Decorator Challenge\n\n```{exercise} Performance Monitor Decorator\nCreate a decorator that:\n1. Times function execution\n2. Logs input arguments\n3. Catches and logs exceptions\n4. Can be configured with verbosity level\n\nApply to various astronomical calculations and analyze performance.","position":{"start":{"line":991,"column":1},"end":{"line":1003,"column":1}},"key":"YjSMuuwlyU"},{"type":"heading","depth":3,"position":{"start":{"line":1005,"column":1},"end":{"line":1005,"column":1}},"children":[{"type":"text","value":"Exercise 4: Recursive Tree Search","position":{"start":{"line":1005,"column":1},"end":{"line":1005,"column":1}},"key":"Cq5FjfQeY3"}],"identifier":"exercise-4-recursive-tree-search","label":"Exercise 4: Recursive Tree Search","html_id":"exercise-4-recursive-tree-search","implicit":true,"key":"nIMmxkLoGO"},{"type":"exercise","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Galaxy Cluster Finder","position":{"start":{"line":1007,"column":1},"end":{"line":1007,"column":1}},"key":"zUOQIz5Bsd"}],"key":"wHgUkrc1ve"},{"type":"paragraph","position":{"start":{"line":1008,"column":1},"end":{"line":1008,"column":1}},"children":[{"type":"text","value":"Galaxies form hierarchical structures. Write a recursive function that:","position":{"start":{"line":1008,"column":1},"end":{"line":1008,"column":1}},"key":"c7Z9oG65GA"}],"key":"xLlnZN9EYv"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":1009,"column":1},"end":{"line":1012,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1009,"column":1},"end":{"line":1009,"column":1}},"children":[{"type":"text","value":"Takes a tree structure of galaxy positions","position":{"start":{"line":1009,"column":1},"end":{"line":1009,"column":1}},"key":"XEemNnJcVd"}],"key":"IMkskypMBR"},{"type":"listItem","spread":true,"position":{"start":{"line":1010,"column":1},"end":{"line":1010,"column":1}},"children":[{"type":"text","value":"Finds all groups within a given distance threshold","position":{"start":{"line":1010,"column":1},"end":{"line":1010,"column":1}},"key":"VpT0rlOOJb"}],"key":"sraAEDGfAv"},{"type":"listItem","spread":true,"position":{"start":{"line":1011,"column":1},"end":{"line":1012,"column":1}},"children":[{"type":"text","value":"Returns nested structure of identified clusters","position":{"start":{"line":1011,"column":1},"end":{"line":1011,"column":1}},"key":"suTq3tY7S5"}],"key":"WvEk35qYYS"}],"key":"daKaR4cMwn"},{"type":"paragraph","position":{"start":{"line":1013,"column":1},"end":{"line":1013,"column":1}},"children":[{"type":"text","value":"Handle edge cases like empty regions and single galaxies.","position":{"start":{"line":1013,"column":1},"end":{"line":1013,"column":1}},"key":"W9JRQpGwus"}],"key":"SCRcTp2IgH"}],"enumerated":true,"label":"exercise-IunRAYxFfJ","identifier":"exercise-iunrayxffj","enumerator":"3","html_id":"exercise-iunrayxffj","key":"RABpjCrPuh"},{"type":"thematicBreak","position":{"start":{"line":1016,"column":1},"end":{"line":1016,"column":1}},"key":"S25w8pVmRz"},{"type":"heading","depth":2,"position":{"start":{"line":1018,"column":1},"end":{"line":1018,"column":1}},"children":[{"type":"text","value":"Key Takeaways","position":{"start":{"line":1018,"column":1},"end":{"line":1018,"column":1}},"key":"b0aVbvrpI7"}],"identifier":"key-takeaways","label":"Key Takeaways","html_id":"key-takeaways","implicit":true,"key":"HWwrT9CAsb"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Chapter 3 Summary","position":{"start":{"line":1020,"column":1},"end":{"line":1020,"column":1}},"key":"oRD6ltzVK9"}],"key":"NrulTr21Yi"},{"type":"paragraph","position":{"start":{"line":1023,"column":1},"end":{"line":1023,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1023,"column":1},"end":{"line":1023,"column":1}},"key":"wNdSbnmfa4"},{"type":"strong","position":{"start":{"line":1023,"column":1},"end":{"line":1023,"column":1}},"children":[{"type":"text","value":"Functions are abstractions","position":{"start":{"line":1023,"column":1},"end":{"line":1023,"column":1}},"key":"yGrPs6V3Mm"}],"key":"qowe54qpPD"},{"type":"text","value":": Hide complexity, expose simplicity","position":{"start":{"line":1023,"column":1},"end":{"line":1023,"column":1}},"key":"pPy2GXJv6y"}],"key":"XhHsjFvvEM"},{"type":"paragraph","position":{"start":{"line":1025,"column":1},"end":{"line":1025,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1025,"column":1},"end":{"line":1025,"column":1}},"key":"uXiKraVSgI"},{"type":"strong","position":{"start":{"line":1025,"column":1},"end":{"line":1025,"column":1}},"children":[{"type":"text","value":"DRY Principle","position":{"start":{"line":1025,"column":1},"end":{"line":1025,"column":1}},"key":"Zy6Co0alWC"}],"key":"Xp22O3EwpV"},{"type":"text","value":": Don’t Repeat Yourself - factor out common code","position":{"start":{"line":1025,"column":1},"end":{"line":1025,"column":1}},"key":"JijzVmRfsi"}],"key":"sjkwdhb3Bt"},{"type":"paragraph","position":{"start":{"line":1027,"column":1},"end":{"line":1027,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1027,"column":1},"end":{"line":1027,"column":1}},"key":"fsEO4V0n77"},{"type":"strong","position":{"start":{"line":1027,"column":1},"end":{"line":1027,"column":1}},"children":[{"type":"text","value":"Argument mastery","position":{"start":{"line":1027,"column":1},"end":{"line":1027,"column":1}},"key":"olxDG1sMur"}],"key":"vg001DHFTk"},{"type":"text","value":": Positional, keyword, *args, **kwargs - know when to use each","position":{"start":{"line":1027,"column":1},"end":{"line":1027,"column":1}},"key":"naQFU5T9s2"}],"key":"k5C53XzNQg"},{"type":"paragraph","position":{"start":{"line":1029,"column":1},"end":{"line":1029,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1029,"column":1},"end":{"line":1029,"column":1}},"key":"GHoEklCoql"},{"type":"strong","position":{"start":{"line":1029,"column":1},"end":{"line":1029,"column":1}},"children":[{"type":"text","value":"Beware mutable defaults","position":{"start":{"line":1029,"column":1},"end":{"line":1029,"column":1}},"key":"ocf5iIXoeD"}],"key":"BprRuCYRlo"},{"type":"text","value":": Use None and create inside function","position":{"start":{"line":1029,"column":1},"end":{"line":1029,"column":1}},"key":"mQtaqTYsV6"}],"key":"bSpaj919BI"},{"type":"paragraph","position":{"start":{"line":1031,"column":1},"end":{"line":1031,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1031,"column":1},"end":{"line":1031,"column":1}},"key":"CXdOy8WdJ2"},{"type":"strong","position":{"start":{"line":1031,"column":1},"end":{"line":1031,"column":1}},"children":[{"type":"text","value":"LEGB scope rule","position":{"start":{"line":1031,"column":1},"end":{"line":1031,"column":1}},"key":"z3tvHtmDG2"}],"key":"h0b7dl0mVC"},{"type":"text","value":": Local → Enclosing → Global → Built-in","position":{"start":{"line":1031,"column":1},"end":{"line":1031,"column":1}},"key":"Crej3yeATN"}],"key":"rpMvlkPUgT"},{"type":"paragraph","position":{"start":{"line":1033,"column":1},"end":{"line":1033,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1033,"column":1},"end":{"line":1033,"column":1}},"key":"ai3NjB39Xt"},{"type":"strong","position":{"start":{"line":1033,"column":1},"end":{"line":1033,"column":1}},"children":[{"type":"text","value":"Functions are objects","position":{"start":{"line":1033,"column":1},"end":{"line":1033,"column":1}},"key":"id5GXsV4nK"}],"key":"ZhhTvq2Zot"},{"type":"text","value":": Pass them, return them, transform them","position":{"start":{"line":1033,"column":1},"end":{"line":1033,"column":1}},"key":"cnKiTIPnl5"}],"key":"DDylWmPZJa"},{"type":"paragraph","position":{"start":{"line":1035,"column":1},"end":{"line":1035,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1035,"column":1},"end":{"line":1035,"column":1}},"key":"cTuMs4CM7a"},{"type":"strong","position":{"start":{"line":1035,"column":1},"end":{"line":1035,"column":1}},"children":[{"type":"text","value":"Decorators enhance functions","position":{"start":{"line":1035,"column":1},"end":{"line":1035,"column":1}},"key":"g9bEwcKR5b"}],"key":"hLUJfmwe2n"},{"type":"text","value":": Add functionality without modifying code","position":{"start":{"line":1035,"column":1},"end":{"line":1035,"column":1}},"key":"sQou0mfmeH"}],"key":"sjAtdYfcj9"},{"type":"paragraph","position":{"start":{"line":1037,"column":1},"end":{"line":1037,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1037,"column":1},"end":{"line":1037,"column":1}},"key":"rroL2nlGy5"},{"type":"strong","position":{"start":{"line":1037,"column":1},"end":{"line":1037,"column":1}},"children":[{"type":"text","value":"Type hints clarify intent","position":{"start":{"line":1037,"column":1},"end":{"line":1037,"column":1}},"key":"xRsO59BDG0"}],"key":"NQykQNjiqV"},{"type":"text","value":": Make your code self-documenting","position":{"start":{"line":1037,"column":1},"end":{"line":1037,"column":1}},"key":"JmrgXtBMcX"}],"key":"uii0r6onKl"},{"type":"paragraph","position":{"start":{"line":1039,"column":1},"end":{"line":1039,"column":1}},"children":[{"type":"text","value":"✅ ","position":{"start":{"line":1039,"column":1},"end":{"line":1039,"column":1}},"key":"AcrmwhAB8u"},{"type":"strong","position":{"start":{"line":1039,"column":1},"end":{"line":1039,"column":1}},"children":[{"type":"text","value":"Single responsibility","position":{"start":{"line":1039,"column":1},"end":{"line":1039,"column":1}},"key":"FvPXpCCPsE"}],"key":"elKiFNeayP"},{"type":"text","value":": Each function should do one thing well","position":{"start":{"line":1039,"column":1},"end":{"line":1039,"column":1}},"key":"IaO6BTdq5d"}],"key":"UtEkarjnfH"}],"class":"success","key":"OxwJJjFGfB"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Next Chapter Preview","position":{"start":{"line":1042,"column":1},"end":{"line":1042,"column":1}},"key":"xLSETkLWNr"}],"key":"SAsL3gxYz1"},{"type":"paragraph","position":{"start":{"line":1044,"column":1},"end":{"line":1044,"column":1}},"children":[{"type":"text","value":"Chapter 4: Data Structures & Algorithms - Choosing the right tool for astronomical data","position":{"start":{"line":1044,"column":1},"end":{"line":1044,"column":1}},"key":"e1mqTxNJTN"}],"key":"N5kpqbTByC"}],"class":"info","key":"tc06obmbSr"},{"type":"heading","depth":2,"position":{"start":{"line":1047,"column":1},"end":{"line":1047,"column":1}},"children":[{"type":"text","value":"Quick Reference Card","position":{"start":{"line":1047,"column":1},"end":{"line":1047,"column":1}},"key":"gNpFnNK3ls"}],"identifier":"quick-reference-card","label":"Quick Reference Card","html_id":"quick-reference-card","implicit":true,"key":"LIsRfL4U9v"},{"type":"code","lang":"python","value":"# Function definition\ndef func(pos, default=None, *args, **kwargs):\n    \"\"\"Docstring here.\"\"\"\n    return result\n\n# Argument unpacking\nfunc(*list_args, **dict_kwargs)\n\n# Lambda functions\nlambda x: x**2\n\n# Decorators\n@decorator\ndef func():\n    pass\n\n# Type hints\ndef func(x: int, y: float = 0.0) -> str:\n    pass\n\n# Scope modifiers\nglobal var_name\nnonlocal var_name\n\n# Function as argument\nmap(func, iterable)\nfilter(func, iterable)\nsorted(items, key=func)\n\n# Partial functions\nfrom functools import partial\nnew_func = partial(old_func, arg1=value)\n\n# Common patterns\nif param is None:\n    param = []  # Mutable default pattern","position":{"start":{"line":1049,"column":1},"end":{"line":1086,"column":1}},"key":"hZcfFfCVAd"}],"key":"xEh5Zb1Rpo"}],"key":"uXUbWIcGQE"},"references":{"cite":{"order":[],"data":{}}}}