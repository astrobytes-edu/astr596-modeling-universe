{"version":"1","records":[{"hierarchy":{"lvl1":"Advanced Topics"},"type":"lvl1","url":"/index-12","position":0},{"hierarchy":{"lvl1":"Advanced Topics"},"content":"Content coming soon!","type":"content","url":"/index-12","position":1},{"hierarchy":{"lvl1":"Gravitational Dynamics"},"type":"lvl1","url":"/index-10","position":0},{"hierarchy":{"lvl1":"Gravitational Dynamics"},"content":"Content coming soon!","type":"content","url":"/index-10","position":1},{"hierarchy":{"lvl1":"Astrophysics Applications"},"type":"lvl1","url":"/index-8","position":0},{"hierarchy":{"lvl1":"Astrophysics Applications"},"content":"Real astronomical phenomena and data analysis techniques that provide scientific context for computational methods.","type":"content","url":"/index-8","position":1},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Overview"},"type":"lvl2","url":"/index-8#overview","position":2},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Overview"},"content":"This section explores the astrophysical motivation behind every computational technique in ASTR 596. You‚Äôll understand not just how to implement algorithms, but why they‚Äôre essential for modern astronomical research.","type":"content","url":"/index-8#overview","position":3},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Physical Contexts"},"type":"lvl2","url":"/index-8#physical-contexts","position":4},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Physical Contexts"},"content":"","type":"content","url":"/index-8#physical-contexts","position":5},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl3":"‚≠ê Stellar Physics","lvl2":"Physical Contexts"},"type":"lvl3","url":"/index-8#id-stellar-physics","position":6},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl3":"‚≠ê Stellar Physics","lvl2":"Physical Contexts"},"content":"The life cycles of stars provide rich computational problems:\n\nStellar Structure: Hydrostatic equilibrium and energy transport\n\nNuclear Physics: Fusion rates and element synthesis\n\nStellar Evolution: Main sequence to white dwarf/neutron star/black hole\n\nObservational Data: HR diagrams and stellar classification\n\nComputational Methods: ODE solving, boundary value problems\nProject Connection: Project 1 implements stellar evolution models","type":"content","url":"/index-8#id-stellar-physics","position":7},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl3":"üåå Gravitational Dynamics","lvl2":"Physical Contexts"},"type":"lvl3","url":"/index-8#id-gravitational-dynamics","position":8},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl3":"üåå Gravitational Dynamics","lvl2":"Physical Contexts"},"content":"N-body systems from planetary motion to galaxy formation:\n\nClassical Mechanics: Newton‚Äôs laws in astronomical contexts\n\nOrbital Dynamics: Kepler‚Äôs laws and perturbation theory\n\nN-Body Systems: Star clusters, galaxy interactions\n\nNumerical Integration: Leapfrog, symplectic methods\n\nDark Matter: Structure formation and cosmological simulations\nProject Connection: Project 2 builds gravitational N-body simulators","type":"content","url":"/index-8#id-gravitational-dynamics","position":9},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl3":"üåü Radiative Transfer","lvl2":"Physical Contexts"},"type":"lvl3","url":"/index-8#id-radiative-transfer","position":10},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl3":"üåü Radiative Transfer","lvl2":"Physical Contexts"},"content":"How light travels through astronomical environments:\n\nPhoton Physics: Emission, absorption, and scattering processes\n\nStellar Atmospheres: Spectral line formation\n\nInterstellar Medium: Dust extinction and emission\n\nMonte Carlo Methods: Photon transport simulations\n\nObservational Astronomy: From photons to physical parameters\nProject Connection: Projects 2-3 use Monte Carlo radiative transfer","type":"content","url":"/index-8#id-radiative-transfer","position":11},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl3":"üî¨ Advanced Topics","lvl2":"Physical Contexts"},"type":"lvl3","url":"/index-8#id-advanced-topics","position":12},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl3":"üî¨ Advanced Topics","lvl2":"Physical Contexts"},"content":"Cutting-edge astrophysical applications:\n\nMagnetohydrodynamics: Plasma physics in stellar and galactic environments\n\nGeneral Relativity: Black holes, gravitational waves, cosmology\n\nAstrostatistics: Bayesian methods for astronomical data analysis\n\nMachine Learning: Neural networks for classification and discovery\n\nMulti-Messenger Astronomy: Combining electromagnetic, gravitational, and neutrino observations\nProject Connection: Final project applies ML to modern astrophysical datasets","type":"content","url":"/index-8#id-advanced-topics","position":13},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Scientific Method Integration"},"type":"lvl2","url":"/index-8#scientific-method-integration","position":14},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Scientific Method Integration"},"content":"Each topic demonstrates how computational astrophysics follows the scientific method:\n\nObservation: Real astronomical data and phenomena\n\nHypothesis: Physical theories and mathematical models\n\nPrediction: Computational simulations and calculations\n\nTesting: Comparison with observations and experiments\n\nIteration: Model refinement and new predictions","type":"content","url":"/index-8#scientific-method-integration","position":15},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Mathematical Physics Foundation"},"type":"lvl2","url":"/index-8#mathematical-physics-foundation","position":16},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Mathematical Physics Foundation"},"content":"The astrophysical applications reinforce key physics concepts:\n\nConservation Laws: Energy, momentum, angular momentum\n\nThermodynamics: Stellar interiors and planetary atmospheres\n\nElectromagnetism: Radiation processes and magnetic fields\n\nQuantum Mechanics: Atomic physics and stellar nucleosynthesis\n\nStatistical Mechanics: Kinetic theory and plasma physics","type":"content","url":"/index-8#mathematical-physics-foundation","position":17},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Observational Connection"},"type":"lvl2","url":"/index-8#observational-connection","position":18},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Observational Connection"},"content":"Every computational method connects to real observations:\n\nPhotometry: Measuring stellar brightness and colors\n\nSpectroscopy: Analyzing chemical composition and kinematics\n\nAstrometry: Precise positional measurements\n\nTime-Domain: Variable stars, supernovae, exoplanet transits\n\nMulti-Wavelength: Radio, infrared, optical, X-ray, gamma-ray astronomy","type":"content","url":"/index-8#observational-connection","position":19},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Research Preparation"},"type":"lvl2","url":"/index-8#research-preparation","position":20},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Research Preparation"},"content":"These applications prepare you for:\n\nGraduate Research: Understanding current astrophysical problems\n\nLiterature Review: Reading and interpreting research papers\n\nData Analysis: Working with real astronomical datasets\n\nScientific Communication: Presenting results to scientific audiences\n\nCareer Readiness: Skills applicable to academia or industry","type":"content","url":"/index-8#research-preparation","position":21},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Course Integration"},"type":"lvl2","url":"/index-8#course-integration","position":22},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Course Integration"},"content":"The astrophysical context enhances every aspect of ASTR 596:\n\nMotivation: Understanding why computational methods matter\n\nIntuition: Developing physical insight for debugging\n\nValidation: Testing code against known astronomical results\n\nApplication: Solving genuine research problems\n\nCommunication: Explaining technical work to scientific audiences","type":"content","url":"/index-8#course-integration","position":23},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Beyond the Course"},"type":"lvl2","url":"/index-8#beyond-the-course","position":24},{"hierarchy":{"lvl1":"Astrophysics Applications","lvl2":"Beyond the Course"},"content":"These foundations prepare you for:\n\nAdvanced astrophysics coursework.\n\nGraduate school applications and research.\n\nCareers in astronomy, data science, or technology.\n\nLifelong learning in rapidly evolving fields.\n\nThe universe provides an inexhaustible source of computational challenges. Master these tools, and you‚Äôll be ready to tackle questions about the fundamental nature of reality itself.","type":"content","url":"/index-8#beyond-the-course","position":25},{"hierarchy":{"lvl1":"Radiative Transfer"},"type":"lvl1","url":"/index-11","position":0},{"hierarchy":{"lvl1":"Radiative Transfer"},"content":"Content coming soon!","type":"content","url":"/index-11","position":1},{"hierarchy":{"lvl1":"Stellar Physics"},"type":"lvl1","url":"/index-9","position":0},{"hierarchy":{"lvl1":"Stellar Physics"},"content":"Content coming soon!","type":"content","url":"/index-9","position":1},{"hierarchy":{"lvl1":"Computational Methods"},"type":"lvl1","url":"/index-3","position":0},{"hierarchy":{"lvl1":"Computational Methods"},"content":"Comprehensive guides to the numerical methods and programming techniques used throughout ASTR 596.","type":"content","url":"/index-3","position":1},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Overview"},"type":"lvl2","url":"/index-3#overview","position":2},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Overview"},"content":"This section provides deep-dive explanations of the computational methods you‚Äôll implement in the course projects. Each topic builds from mathematical foundations to practical implementation.","type":"content","url":"/index-3#overview","position":3},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Topics Covered"},"type":"lvl2","url":"/index-3#topics-covered","position":4},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Topics Covered"},"content":"","type":"content","url":"/index-3#topics-covered","position":5},{"hierarchy":{"lvl1":"Computational Methods","lvl3":"üêç Python Foundations","lvl2":"Topics Covered"},"type":"lvl3","url":"/index-3#id-python-foundations","position":6},{"hierarchy":{"lvl1":"Computational Methods","lvl3":"üêç Python Foundations","lvl2":"Topics Covered"},"content":"Essential Python programming concepts for scientific computing:\n\nObject-oriented programming principles\n\nNumPy array operations and broadcasting\n\nScientific Python ecosystem (SciPy, matplotlib, astropy)\n\nProfessional development practices\n\nDebugging and testing strategies","type":"content","url":"/index-3#id-python-foundations","position":7},{"hierarchy":{"lvl1":"Computational Methods","lvl3":"üî¢ Numerical Methods","lvl2":"Topics Covered"},"type":"lvl3","url":"/index-3#id-numerical-methods","position":8},{"hierarchy":{"lvl1":"Computational Methods","lvl3":"üî¢ Numerical Methods","lvl2":"Topics Covered"},"content":"Core algorithms for solving mathematical problems computationally:\n\nNumerical integration (Euler, Runge-Kutta methods)\n\nRoot finding and optimization\n\nLinear algebra operations\n\nInterpolation and approximation\n\nError analysis and stability","type":"content","url":"/index-3#id-numerical-methods","position":9},{"hierarchy":{"lvl1":"Computational Methods","lvl3":"ü§ñ Machine Learning","lvl2":"Topics Covered"},"type":"lvl3","url":"/index-3#id-machine-learning","position":10},{"hierarchy":{"lvl1":"Computational Methods","lvl3":"ü§ñ Machine Learning","lvl2":"Topics Covered"},"content":"Statistical learning methods implemented from first principles:\n\nLinear and polynomial regression\n\nGradient descent optimization\n\nCross-validation and model selection\n\nBayesian inference and MCMC\n\nNeural network fundamentals","type":"content","url":"/index-3#id-machine-learning","position":11},{"hierarchy":{"lvl1":"Computational Methods","lvl3":"‚ö° Modern Frameworks","lvl2":"Topics Covered"},"type":"lvl3","url":"/index-3#id-modern-frameworks","position":12},{"hierarchy":{"lvl1":"Computational Methods","lvl3":"‚ö° Modern Frameworks","lvl2":"Topics Covered"},"content":"Cutting-edge tools for high-performance scientific computing:\n\nJAX ecosystem and automatic differentiation\n\nGPU acceleration and vectorization\n\nFunctional programming paradigms\n\nPerformance optimization techniques\n\nIntegration with existing codebases","type":"content","url":"/index-3#id-modern-frameworks","position":13},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Learning Philosophy"},"type":"lvl2","url":"/index-3#learning-philosophy","position":14},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Learning Philosophy"},"content":"These materials follow our ‚Äúglass box‚Äù approach:\n\nMathematical Foundation: Understand the theory behind each method\n\nManual Implementation: Code algorithms from scratch in NumPy\n\nFramework Integration: Leverage modern tools like JAX for performance\n\nReal Applications: Apply methods to genuine astrophysical problems","type":"content","url":"/index-3#learning-philosophy","position":15},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"How to Use This Section"},"type":"lvl2","url":"/index-3#how-to-use-this-section","position":16},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"How to Use This Section"},"content":"Before Projects: Read relevant theory and examples\n\nDuring Implementation: Reference syntax and algorithms\n\nAfter Completion: Deepen understanding with advanced topics\n\nFor Research: Use as reference for future work","type":"content","url":"/index-3#how-to-use-this-section","position":17},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Connection to Projects"},"type":"lvl2","url":"/index-3#connection-to-projects","position":18},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Connection to Projects"},"content":"Each computational method directly supports the course projects:\n\nProject 1: Python foundations and OOP design\n\nProject 2: Numerical integration and Monte Carlo methods\n\nProject 3: Machine learning and optimization\n\nFinal Project: Modern frameworks and neural networks","type":"content","url":"/index-3#connection-to-projects","position":19},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Prerequisites"},"type":"lvl2","url":"/index-3#prerequisites","position":20},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Prerequisites"},"content":"Basic understanding of:\n\nPython programming fundamentals\n\nLinear algebra and calculus\n\nElementary physics concepts\n\nCommand-line interface usage","type":"content","url":"/index-3#prerequisites","position":21},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Getting Help"},"type":"lvl2","url":"/index-3#getting-help","position":22},{"hierarchy":{"lvl1":"Computational Methods","lvl2":"Getting Help"},"content":"If you encounter difficulties with any computational method:\n\nReview the theoretical background first\n\nCheck implementation examples and code snippets\n\nAttend office hours for conceptual clarification\n\nUse course Slack for specific syntax questions\n\nApply AI tools following course guidelines\n\nThese computational skills form the foundation for modern astrophysical research and will serve you throughout your career in science or technology.","type":"content","url":"/index-3#getting-help","position":23},{"hierarchy":{"lvl1":"Machine Learning"},"type":"lvl1","url":"/index-6","position":0},{"hierarchy":{"lvl1":"Machine Learning"},"content":"Content coming soon!","type":"content","url":"/index-6","position":1},{"hierarchy":{"lvl1":"Modern Frameworks"},"type":"lvl1","url":"/index-7","position":0},{"hierarchy":{"lvl1":"Modern Frameworks"},"content":"Content coming soon!","type":"content","url":"/index-7","position":1},{"hierarchy":{"lvl1":"Numerical Methods"},"type":"lvl1","url":"/index-5","position":0},{"hierarchy":{"lvl1":"Numerical Methods"},"content":"Content coming soon!","type":"content","url":"/index-5","position":1},{"hierarchy":{"lvl1":"Python Fundamentals"},"type":"lvl1","url":"/index-4","position":0},{"hierarchy":{"lvl1":"Python Fundamentals"},"content":"Content coming soon!","type":"content","url":"/index-4","position":1},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework"},"type":"lvl1","url":"/ai-guidelines","position":0},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework"},"content":"","type":"content","url":"/ai-guidelines","position":1},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Course Philosophy: AI as a Performance Amplifier, Not a Substitute"},"type":"lvl2","url":"/ai-guidelines#course-philosophy-ai-as-a-performance-amplifier-not-a-substitute","position":2},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Course Philosophy: AI as a Performance Amplifier, Not a Substitute"},"content":"The Reality: AI tools are transforming scientific computing and research. As future astrophysicists, you will work in an AI-integrated environment where these tools are standard professional practice.\n\nThe Challenge: Recent MIT research suggests that heavy AI reliance weakens cognitive development. Students who used ChatGPT showed weaker neural connectivity and couldn‚Äôt remember what they‚Äôd just ‚Äúwritten.‚Äù AI raises the bar for human capability‚Äîit amplifies what we expect you to accomplish and understand, but only if you use it strategically.\n\nOur Approach: This course treats AI as a performance amplifier for competent practitioners, not as a substitute for learning. You must first develop core competencies through productive struggle, then learn to use AI strategically to enhance your capabilities.\n\nResearch-backed approach: Ting & O‚ÄôBriain (2025) found that students who used structured AI integration with documentation requirements actually decreased their AI dependence over time while developing stronger problem-solving skills and AI literacy. This contradicts common fears about AI creating academic dependency.\n\nSafe to Struggle: Learning requires intellectual risk-taking, exploration, and yes, making mistakes. The struggle is where cognitive growth happens. This policy is designed to support genuine learning while building your capacity to work effectively with AI throughout your career.","type":"content","url":"/ai-guidelines#course-philosophy-ai-as-a-performance-amplifier-not-a-substitute","position":3},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"How to Cite AI Usage in Your Code"},"type":"lvl2","url":"/ai-guidelines#how-to-cite-ai-usage-in-your-code","position":4},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"How to Cite AI Usage in Your Code"},"content":"","type":"content","url":"/ai-guidelines#how-to-cite-ai-usage-in-your-code","position":5},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"In-Code Documentation","lvl2":"How to Cite AI Usage in Your Code"},"type":"lvl3","url":"/ai-guidelines#in-code-documentation","position":6},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"In-Code Documentation","lvl2":"How to Cite AI Usage in Your Code"},"content":"When AI assists with your code, document it clearly:# AI-assisted: ChatGPT helped optimize this nested loop structure\n# Verified against NumPy documentation: https://numpy.org/doc/stable/reference/generated/numpy.vectorize.html\n# Original approach used nested for loops, AI suggested vectorization\ndef calculate_distances(positions):\n    # Implementation here\n    pass\n\n# Debugging with Claude: Identified index out of bounds error in original implementation\n# Solution verified by testing edge cases [0, 1, n-1, n]\ndef get_neighbors(grid, i, j):\n    # Implementation here\n    pass","type":"content","url":"/ai-guidelines#in-code-documentation","position":7},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"In Project Memos","lvl2":"How to Cite AI Usage in Your Code"},"type":"lvl3","url":"/ai-guidelines#in-project-memos","position":8},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"In Project Memos","lvl2":"How to Cite AI Usage in Your Code"},"content":"Include a dedicated ‚ÄúAI Usage‚Äù section:## AI Usage Documentation\n\n**Conceptual Understanding**: Used ChatGPT to clarify difference between Euler and RK4 stability \nregions after reading Numerical Recipes Ch. 17.1. Verified understanding by implementing both \nand comparing error accumulation.\n\n**Debugging Assistance**: Claude helped identify memory leak in particle array allocation. \nSolution involved properly clearing arrays between iterations (lines 145-150).\n\n**Not AI-Generated**: Core algorithm implementation, physics calculations, and analysis \nwere completed independently following course materials.","type":"content","url":"/ai-guidelines#in-project-memos","position":9},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Scaffolded AI Integration Framework"},"type":"lvl2","url":"/ai-guidelines#scaffolded-ai-integration-framework","position":10},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Scaffolded AI Integration Framework"},"content":"","type":"content","url":"/ai-guidelines#scaffolded-ai-integration-framework","position":11},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Phase 1: Foundation Building (Weeks 1-4)","lvl2":"Scaffolded AI Integration Framework"},"type":"lvl3","url":"/ai-guidelines#phase-1-foundation-building-weeks-1-4","position":12},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Phase 1: Foundation Building (Weeks 1-4)","lvl2":"Scaffolded AI Integration Framework"},"content":"Dates: Aug 29 - Sept 19Rule: Struggle First, AI Second\n\nPrimary Learning: Use official documentation, textbooks, and manual implementation\n\nThe 20-Minute Rule: Spend at least 20-30 minutes wrestling with problems using only your mind before consulting AI\n\nAI Usage: Limited to debugging assistance only after genuine independent effort\n\nDocumentation Requirement: All AI interactions must include links to relevant official documentation\n\nRationale: Building neural pathways and pattern recognition that AI cannot provide‚Äîthis is where cognitive growth happens\n\nExample Scenario: Learning matplotlib plotting\n\n‚úÖ Correct Approach: Study matplotlib documentation ‚Üí understand Figure/Axes hierarchy ‚Üí attempt implementation ‚Üí struggle with specific issues ‚Üí document your thinking ‚Üí use AI to debug specific errors\n\n‚ùå Incorrect Approach: Ask AI ‚Äúhow to make a scatter plot‚Äù without first attempting to understand the underlying concepts","type":"content","url":"/ai-guidelines#phase-1-foundation-building-weeks-1-4","position":13},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Phase 2: Strategic Integration (Weeks 5-8)","lvl2":"Scaffolded AI Integration Framework"},"type":"lvl3","url":"/ai-guidelines#phase-2-strategic-integration-weeks-5-8","position":14},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Phase 2: Strategic Integration (Weeks 5-8)","lvl2":"Scaffolded AI Integration Framework"},"content":"Dates: Sept 20 - Oct 17Rule: Documentation-First AI Assistance\n\nPrimary Learning: Continue documentation-first approach\n\nAI Enhancement: AI can be used for efficiency after demonstrating documentation literacy\n\nVerification Requirement: Must cross-reference AI suggestions with official sources\n\nCritical Evaluation: Must explain why AI suggestions are appropriate/inappropriate\n\nExample Scenario: Adding legends to plots\n\n‚úÖ Correct Approach: ‚ÄúI need to add a legend. I‚Äôll check matplotlib.pyplot.legend documentation first to understand all options, then use AI to help me implement the specific styling I want.‚Äù\n\n‚ùå Incorrect Approach: Ask AI ‚Äúadd legend to plot‚Äù and copy-paste the first solution without understanding alternatives or parameters","type":"content","url":"/ai-guidelines#phase-2-strategic-integration-weeks-5-8","position":15},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Phase 3: Professional Practice (Weeks 9-16)","lvl2":"Scaffolded AI Integration Framework"},"type":"lvl3","url":"/ai-guidelines#phase-3-professional-practice-weeks-9-16","position":16},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Phase 3: Professional Practice (Weeks 9-16)","lvl2":"Scaffolded AI Integration Framework"},"content":"Dates: Oct 18 - Dec 18Rule: AI as Productivity Tool for Competent Practitioners\n\nCompetency Assumption: You now have foundation knowledge to evaluate AI suggestions critically\n\nProfessional Usage: AI can be used for acceleration, exploration, and complex problem-solving\n\nQuality Standard: AI-assisted work must meet higher standards than manual work\n\nDocumentation Standard: Continue citing AI usage and verification sources","type":"content","url":"/ai-guidelines#phase-3-professional-practice-weeks-9-16","position":17},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Specific AI Usage Rules"},"type":"lvl2","url":"/ai-guidelines#specific-ai-usage-rules","position":18},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Specific AI Usage Rules"},"content":"","type":"content","url":"/ai-guidelines#specific-ai-usage-rules","position":19},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"AI Usage Documentation in Growth Memos","lvl2":"Specific AI Usage Rules"},"type":"lvl3","url":"/ai-guidelines#ai-usage-documentation-in-growth-memos","position":20},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"AI Usage Documentation in Growth Memos","lvl2":"Specific AI Usage Rules"},"content":"Rather than weekly summaries, document your AI usage in each Growth Memo (due after each project):\n\nSignificant AI Interactions: Describe 2-3 substantial uses of AI tools for that project\n\nDocumentation Verification: For each interaction, link to the primary sources you consulted\n\nLearning Reflection: What did you learn about effective AI usage? What didn‚Äôt work?\n\nPhase Compliance: How did your AI usage align with the current phase expectations?","type":"content","url":"/ai-guidelines#ai-usage-documentation-in-growth-memos","position":21},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Portfolio Approach (Part of Technical Growth Synthesis)","lvl2":"Specific AI Usage Rules"},"type":"lvl3","url":"/ai-guidelines#portfolio-approach-part-of-technical-growth-synthesis","position":22},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Portfolio Approach (Part of Technical Growth Synthesis)","lvl2":"Specific AI Usage Rules"},"content":"Your final Technical Growth Synthesis (due Dec 11) should include an AI literacy portfolio section demonstrating:\n\nRepresentative Examples: 3-4 well-documented AI interactions from across the semester showing your growth\n\nEvolution Analysis: How your AI strategies evolved from Phase 1 to Phase 3\n\nSuccess and Failure Analysis: Specific examples where AI helped and where it hindered learning\n\nProfessional Readiness: Reflection on how you‚Äôll use AI in future research/industry work","type":"content","url":"/ai-guidelines#portfolio-approach-part-of-technical-growth-synthesis","position":23},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Prohibited AI Usage","lvl2":"Specific AI Usage Rules"},"type":"lvl3","url":"/ai-guidelines#prohibited-ai-usage","position":24},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Prohibited AI Usage","lvl2":"Specific AI Usage Rules"},"content":"Direct Problem Solving: Asking AI to solve entire assignment problems\n\nConceptual Shortcuts: Using AI to bypass understanding fundamental concepts\n\nUnverified Implementation: Using AI code without understanding or verification\n\nDocumentation Replacement: Using AI instead of reading official documentation","type":"content","url":"/ai-guidelines#prohibited-ai-usage","position":25},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Encouraged AI Usage","lvl2":"Specific AI Usage Rules"},"type":"lvl3","url":"/ai-guidelines#encouraged-ai-usage","position":26},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Encouraged AI Usage","lvl2":"Specific AI Usage Rules"},"content":"Socratic Dialogue: ‚ÄúDon‚Äôt solve this for me, but help me understand what questions I should be asking‚Äù\n\nDebugging Assistance: After independent troubleshooting attempts and documentation consultation\n\nCode Optimization: After implementing working solutions manually to understand the core concepts\n\nAlternative Perspectives: ‚ÄúHere‚Äôs my approach and where I‚Äôm stuck. What‚Äôs a different mental model I could use?‚Äù\n\nPattern Recognition: ‚ÄúI‚Äôm working on problems A, B, and C. What underlying principle connects them?‚Äù","type":"content","url":"/ai-guidelines#encouraged-ai-usage","position":27},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"The Cognitive Ownership Principle","lvl2":"Specific AI Usage Rules"},"type":"lvl3","url":"/ai-guidelines#the-cognitive-ownership-principle","position":28},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"The Cognitive Ownership Principle","lvl2":"Specific AI Usage Rules"},"content":"Never copy-paste AI responses without understanding and rewriting in your own style\n\nThe Quote Test: After AI assistance, close the conversation and summarize key insights from memory\n\nThe Teaching Test: Be able to explain AI suggestions to a classmate in your own words","type":"content","url":"/ai-guidelines#the-cognitive-ownership-principle","position":29},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Assessment Integration"},"type":"lvl2","url":"/ai-guidelines#assessment-integration","position":30},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Assessment Integration"},"content":"","type":"content","url":"/ai-guidelines#assessment-integration","position":31},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Growth Memo AI Reflection Component","lvl2":"Assessment Integration"},"type":"lvl3","url":"/ai-guidelines#growth-memo-ai-reflection-component","position":32},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Growth Memo AI Reflection Component","lvl2":"Assessment Integration"},"content":"Each Growth Memo (submitted Wednesdays after project completion) should include an AI usage section (~1 paragraph) addressing:\n\nMemo 1 (Sept 10 - After Project 1): How did the 20-minute struggle rule affect your learning? What did you gain from avoiding immediate AI assistance?\n\nMemo 2 (Sept 24 - After Project 2): Describe your debugging process. How did documentation-first help before using AI?\n\nMemo 3 (Oct 8 - After Project 3): Compare solving problems with and without AI. What patterns do you notice?\n\nMemo 4 (Oct 22 - After Project 4): How has AI helped or hindered your understanding of Monte Carlo methods?\n\nMemo 5 (Nov 5 - After Project 5): Describe a time when AI gave incorrect advice. How did you identify and correct it?\n\nMemo 6 (Nov 19 - After Project 6): How has your AI strategy evolved since Week 1? What‚Äôs your professional approach going forward?","type":"content","url":"/ai-guidelines#growth-memo-ai-reflection-component","position":33},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Understanding Verification","lvl2":"Assessment Integration"},"type":"lvl3","url":"/ai-guidelines#understanding-verification","position":34},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Understanding Verification","lvl2":"Assessment Integration"},"content":"Throughout the course, expect informal check-ins where I may:\n\nAsk about your code: ‚ÄúWalk me through why you chose this approach‚Äù\n\nDiscuss design decisions: ‚ÄúWhat alternatives did you consider?‚Äù\n\nExplore edge cases: ‚ÄúWhat happens if we change this parameter?‚Äù\n\nConnect concepts: ‚ÄúHow does this relate to what we learned in Project 2?‚Äù\n\nThese conversations help ensure you understand your implementations and can think critically about your code. This is supportive, not punitive‚Äîit‚Äôs about reinforcing learning and catching confusion early.","type":"content","url":"/ai-guidelines#understanding-verification","position":35},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"The Professional Reality"},"type":"lvl2","url":"/ai-guidelines#the-professional-reality","position":36},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"The Professional Reality"},"content":"","type":"content","url":"/ai-guidelines#the-professional-reality","position":37},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Why These Rules Matter","lvl2":"The Professional Reality"},"type":"lvl3","url":"/ai-guidelines#why-these-rules-matter","position":38},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Why These Rules Matter","lvl2":"The Professional Reality"},"content":"Industry Expectations: Professional developers must understand their tools deeply enough to debug, optimize, and adapt AI suggestions\n\nResearch Demands: Scientific computing requires understanding trade-offs, limitations, and edge cases that AI may not address\n\nCareer Longevity: Practitioners who understand fundamentals adapt to new tools; those who don‚Äôt become obsolete\n\nQuality Assurance: In research, you must be able to verify and defend every aspect of your computational work","type":"content","url":"/ai-guidelines#why-these-rules-matter","position":39},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"The Performance Standard","lvl2":"The Professional Reality"},"type":"lvl3","url":"/ai-guidelines#the-performance-standard","position":40},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"The Performance Standard","lvl2":"The Professional Reality"},"content":"Without AI: You should be capable of solving problems manually, consulting documentation, and implementing solutions from first principles\n\nWith AI: You should accomplish significantly more complex problems, higher quality implementations, and deeper exploration of edge cases\n\nIntegration Goal: AI amplifies your capabilities without replacing your critical thinking","type":"content","url":"/ai-guidelines#the-performance-standard","position":41},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Practical Examples"},"type":"lvl2","url":"/ai-guidelines#practical-examples","position":42},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Practical Examples"},"content":"","type":"content","url":"/ai-guidelines#practical-examples","position":43},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Acceptable AI Workflow: Implementing MCMC","lvl2":"Practical Examples"},"type":"lvl3","url":"/ai-guidelines#acceptable-ai-workflow-implementing-mcmc","position":44},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Acceptable AI Workflow: Implementing MCMC","lvl2":"Practical Examples"},"content":"Foundation: Read course materials on MCMC theory and Metropolis-Hastings algorithm\n\nDocumentation: Study NumPy random module documentation for sampling functions\n\nManual Implementation: Code basic Metropolis-Hastings from mathematical principles\n\nAI Enhancement: ‚ÄúI‚Äôve implemented basic MCMC. Can you help me optimize the proposal distribution tuning based on my current acceptance rate calculation?‚Äù\n\nVerification: Cross-reference AI suggestions with statistical computing literature","type":"content","url":"/ai-guidelines#acceptable-ai-workflow-implementing-mcmc","position":45},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Unacceptable AI Workflow: Implementing MCMC","lvl2":"Practical Examples"},"type":"lvl3","url":"/ai-guidelines#unacceptable-ai-workflow-implementing-mcmc","position":46},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Unacceptable AI Workflow: Implementing MCMC","lvl2":"Practical Examples"},"content":"Shortcut: ‚ÄúWrite me a Metropolis-Hastings algorithm for parameter estimation‚Äù\n\nCopy-Paste: Use AI code without understanding acceptance criteria or proposal distributions\n\nSkip Theory: Never consult course materials or statistical references","type":"content","url":"/ai-guidelines#unacceptable-ai-workflow-implementing-mcmc","position":47},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Academic Integrity and AI Misuse"},"type":"lvl2","url":"/ai-guidelines#academic-integrity-and-ai-misuse","position":48},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Academic Integrity and AI Misuse"},"content":"","type":"content","url":"/ai-guidelines#academic-integrity-and-ai-misuse","position":49},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"AI Policy as Academic Privilege","lvl2":"Academic Integrity and AI Misuse"},"type":"lvl3","url":"/ai-guidelines#ai-policy-as-academic-privilege","position":50},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"AI Policy as Academic Privilege","lvl2":"Academic Integrity and AI Misuse"},"content":"This AI integration policy is a privilege that allows you to use cutting-edge tools while learning. This privilege comes with strict responsibility for honest, ethical usage. Abuse of this policy violates both course standards and SDSU‚Äôs academic integrity policies.","type":"content","url":"/ai-guidelines#ai-policy-as-academic-privilege","position":51},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"AI Misuse and Plagiarism","lvl2":"Academic Integrity and AI Misuse"},"type":"lvl3","url":"/ai-guidelines#ai-misuse-and-plagiarism","position":52},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"AI Misuse and Plagiarism","lvl2":"Academic Integrity and AI Misuse"},"content":"The following constitute academic dishonesty under SDSU policies:\n\nPlagiarism Through AI:\n\nSubmitting AI-generated work without proper citation\n\nUsing AI to complete assignments without demonstrating personal understanding\n\nClaiming AI-assisted work as entirely your own creation\n\nCopying AI responses without verification or comprehension\n\nAI Misuse Examples:\n\nHaving AI solve entire homework problems without independent work\n\nUsing AI to write reports/memos without engaging with the material personally\n\nSubmitting code you cannot explain or debug independently\n\nViolating phase-specific AI restrictions (e.g., using AI for primary learning in Phases 1-2)","type":"content","url":"/ai-guidelines#ai-misuse-and-plagiarism","position":53},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"SDSU Academic Integrity Alignment","lvl2":"Academic Integrity and AI Misuse"},"type":"lvl3","url":"/ai-guidelines#sdsu-academic-integrity-alignment","position":54},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"SDSU Academic Integrity Alignment","lvl2":"Academic Integrity and AI Misuse"},"content":"This course‚Äôs AI policy operates within SDSU‚Äôs academic integrity framework:\n\nHonesty: All AI usage must be transparent and documented\n\nTrust: Students are trusted to follow scaffolding guidelines; violations break this trust\n\nFairness: Equal access to AI tools with equal responsibility for learning outcomes\n\nRespect: Respect for the learning process and instructor expectations\n\nResponsibility: Personal accountability for understanding and competency development","type":"content","url":"/ai-guidelines#sdsu-academic-integrity-alignment","position":55},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Consequences for AI Policy Violations","lvl2":"Academic Integrity and AI Misuse"},"type":"lvl3","url":"/ai-guidelines#consequences-for-ai-policy-violations","position":56},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Consequences for AI Policy Violations","lvl2":"Academic Integrity and AI Misuse"},"content":"Minor Violations (First offense, limited scope):\n\nCourse Level: Assignment resubmission with 20% grade reduction\n\nLearning Intervention: Mandatory office hours meeting to discuss AI usage strategy\n\nDocumentation: Incident recorded in course records\n\nMajor Violations (Extensive AI misuse, academic dishonesty):\n\nCourse Level: Zero credit for assignment, no resubmission opportunity\n\nSDSU Policy: Reported to Office of Student Rights and Responsibilities per SDSU Student Conduct Code\n\nAcademic Record: May result in formal academic integrity violation on transcript\n\nCourse Standing: May result in course failure depending on violation severity\n\nSevere/Repeated Violations:\n\nImmediate Consequences: Course failure regardless of other performance\n\nUniversity Action: Full academic integrity investigation per SDSU procedures\n\nAI Privilege Revocation: Complete prohibition from AI tool usage for remainder of course\n\nAcademic Record: Formal notation per university policies","type":"content","url":"/ai-guidelines#consequences-for-ai-policy-violations","position":57},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Reporting and Investigation Process","lvl2":"Academic Integrity and AI Misuse"},"type":"lvl3","url":"/ai-guidelines#reporting-and-investigation-process","position":58},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Reporting and Investigation Process","lvl2":"Academic Integrity and AI Misuse"},"content":"Detection: AI misuse identified through code analysis, plagiarism detection, or student inability to explain submitted work\n\nDocumentation: Detailed record of violation with evidence\n\nStudent Conference: Mandatory meeting to discuss violation and consequences\n\nSDSU Reporting: Violations reported to appropriate university offices per SDSU Student Conduct Code Section 41301\n\nAppeal Process: Students may appeal through standard SDSU academic grievance procedures","type":"content","url":"/ai-guidelines#reporting-and-investigation-process","position":59},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Why We Take This Seriously","lvl2":"Academic Integrity and AI Misuse"},"type":"lvl3","url":"/ai-guidelines#why-we-take-this-seriously","position":60},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Why We Take This Seriously","lvl2":"Academic Integrity and AI Misuse"},"content":"Professional Preparation: Research careers require absolute integrity in computational work\n\nLearning Outcomes: AI dependency prevents mastery of essential skills\n\nFairness: Students following the policy deserve recognition for their legitimate effort\n\nInstitutional Trust: Graduate programs and employers rely on SDSU‚Äôs academic standards","type":"content","url":"/ai-guidelines#why-we-take-this-seriously","position":61},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Learning Support and Community"},"type":"lvl2","url":"/ai-guidelines#learning-support-and-community","position":62},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Learning Support and Community"},"content":"","type":"content","url":"/ai-guidelines#learning-support-and-community","position":63},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Office Hours Philosophy","lvl2":"Learning Support and Community"},"type":"lvl3","url":"/ai-guidelines#office-hours-philosophy","position":64},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Office Hours Philosophy","lvl2":"Learning Support and Community"},"content":"Office hours are designed for collaborative problem-solving, not answer-giving:\n\nBring specific questions about your thinking process\n\nCome prepared to explain what you‚Äôve tried\n\nExpect guided questions that help you discover solutions\n\nAI strategy consultations are always welcome","type":"content","url":"/ai-guidelines#office-hours-philosophy","position":65},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Peer Learning Integration","lvl2":"Learning Support and Community"},"type":"lvl3","url":"/ai-guidelines#peer-learning-integration","position":66},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Peer Learning Integration","lvl2":"Learning Support and Community"},"content":"Pair Programming: Share AI strategies with your partner\n\nWeekly Check-ins: Brief class discussions about effective AI usage\n\nSuccess Sharing: Celebrate interesting discoveries and productive failures\n\nCommunity Guidelines: Support each other‚Äôs intellectual risk-taking","type":"content","url":"/ai-guidelines#peer-learning-integration","position":67},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Course-Specific AI Tools"},"type":"lvl2","url":"/ai-guidelines#course-specific-ai-tools","position":68},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Course-Specific AI Tools"},"content":"","type":"content","url":"/ai-guidelines#course-specific-ai-tools","position":69},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Recommended Tools","lvl2":"Course-Specific AI Tools"},"type":"lvl3","url":"/ai-guidelines#recommended-tools","position":70},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Recommended Tools","lvl2":"Course-Specific AI Tools"},"content":"ChatGPT/Claude: For conceptual explanations and debugging assistance (use in browser/app, not IDE)\n\nPerplexity: For research with automatic source citation\n\nNotebookLM: For creating study guides from course materials\n\nNote: GitHub Copilot and all IDE AI assistants remain disabled throughout the semester per syllabus policy","type":"content","url":"/ai-guidelines#recommended-tools","position":71},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Tool Selection Strategy","lvl2":"Course-Specific AI Tools"},"type":"lvl3","url":"/ai-guidelines#tool-selection-strategy","position":72},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl3":"Tool Selection Strategy","lvl2":"Course-Specific AI Tools"},"content":"Domain-Specific Tools: Prefer specialized tools for astronomy/physics questions\n\nGeneral Tools: Use for programming syntax and debugging\n\nMultiple Sources: Cross-reference between different AI tools and documentation\n\nHuman Verification: Always verify AI responses with instructor/peers/documentation","type":"content","url":"/ai-guidelines#tool-selection-strategy","position":73},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Bottom Line"},"type":"lvl2","url":"/ai-guidelines#bottom-line","position":74},{"hierarchy":{"lvl1":"ASTR 596: Artificial Intelligence Policy and Learning Framework","lvl2":"Bottom Line"},"content":"AI is a powerful tool that amplifies human intelligence and capability. It does not replace the need for deep understanding, critical thinking, or foundational knowledge. Students who master both fundamental competencies AND strategic AI usage will thrive. Those who attempt to substitute AI for learning will fail to meet the elevated standards that AI-augmented practice demands.\n\nYour goal is not just to complete assignments, but to become a computational astrophysicist capable of tackling novel research problems with both traditional methods and cutting-edge AI tools. This requires mastering both domains.","type":"content","url":"/ai-guidelines#bottom-line","position":75},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe"},"type":"lvl1","url":"/curriculum-guide","position":0},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe"},"content":"","type":"content","url":"/curriculum-guide","position":1},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Course Design and Pedagogical Framework"},"type":"lvl2","url":"/curriculum-guide#course-design-and-pedagogical-framework","position":2},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Course Design and Pedagogical Framework"},"content":"","type":"content","url":"/curriculum-guide#course-design-and-pedagogical-framework","position":3},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Table of Contents"},"type":"lvl2","url":"/curriculum-guide#table-of-contents","position":4},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Table of Contents"},"content":"","type":"content","url":"/curriculum-guide#table-of-contents","position":5},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Quick Navigation","lvl2":"Table of Contents"},"type":"lvl3","url":"/curriculum-guide#quick-navigation","position":6},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Quick Navigation","lvl2":"Table of Contents"},"content":"Why This Course is Designed the Way It Is\n\nThe Big Picture: Your Learning Journey\n\nPhase 1: Foundation Building (Overview)\n\nPhase 2: Bridge to Statistics (Overview)\n\nPhase 3: Advanced Statistical Methods (Overview)\n\nPhase 4: Modern Machine Learning (Overview)\n\nWhy This Progression Works","type":"content","url":"/curriculum-guide#quick-navigation","position":7},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Detailed Course Structure","lvl2":"Table of Contents"},"type":"lvl3","url":"/curriculum-guide#detailed-course-structure","position":8},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Detailed Course Structure","lvl2":"Table of Contents"},"content":"","type":"content","url":"/curriculum-guide#detailed-course-structure","position":9},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Phase 1: Foundation Building","lvl3":"Detailed Course Structure","lvl2":"Table of Contents"},"type":"lvl4","url":"/curriculum-guide#phase-1-foundation-building","position":10},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Phase 1: Foundation Building","lvl3":"Detailed Course Structure","lvl2":"Table of Contents"},"content":"Week 1-2: Python, OOP, and Stellar Physics\n\nMathematical Foundations\n\nScientific Background\n\nComputational Implementation\n\nWeek 3: N-Body Dynamics and Numerical Integration\n\nMathematical Foundations\n\nScientific Background\n\nComputational Implementation","type":"content","url":"/curriculum-guide#phase-1-foundation-building","position":11},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Phase 2: Bridge to Statistical Thinking","lvl3":"Detailed Course Structure","lvl2":"Table of Contents"},"type":"lvl4","url":"/curriculum-guide#phase-2-bridge-to-statistical-thinking","position":12},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Phase 2: Bridge to Statistical Thinking","lvl3":"Detailed Course Structure","lvl2":"Table of Contents"},"content":"Week 4: Monte Carlo Methods and Statistical Sampling\n\nMathematical Foundations\n\nScientific Background\n\nComputational Implementation\n\nWeeks 5-6: Linear Regression and ML Fundamentals\n\nMathematical Foundations\n\nScientific Background\n\nComputational Implementation","type":"content","url":"/curriculum-guide#phase-2-bridge-to-statistical-thinking","position":13},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Phase 3: Deep Statistical Methods","lvl3":"Detailed Course Structure","lvl2":"Table of Contents"},"type":"lvl4","url":"/curriculum-guide#phase-3-deep-statistical-methods","position":14},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Phase 3: Deep Statistical Methods","lvl3":"Detailed Course Structure","lvl2":"Table of Contents"},"content":"Weeks 7-8: Monte Carlo Radiative Transfer\n\nMathematical Foundations\n\nScientific Background\n\nComputational Implementation\n\nWeeks 9-10: Bayesian Inference and MCMC\n\nMathematical Foundations\n\nScientific Background\n\nComputational Implementation","type":"content","url":"/curriculum-guide#phase-3-deep-statistical-methods","position":15},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Phase 4: Modern Machine Learning","lvl3":"Detailed Course Structure","lvl2":"Table of Contents"},"type":"lvl4","url":"/curriculum-guide#phase-4-modern-machine-learning","position":16},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Phase 4: Modern Machine Learning","lvl3":"Detailed Course Structure","lvl2":"Table of Contents"},"content":"Weeks 11-12: Gaussian Processes\n\nMathematical Foundations\n\nScientific Background\n\nComputational Implementation\n\nWeeks 13-15: Neural Networks from Scratch\n\nMathematical Foundations\n\nScientific Background\n\nComputational Implementation\n\nWeek 16: JAX and Modern Frameworks\n\nMathematical and Computational Foundations","type":"content","url":"/curriculum-guide#phase-4-modern-machine-learning","position":17},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Pedagogical Framework","lvl2":"Table of Contents"},"type":"lvl3","url":"/curriculum-guide#pedagogical-framework","position":18},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Pedagogical Framework","lvl2":"Table of Contents"},"content":"Integration and Synthesis\n\nPedagogical Insights for Course Design\n\nBuilding Intuition Through Implementation\n\nComputational Thinking Development\n\nWhy You‚Äôll Sometimes Struggle (And Why That‚Äôs Good)\n\nLearning Through Creation\n\nResources and References for Course Development\n\nConclusion: The Transformative Journey","type":"content","url":"/curriculum-guide#pedagogical-framework","position":19},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Why This Course is Designed the Way It Is"},"type":"lvl2","url":"/curriculum-guide#why-this-course-is-designed-the-way-it-is","position":20},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Why This Course is Designed the Way It Is"},"content":"","type":"content","url":"/curriculum-guide#why-this-course-is-designed-the-way-it-is","position":21},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"The Big Picture: Your Learning Journey Through Computational Astrophysics","lvl2":"Why This Course is Designed the Way It Is"},"type":"lvl3","url":"/curriculum-guide#the-big-picture-your-learning-journey-through-computational-astrophysics","position":22},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"The Big Picture: Your Learning Journey Through Computational Astrophysics","lvl2":"Why This Course is Designed the Way It Is"},"content":"This course is designed with a specific progression in mind: Fundamentals ‚Üí Classical Methods ‚Üí Statistical Methods ‚Üí Modern ML. This mirrors how the field itself evolved, but more importantly, each topic builds essential skills for the next. You‚Äôll essentially recreate the historical development of computational physics, but in a compressed, logical sequence that maximizes your learning.\n\nWhy are we sharing this with you? We believe in transparency. This document shows you the thought process behind every topic choice, timing, and connection. Understanding the ‚Äúwhy‚Äù behind your curriculum will help you see the forest through the trees and appreciate how each assignment builds toward your growth as a computational scientist.","type":"content","url":"/curriculum-guide#the-big-picture-your-learning-journey-through-computational-astrophysics","position":23},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Phase 1: Foundation Building (Weeks 1-2)","lvl2":"Why This Course is Designed the Way It Is"},"type":"lvl3","url":"/curriculum-guide#phase-1-foundation-building-weeks-1-2","position":24},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Phase 1: Foundation Building (Weeks 1-2)","lvl2":"Why This Course is Designed the Way It Is"},"content":"","type":"content","url":"/curriculum-guide#phase-1-foundation-building-weeks-1-2","position":25},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Python/OOP and Stellar Physics","lvl2":"Why This Course is Designed the Way It Is"},"type":"lvl3","url":"/curriculum-guide#python-oop-and-stellar-physics","position":26},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Python/OOP and Stellar Physics","lvl2":"Why This Course is Designed the Way It Is"},"content":"You‚Äôll start with stellar physics because it‚Äôs conceptually accessible - everyone intuitively understands that hot things glow and massive things attract. But here‚Äôs the educational design at work: implementing a Star class teaches you object-oriented thinking naturally. A star has properties (mass, temperature, luminosity) and methods (evolve, radiate, calculate_lifetime). This makes OOP concrete rather than abstract.\n\nThe stellar physics will introduce key concepts you‚Äôll use throughout the course:\n\nScaling relations (L ‚àù M^{3.5}) prepare you for power laws in ML\n\nEquilibrium conditions (hydrostatic balance) introduce the idea of optimization\n\nTime evolution sets up for numerical integration next week","type":"content","url":"/curriculum-guide#python-oop-and-stellar-physics","position":27},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"N-Body Dynamics","lvl2":"Why This Course is Designed the Way It Is"},"type":"lvl3","url":"/curriculum-guide#n-body-dynamics","position":28},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"N-Body Dynamics","lvl2":"Why This Course is Designed the Way It Is"},"content":"This becomes your introduction to numerical methods. N-body dynamics is perfectly positioned here because:\n\nThe physics is simple: F = \\tfrac{GMm}{r¬≤} - everyone gets this\n\nThe computational challenge is real: can‚Äôt solve analytically for N>2\n\nIntroduces fundamental numerical concepts:\n\nDiscretization (time steps)\n\nIntegration schemes (Euler ‚Üí Verlet ‚Üí Runge-Kutta)\n\nError accumulation and energy conservation\n\nComputational complexity (O(N¬≤) naive vs O(N\\log N) tree codes)\n\nYou‚Äôll discover firsthand why algorithm choice matters when your solar system flies apart using Euler integration but remains stable with Verlet. This visceral experience of numerical stability will stay with you throughout the course.","type":"content","url":"/curriculum-guide#n-body-dynamics","position":29},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 2: Bridge to Statistics (Weeks 4-6)"},"type":"lvl2","url":"/curriculum-guide#phase-2-bridge-to-statistics-weeks-4-6","position":30},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 2: Bridge to Statistics (Weeks 4-6)"},"content":"","type":"content","url":"/curriculum-guide#phase-2-bridge-to-statistics-weeks-4-6","position":31},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Monte Carlo Methods","lvl2":"Phase 2: Bridge to Statistics (Weeks 4-6)"},"type":"lvl3","url":"/curriculum-guide#monte-carlo-methods","position":32},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Monte Carlo Methods","lvl2":"Phase 2: Bridge to Statistics (Weeks 4-6)"},"content":"This serves as the perfect bridge topic. Monte Carlo connects deterministic physics to statistical thinking. You‚Äôre still solving physics problems, but now using random sampling. You‚Äôll learn:\n\nRandom sampling as a computational tool (computing œÄ by throwing darts)\n\nImportance sampling (sample where it matters)\n\nVariance reduction (smart sampling beats brute force)\n\nThe power of statistical approaches to deterministic problems\n\nThis prepares your mind for the probabilistic thinking required in machine learning, while still feeling like ‚Äúphysics.‚Äù","type":"content","url":"/curriculum-guide#monte-carlo-methods","position":33},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Linear Regression/ML Fundamentals","lvl2":"Phase 2: Bridge to Statistics (Weeks 4-6)"},"type":"lvl3","url":"/curriculum-guide#linear-regression-ml-fundamentals","position":34},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Linear Regression/ML Fundamentals","lvl2":"Phase 2: Bridge to Statistics (Weeks 4-6)"},"content":"Now you‚Äôll make the leap to data-driven methods, but regression is familiar enough not to overwhelm you. Here‚Äôs what makes this placement perfect in your learning journey:\n\nStarting from scratch means deriving the normal equation (X^T X)Œ≤ = X^T y, which shows:\n\nLinear algebra underpins everything in ML\n\nOptimization (minimizing squared error) - your first loss function!\n\nGradient descent - THE fundamental algorithm of deep learning\n\nOverfitting - why more complex isn‚Äôt always better\n\nRegularization (Ridge/Lasso) - controlling model complexity\n\nBy building this from numpy arrays rather than using sklearn, you‚Äôll understand that ML isn‚Äôt magic - it‚Äôs just math and code.","type":"content","url":"/curriculum-guide#linear-regression-ml-fundamentals","position":35},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 3: Advanced Statistical Methods (Weeks 7-10)"},"type":"lvl2","url":"/curriculum-guide#phase-3-advanced-statistical-methods-weeks-7-10","position":36},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 3: Advanced Statistical Methods (Weeks 7-10)"},"content":"","type":"content","url":"/curriculum-guide#phase-3-advanced-statistical-methods-weeks-7-10","position":37},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Monte Carlo Radiative Transfer","lvl2":"Phase 3: Advanced Statistical Methods (Weeks 7-10)"},"type":"lvl3","url":"/curriculum-guide#monte-carlo-radiative-transfer","position":38},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Monte Carlo Radiative Transfer","lvl2":"Phase 3: Advanced Statistical Methods (Weeks 7-10)"},"content":"This is where things get beautiful. Radiative transfer combines everything you‚Äôve learned:\n\nMonte Carlo methods (photon packets)\n\nObject-oriented design (Photon class, Grid class)\n\nPhysical insight (scattering, absorption)\n\nStatistical thinking (sampling optical depths)\n\nMCRT is how astronomers actually model real observations - from stellar atmospheres to galaxy formation. You‚Äôll see your code produce synthetic observations that look like real telescope data. This connection between your code and real science is incredibly motivating.","type":"content","url":"/curriculum-guide#monte-carlo-radiative-transfer","position":39},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Bayesian Inference and MCMC","lvl2":"Phase 3: Advanced Statistical Methods (Weeks 7-10)"},"type":"lvl3","url":"/curriculum-guide#bayesian-inference-and-mcmc","position":40},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Bayesian Inference and MCMC","lvl2":"Phase 3: Advanced Statistical Methods (Weeks 7-10)"},"content":"This represents the intellectual peak of the course. Bayesian thinking will fundamentally change how you see uncertainty and inference. You‚Äôll learn:\n\nBayesian Fundamentals:\n\nPrior beliefs + Data = Updated beliefs (conceptually)\n\nBayes Law: P(\\text{model|data}) ‚àù P(\\text{data|model}) √ó P(\\text{model})\n\nEverything is a probability distribution, not a single number\n\nMCMC (Markov Chain Monte Carlo):\nThis is where minds get blown. MCMC solves the problem: ‚ÄúI can calculate P(Œ∏|\\text{data}) but I can‚Äôt integrate it analytically to get parameter distributions.‚Äù\n\nThe Metropolis-Hastings algorithm is surprisingly simple:\n\nPropose new parameters.\n\nCalculate likelihood ratio.\n\nAccept/reject based on ratio.\n\nRepeat until convergence.\n\nBut the implications are profound - suddenly you can fit models with hundreds of parameters, get full uncertainty distributions, and do model comparison. This is how astronomers measure dark energy, find exoplanets, and determine stellar parameters.","type":"content","url":"/curriculum-guide#bayesian-inference-and-mcmc","position":41},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 4: Modern Machine Learning (Overview - Weeks 11-16)"},"type":"lvl2","url":"/curriculum-guide#phase-4-modern-machine-learning-overview-weeks-11-16","position":42},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 4: Modern Machine Learning (Overview - Weeks 11-16)"},"content":"","type":"content","url":"/curriculum-guide#phase-4-modern-machine-learning-overview-weeks-11-16","position":43},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Gaussian Processes","lvl2":"Phase 4: Modern Machine Learning (Overview - Weeks 11-16)"},"type":"lvl3","url":"/curriculum-guide#gaussian-processes","position":44},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Gaussian Processes","lvl2":"Phase 4: Modern Machine Learning (Overview - Weeks 11-16)"},"content":"Gaussian Processes serve as the perfect bridge between classical statistics and modern ML. They‚Äôre still Bayesian (everything is distributions) but now you‚Äôre learning functions, not parameters.\n\nA GP is basically saying: ‚ÄúI don‚Äôt know the function f(x), but I know it‚Äôs smooth, and here‚Äôs my uncertainty everywhere.‚Äù It‚Äôs like having error bars on your interpolation. In astronomy, GPs are used for:\n\nRemoving stellar variability from exoplanet data.\n\nInterpolating sparse observations.\n\nQuantifying uncertainty in predictions.\n\nThe covariance function (kernel) determines your prior beliefs about smoothness, periodicity, etc. This connects to the kernel trick in SVMs and prepares you for thinking about feature spaces.","type":"content","url":"/curriculum-guide#gaussian-processes","position":45},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Neural Networks from Scratch","lvl2":"Phase 4: Modern Machine Learning (Overview - Weeks 11-16)"},"type":"lvl3","url":"/curriculum-guide#neural-networks-from-scratch","position":46},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Neural Networks from Scratch","lvl2":"Phase 4: Modern Machine Learning (Overview - Weeks 11-16)"},"content":"This is your culmination. In your final project, you‚Äôll build a neural network using only JAX, understanding every piece:\n\nForward propagation:\n\nLinear transformation: z = Wx + b\n\nNon-linearity: a = œÉ(z)\n\nStack these to get deep networks\n\nBackpropagation (the key insight):\nUsing the chain rule to propagate errors backwards:\n\n‚àÇL/‚àÇW = ‚àÇL/‚àÇz √ó ‚àÇz/‚àÇW\n\nThis is just calculus, not magic!\n\nYou‚Äôll implement:\n\nGradient descent variants (SGD, momentum, Adam).\n\nDifferent architectures (fully connected, CNN basics).\n\nRegularization (dropout, batch norm).","type":"content","url":"/curriculum-guide#neural-networks-from-scratch","position":47},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"JAX and Modern Tools","lvl2":"Phase 4: Modern Machine Learning (Overview - Weeks 11-16)"},"type":"lvl3","url":"/curriculum-guide#jax-and-modern-tools","position":48},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"JAX and Modern Tools","lvl2":"Phase 4: Modern Machine Learning (Overview - Weeks 11-16)"},"content":"Finally, you‚Äôll see how your from-scratch implementations translate to modern tools. JAX is perfect for this because:\n\nIt looks like numpy (familiar!)\n\nBut adds automatic differentiation (grad(f) just works!)\n\nAnd JIT compilation (100x speedups)\n\nAnd easy GPU usage\n\nYou‚Äôll see that your hand-coded backpropagation is exactly what jax.grad() does, but faster. This demystifies modern frameworks while showing their power.","type":"content","url":"/curriculum-guide#jax-and-modern-tools","position":49},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Why This Progression Works"},"type":"lvl2","url":"/curriculum-guide#why-this-progression-works","position":50},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Why This Progression Works"},"content":"Each topic motivates the next: Numerical integration struggles motivate Monte Carlo. Monte Carlo motivates statistics. Statistics motivates ML.\n\nComplexity ramps gradually: Start with F=ma, end with training neural networks, but each step is manageable.\n\nTheory and practice interleave: Implement first, understand deeply, see limitations, motivate next method.\n\nReal astrophysics throughout: Every algorithm solves actual astronomy problems, maintaining relevance and motivation.\n\nModern skills emerge from fundamentals: By the end, you aren‚Äôt just using the JAXecosystem (e.g., Flax, Optax) - you‚Äôll understand what these tools are doing under the hood.\n\nThis progression takes you from ‚ÄúI can code physics‚Äù to ‚ÄúI can implement any algorithm from a paper‚Äù - which is exactly what research requires. You‚Äôre not just learning techniques; you‚Äôre building computational intuition and confidence.\n\nSpecial note: Pay particular attention to weeks 9-10 (Bayesian/MCMC) and 11-12 (Gaussian Processes) as these are where classical scientific computing meets modern ML. These topics will deepen your ML understanding more than any pure ML course because you‚Äôll understand the statistical foundations that deep learning often glosses over.","type":"content","url":"/curriculum-guide#why-this-progression-works","position":51},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Understanding the Course Architecture"},"type":"lvl2","url":"/curriculum-guide#understanding-the-course-architecture","position":52},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Understanding the Course Architecture"},"content":"This course represents a carefully orchestrated progression through computational astrophysics and machine learning (ML), where each topic serves as both a destination and a stepping stone in your learning journey. Your path from classical deterministic physics to modern probabilistic machine learning mirrors the historical development of computational science, but compressed into a single semester. More importantly, this progression builds your mathematical maturity and computational intuition in a way that makes each new concept feel like a natural extension of what you‚Äôve already learned.\n\nThe strength of this structure lies in how it interweaves three threads: the physics provides concrete motivation and real-world context, the mathematics provides the rigorous foundation, and the computation provides the practical skills you‚Äôll need. No topic exists in isolation ‚Äî each one reinforces and extends the others, creating a web of understanding in your mind rather than a linear sequence of disconnected techniques.","type":"content","url":"/curriculum-guide#understanding-the-course-architecture","position":53},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"type":"lvl2","url":"/curriculum-guide#phase-1-foundation-building-weeks-1-3","position":54},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"content":"","type":"content","url":"/curriculum-guide#phase-1-foundation-building-weeks-1-3","position":55},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Week 1-2: Python, Object-Oriented Programming, and Stellar Physics","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"type":"lvl3","url":"/curriculum-guide#week-1-2-python-object-oriented-programming-and-stellar-physics","position":56},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Week 1-2: Python, Object-Oriented Programming, and Stellar Physics","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"content":"","type":"content","url":"/curriculum-guide#week-1-2-python-object-oriented-programming-and-stellar-physics","position":57},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Stellar Physics)","lvl3":"Week 1-2: Python, Object-Oriented Programming, and Stellar Physics","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"type":"lvl4","url":"/curriculum-guide#mathematical-foundations-stellar-physics","position":58},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Stellar Physics)","lvl3":"Week 1-2: Python, Object-Oriented Programming, and Stellar Physics","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"content":"The stellar physics component introduces you to power laws and scaling relations, which appear throughout astrophysics and machine learning. The fundamental stellar structure equations provide a perfect playground for understanding how physical constraints translate to code structure.\n\nThe mass-luminosity relation, L ‚àù M^Œ± where Œ± ‚âà 3.5 for main sequence stars, introduces you to power law relationships. This seemingly simple relation emerges from complex physics: hydrostatic equilibrium \\left(dP/dr = -GMœÅ/r¬≤ \\right), energy transport (either radiative diffusion or convection), and nuclear fusion rates that depend sensitively on temperature (Œµ ‚àù T^n where n ranges from 4 for the PP chain to 20 for the CNO cycle).\n\nThe Stefan-Boltzmann law, L = 4œÄR¬≤œÉT‚Å¥, teaches you about radiation physics while introducing the concept of effective temperature. This becomes crucial later when you‚Äôll implement radiative transfer. The relationship between mass, radius, and temperature for main sequence stars (R ‚àù M^{0.7}, T ‚àù M^{0.5}) emerges from solving the stellar structure equations for main-sequence stars, showing how complex systems can often be understood through dimensional analysis and scaling arguments.","type":"content","url":"/curriculum-guide#mathematical-foundations-stellar-physics","position":59},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Stellar Physics)","lvl3":"Week 1-2: Python, Object-Oriented Programming, and Stellar Physics","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"type":"lvl4","url":"/curriculum-guide#scientific-background-stellar-physics","position":60},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Stellar Physics)","lvl3":"Week 1-2: Python, Object-Oriented Programming, and Stellar Physics","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"content":"Stars are self-gravitating balls of gas in hydrostatic equilibrium (HSE), where the outward pressure gradient \\left(\\tfrac{dP}{dr}\\right) of a star with mass M exactly balances the inward gravitational pull \\rho(r) g where \\rho(r) is the local density is the density and g = \\tfrac{GM(<r)}{r^2} is the local gravitational acceleration. This balance, expressed asdP/dr = -GMœÅ/r¬≤,\n\nis our first differential equation. You‚Äôll learn that this simple equation, combined with energy generation and transport, determines a star‚Äôs entire structure.\n\nThe Hertzsprung-Russell diagram, plotting luminosity versus temperature, isn‚Äôt just a classification scheme‚Äîit‚Äôs a map of stellar physics. The main sequence represents hydrogen fusion equilibrium, the giant branch shows shell burning and envelope expansion, and white dwarfs demonstrate quantum degeneracy pressure. By implementing a simple stellar evolution model, you‚Äôll see how stars move through this parameter space over time.","type":"content","url":"/curriculum-guide#scientific-background-stellar-physics","position":61},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Stellar Physics)","lvl3":"Week 1-2: Python, Object-Oriented Programming, and Stellar Physics","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"type":"lvl4","url":"/curriculum-guide#computational-implementation-stellar-physics","position":62},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Stellar Physics)","lvl3":"Week 1-2: Python, Object-Oriented Programming, and Stellar Physics","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"content":"The object-oriented design emerges naturally from the physics. A Star class encapsulates properties (mass, temperature, luminosity, composition) and methods (evolve, calculate_luminosity, determine_lifetime). This teaches you that OOP isn‚Äôt about abstract inheritance hierarchies‚Äîit‚Äôs about modeling real systems with interacting components.class Star:\n    def __init__(self, mass, metallicity=0.02):\n        self.mass = mass  # in solar masses\n        self.metallicity = metallicity\n        self.age = 0\n        self.phase = \"main_sequence\"\n        \n    def calculate_luminosity(self):\n        \"\"\"Main sequence mass-luminosity relation\"\"\"\n        if self.mass < 0.43:\n            return self.mass**2.3\n        elif self.mass < 2:\n            return self.mass**4\n        else:\n            return 1.4 * self.mass**3.5\n            \n    def evolve(self, dt):\n        \"\"\"Evolve star forward by time dt\"\"\"\n        # Main sequence lifetime ‚àù M/L ‚àù M^(-2.5)\n        ms_lifetime = 10e9 * self.mass**(-2.5)  # years\n        self.age += dt\n        \n        if self.age > ms_lifetime:\n            self.phase = \"red_giant\"\n            # Implement post-main-sequence evolution\n\nThis code structure teaches modular thinking‚Äîeach method does one thing well, making debugging and extension straightforward.","type":"content","url":"/curriculum-guide#computational-implementation-stellar-physics","position":63},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Week 3: N-Body Dynamics and Numerical Integration","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"type":"lvl3","url":"/curriculum-guide#week-3-n-body-dynamics-and-numerical-integration","position":64},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Week 3: N-Body Dynamics and Numerical Integration","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"content":"","type":"content","url":"/curriculum-guide#week-3-n-body-dynamics-and-numerical-integration","position":65},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (N-Body Dynamics)","lvl3":"Week 3: N-Body Dynamics and Numerical Integration","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"type":"lvl4","url":"/curriculum-guide#mathematical-foundations-n-body-dynamics","position":66},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (N-Body Dynamics)","lvl3":"Week 3: N-Body Dynamics and Numerical Integration","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"content":"N-body dynamics introduces the fundamental challenge of numerical methods: solving differential equations that have no analytical solution. For N gravitating bodies, we have a system of coupled second-order ODEs:\\frac{d^2\\vec{r}_i}{dt^2} = \\sum_{j \\neq i} \\frac{Gm_j(\\vec{r}_j - \\vec{r}_i)}{|\\vec{r}_j - \\vec{r}_i|^3}\n\nThis vector equation represents 3N coupled second-order ODEs (or equivalently, 6N first-order ODEs when we include velocities). The seemingly simple 1/r^2 force law leads to surprisingly complex dynamics‚Äîfrom stable orbits to chaotic trajectories.\n\nThe critical insight you‚Äôll gain is that discretization introduces error. The Euler method, r(t+\\Delta t) = r(t) + v(t)\\Delta t, seems obvious but fails catastrophically for orbital dynamics. The local truncation error is O(\\Delta t^2), but more importantly, it doesn‚Äôt conserve energy. You‚Äôll watch your planets spiral into the sun or escape to infinity, learning viscerally that algorithm choice matters.\n\nThe Verlet integration scheme, r(t+\\Delta t) = 2r(t) - r(t-\\Delta t) + a(t)\\Delta t^2, is symplectic‚Äîit conserves phase space volume. This means errors in position and velocity are bounded rather than growing exponentially. The mathematics of symplectic integrators connects to Hamiltonian mechanics and Liouville‚Äôs theorem, showing you that numerical methods aren‚Äôt just recipes but have deep theoretical foundations.","type":"content","url":"/curriculum-guide#mathematical-foundations-n-body-dynamics","position":67},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (N-Body Dynamics)","lvl3":"Week 3: N-Body Dynamics and Numerical Integration","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"type":"lvl4","url":"/curriculum-guide#scientific-background-n-body-dynamics","position":68},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (N-Body Dynamics)","lvl3":"Week 3: N-Body Dynamics and Numerical Integration","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"content":"The N-body problem is foundational to astronomy. From planetary systems to galaxy clusters, gravitational dynamics shapes the universe. The three-body problem‚Äôs lack of general analytical solution (proven by Poincar√©) demonstrates that even simple physical laws can produce intractable mathematics, motivating numerical approaches.\n\nYou‚Äôll implement increasingly complex scenarios: two-body orbits (testing Kepler‚Äôs laws), the restricted three-body problem (introducing Lagrange points), and finally full N-body systems. You‚Äôll discover emergent phenomena like orbital resonances, tidal disruption, and dynamical relaxation. The computational cost scaling as O(N^2) for direct summation motivates discussion of tree codes and fast multipole methods, connecting to computer science concepts like spatial data structures.","type":"content","url":"/curriculum-guide#scientific-background-n-body-dynamics","position":69},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (N-Body Dynamics)","lvl3":"Week 3: N-Body Dynamics and Numerical Integration","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"type":"lvl4","url":"/curriculum-guide#computational-implementation-n-body-dynamics","position":70},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (N-Body Dynamics)","lvl3":"Week 3: N-Body Dynamics and Numerical Integration","lvl2":"Phase 1: Foundation Building (Weeks 1-3)"},"content":"The implementation teaches crucial numerical computing concepts:def leapfrog_integration(positions, velocities, masses, dt, n_steps):\n    \"\"\"\n    Leapfrog integration - a symplectic integrator\n    Positions and velocities are offset by dt/2\n    \"\"\"\n    for step in range(n_steps):\n        # Kick: update velocities by half step\n        accelerations = compute_accelerations(positions, masses)\n        velocities += accelerations * dt/2\n        \n        # Drift: update positions by full step\n        positions += velocities * dt\n        \n        # Kick: update velocities by another half step\n        accelerations = compute_accelerations(positions, masses)\n        velocities += accelerations * dt/2\n        \n    return positions, velocities\n\ndef compute_accelerations(positions, masses):\n    \"\"\"\n    Compute gravitational accelerations for all particles\n    This is the O(N¬≤) bottleneck\n    \"\"\"\n    n_particles = len(masses)\n    accelerations = np.zeros_like(positions)\n    \n    for i in range(n_particles):\n        for j in range(i+1, n_particles):\n            # Vector from i to j\n            dr = positions[j] - positions[i]\n            r = np.linalg.norm(dr)\n            \n            # Gravitational acceleration (G=1 in computational units)\n            a_mag = masses[j] / r**3\n            \n            # Update both particles (Newton's third law)\n            accelerations[i] += a_mag * dr\n            accelerations[j] -= (masses[i]/masses[j]) * a_mag * dr\n            \n    return accelerations\n\nYou‚Äôll learn about computational units (setting G=1, measuring distances in AU, time in years), numerical stability (why r^3 in the denominator rather than r^2 divided by r), and performance optimization (symmetry exploitation, vectorization).","type":"content","url":"/curriculum-guide#computational-implementation-n-body-dynamics","position":71},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"type":"lvl2","url":"/curriculum-guide#phase-2-bridge-to-statistical-thinking-weeks-4-6","position":72},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"content":"","type":"content","url":"/curriculum-guide#phase-2-bridge-to-statistical-thinking-weeks-4-6","position":73},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Week 4: Monte Carlo Methods and Statistical Sampling","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"type":"lvl3","url":"/curriculum-guide#week-4-monte-carlo-methods-and-statistical-sampling","position":74},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Week 4: Monte Carlo Methods and Statistical Sampling","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"content":"","type":"content","url":"/curriculum-guide#week-4-monte-carlo-methods-and-statistical-sampling","position":75},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Monte Carlo Methods)","lvl3":"Week 4: Monte Carlo Methods and Statistical Sampling","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"type":"lvl4","url":"/curriculum-guide#mathematical-foundations-monte-carlo-methods","position":76},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Monte Carlo Methods)","lvl3":"Week 4: Monte Carlo Methods and Statistical Sampling","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"content":"Monte Carlo methods rest on the profound insight that we can solve deterministic problems using random numbers. The mathematical foundation is the Law of Large Numbers: as we take more random samples, their average converges to the expected value.\n\nThe basic Monte Carlo integration formula transforms an integral into an expectation value:\\int_a^b f(x)dx \\approx (b-a) \\times \\frac{1}{N}\\sum f(x_i)\n\nwhere x_i are uniformly distributed random points. The error decreases as 1/\\sqrt{N} regardless of dimensionality, making Monte Carlo superior to deterministic quadrature for high-dimensional problems.\n\nImportance sampling introduces a deeper concept: we can reduce variance by sampling from a distribution that resembles our integrand. If we sample from distribution p(x) instead of uniformly:\\int f(x)dx = \\int \\frac{f(x)}{p(x)}p(x)dx \\approx \\frac{1}{N}\\sum \\frac{f(x_i)}{p(x_i)}\n\nThe art lies in choosing p(x) to minimize variance while remaining easy to sample from. This concept reappears in MCMC, particle filters, and variational inference.","type":"content","url":"/curriculum-guide#mathematical-foundations-monte-carlo-methods","position":77},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Monte Carlo Methods)","lvl3":"Week 4: Monte Carlo Methods and Statistical Sampling","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"type":"lvl4","url":"/curriculum-guide#scientific-background-monte-carlo-methods","position":78},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Monte Carlo Methods)","lvl3":"Week 4: Monte Carlo Methods and Statistical Sampling","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"content":"Monte Carlo methods revolutionized radiation transport, nuclear physics, and statistical mechanics. The name comes from the Manhattan Project, where Ulam and von Neumann used random sampling to study neutron diffusion. In astrophysics, Monte Carlo is essential for modeling radiative transfer in complex geometries, cosmic ray propagation, and stellar population synthesis.\n\nThe pedagogical beauty of starting with Monte Carlo is that it bridges deterministic and probabilistic thinking. Computing \\pi by randomly throwing darts at a circle inscribed in a square gives you an intuitive feel for how randomness can yield precise answers. You‚Äôll learn that Monte Carlo isn‚Äôt about getting lucky‚Äîit‚Äôs about using the law of large numbers to your advantage.","type":"content","url":"/curriculum-guide#scientific-background-monte-carlo-methods","position":79},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Monte Carlo Methods)","lvl3":"Week 4: Monte Carlo Methods and Statistical Sampling","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"type":"lvl4","url":"/curriculum-guide#computational-implementation-monte-carlo-methods","position":80},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Monte Carlo Methods)","lvl3":"Week 4: Monte Carlo Methods and Statistical Sampling","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"content":"You‚Äôll implement progressively sophisticated Monte Carlo algorithms:def monte_carlo_pi(n_samples):\n    \"\"\"\n    Estimate œÄ using Monte Carlo sampling\n    Demonstrates basic MC principles\n    \"\"\"\n    inside_circle = 0\n    \n    for _ in range(n_samples):\n        x, y = np.random.uniform(-1, 1, 2)\n        if x**2 + y**2 <= 1:\n            inside_circle += 1\n    \n    # Area of circle / Area of square = œÄ/4\n    pi_estimate = 4 * inside_circle / n_samples\n    \n    # Standard error decreases as 1/‚àöN\n    std_error = np.sqrt(pi_estimate * (4 - pi_estimate) / n_samples)\n    \n    return pi_estimate, std_error\n\ndef importance_sampling_integral(f, p, sample_from_p, n_samples):\n    \"\"\"\n    Integrate function f using importance sampling with distribution p\n    This is the foundation for MCMC and particle filters\n    \"\"\"\n    samples = [sample_from_p() for _ in range(n_samples)]\n    weights = [f(x) / p(x) for x in samples]\n    \n    integral = np.mean(weights)\n    variance = np.var(weights) / n_samples\n    \n    return integral, np.sqrt(variance)\n\nThrough these implementations, you‚Äôll discover key concepts: variance reduction techniques, the curse of dimensionality (though MC is less cursed than grid methods), and the trade-off between bias and variance.","type":"content","url":"/curriculum-guide#computational-implementation-monte-carlo-methods","position":81},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Weeks 5-6: Linear Regression and Machine Learning Fundamentals","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"type":"lvl3","url":"/curriculum-guide#weeks-5-6-linear-regression-and-machine-learning-fundamentals","position":82},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Weeks 5-6: Linear Regression and Machine Learning Fundamentals","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"content":"","type":"content","url":"/curriculum-guide#weeks-5-6-linear-regression-and-machine-learning-fundamentals","position":83},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Linear Regression)","lvl3":"Weeks 5-6: Linear Regression and Machine Learning Fundamentals","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"type":"lvl4","url":"/curriculum-guide#mathematical-foundations-linear-regression","position":84},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Linear Regression)","lvl3":"Weeks 5-6: Linear Regression and Machine Learning Fundamentals","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"content":"Linear regression introduces the core mathematical framework of machine learning: optimization. The problem is to find parameters Œ≤ that minimize the squared error:L(\\beta) = ||y - X\\beta||^2 = (y - X\\beta)^T(y - X\\beta)\n\nTaking the gradient and setting it to zero yields the normal equations:X^T X \\beta = X^T y\n\nThe solution \\beta = (X^T X)^{-1} X^T y requires that X^T X be invertible, introducing the concept of multicollinearity. This motivates regularization‚Äîadding a penalty term \\lambda||\\beta||^2 leads to Ridge regression:\\beta_{ridge} = (X^T X + \\lambda I)^{-1} X^T y\n\nThe addition of \\lambda I guarantees invertibility while shrinking coefficients toward zero, our first encounter with the bias-variance tradeoff.\n\nGradient descent provides an iterative alternative:\\beta_{t+1} = \\beta_t - \\alpha\\nabla L(\\beta_t) = \\beta_t + \\alpha X^T(y - X\\beta_t)\n\nThis simple update rule is the foundation of all deep learning. You‚Äôll learn about learning rates, convergence conditions, and the geometry of loss surfaces. The quadratic loss surface of linear regression has a unique global minimum (if X^T X is invertible), but you‚Äôll implement examples where poor conditioning leads to slow convergence, foreshadowing challenges in neural network training.","type":"content","url":"/curriculum-guide#mathematical-foundations-linear-regression","position":85},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Linear Regression)","lvl3":"Weeks 5-6: Linear Regression and Machine Learning Fundamentals","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"type":"lvl4","url":"/curriculum-guide#scientific-background-linear-regression","position":86},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Linear Regression)","lvl3":"Weeks 5-6: Linear Regression and Machine Learning Fundamentals","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"content":"In astronomy, linear regression appears everywhere: fitting spectral lines to measure redshifts, determining period-luminosity relations for Cepheid variables, and calibrating photometric redshifts. But more importantly, regression introduces the conceptual framework for all supervised learning.\n\nThe method of least squares has a rich history dating to Gauss and Legendre‚Äôs work on orbital determination. Gauss used it to recover the dwarf planet Ceres after it was lost in the sun‚Äôs glare‚Äîone of the first ‚Äúbig data‚Äù problems in astronomy. The connection between least squares and maximum likelihood estimation under Gaussian noise assumptions provides a probabilistic interpretation that prepares you for Bayesian methods.","type":"content","url":"/curriculum-guide#scientific-background-linear-regression","position":87},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Linear Regression)","lvl3":"Weeks 5-6: Linear Regression and Machine Learning Fundamentals","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"type":"lvl4","url":"/curriculum-guide#computational-implementation-linear-regression","position":88},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Linear Regression)","lvl3":"Weeks 5-6: Linear Regression and Machine Learning Fundamentals","lvl2":"Phase 2: Bridge to Statistical Thinking (Weeks 4-6)"},"content":"Building regression from scratch demystifies machine learning:class LinearRegression:\n    def __init__(self, regularization=0.0):\n        \"\"\"\n        Linear regression with optional L2 regularization (Ridge)\n        \"\"\"\n        self.regularization = regularization\n        self.weights = None\n        self.training_history = []\n        \n    def fit_closed_form(self, X, y):\n        \"\"\"\n        Solve using normal equations: (X^T X + ŒªI)^(-1) X^T y\n        \"\"\"\n        n_features = X.shape[1]\n        \n        # Add regularization term to diagonal\n        XtX = X.T @ X + self.regularization * np.eye(n_features)\n        Xty = X.T @ y\n        \n        # Solve the system (more stable than inverting)\n        self.weights = np.linalg.solve(XtX, Xty)\n        \n    def fit_gradient_descent(self, X, y, learning_rate=0.01, n_iterations=1000):\n        \"\"\"\n        Iterative optimization using gradient descent\n        This is how neural networks are trained!\n        \"\"\"\n        n_samples, n_features = X.shape\n        self.weights = np.zeros(n_features)\n        \n        for iteration in range(n_iterations):\n            # Forward pass: compute predictions\n            y_pred = X @ self.weights\n            \n            # Compute loss (MSE + regularization)\n            loss = np.mean((y - y_pred)**2) + self.regularization * np.sum(self.weights**2)\n            self.training_history.append(loss)\n            \n            # Backward pass: compute gradients\n            gradient = -2/n_samples * X.T @ (y - y_pred) + 2*self.regularization*self.weights\n            \n            # Update weights\n            self.weights -= learning_rate * gradient\n            \n            # Adaptive learning rate (basic version)\n            if iteration > 0 and loss > self.training_history[-2]:\n                learning_rate *= 0.9\n                \n    def predict(self, X):\n        return X @ self.weights\n\nThrough implementation, you‚Äôll discover practical issues: feature scaling, numerical stability, the importance of vectorization, and why we need train/validation/test splits. You‚Äôll see overfitting happen in real-time as you add polynomial features, motivating regularization and model selection.","type":"content","url":"/curriculum-guide#computational-implementation-linear-regression","position":89},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"type":"lvl2","url":"/curriculum-guide#phase-3-deep-statistical-methods-weeks-7-10","position":90},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"content":"","type":"content","url":"/curriculum-guide#phase-3-deep-statistical-methods-weeks-7-10","position":91},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Weeks 7-8: Monte Carlo Radiative Transfer","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"type":"lvl3","url":"/curriculum-guide#weeks-7-8-monte-carlo-radiative-transfer","position":92},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Weeks 7-8: Monte Carlo Radiative Transfer","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"content":"","type":"content","url":"/curriculum-guide#weeks-7-8-monte-carlo-radiative-transfer","position":93},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Radiative Transfer)","lvl3":"Weeks 7-8: Monte Carlo Radiative Transfer","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"type":"lvl4","url":"/curriculum-guide#mathematical-foundations-radiative-transfer","position":94},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Radiative Transfer)","lvl3":"Weeks 7-8: Monte Carlo Radiative Transfer","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"content":"Radiative transfer combines all previous concepts: Monte Carlo sampling, physical modeling, and statistical thinking. The radiative transfer equation describes how radiation propagates through a medium:\\frac{dI_\\nu}{ds} = -\\alpha_\\nu I_\\nu + j_\\nu\n\nwhere I_\\nu is specific intensity, \\alpha_\\nu is the absorption coefficient, and j_\\nu is the emission coefficient. In scattering-dominated regimes, this becomes an integro-differential equation that‚Äôs analytically intractable for realistic geometries.\n\nMonte Carlo radiative transfer (MCRT) reformulates this as a random walk problem. Photons are packets of energy that propagate, scatter, and absorb stochastically. The optical depth \\tau determines interaction probabilities:P(\\tau) = e^{-\\tau}\n\nSampling path lengths from this exponential distribution:l = -\\frac{\\ln(\\xi)}{\\alpha}\n\nwhere \\xi is a uniform random number. This transforms the deterministic PDE into a statistical sampling problem.\n\nScattering introduces angular redistribution. For Thomson scattering (electrons) or Rayleigh scattering (atoms), the phase function determines the scattering angle distribution. For dust grains, Mie theory provides complex angular distributions that you must sample efficiently using techniques like rejection sampling or inverse transform sampling.","type":"content","url":"/curriculum-guide#mathematical-foundations-radiative-transfer","position":95},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Radiative Transfer)","lvl3":"Weeks 7-8: Monte Carlo Radiative Transfer","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"type":"lvl4","url":"/curriculum-guide#scientific-background-radiative-transfer","position":96},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Radiative Transfer)","lvl3":"Weeks 7-8: Monte Carlo Radiative Transfer","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"content":"Radiative transfer is how we understand everything we see in astronomy. From stellar atmospheres to protoplanetary disks to cosmological reionization, radiation transport shapes observations. MCRT handles arbitrary 3D geometries, making it essential for modeling real astrophysical systems.\n\nYou‚Äôll implement increasing complexity: photon escape from a uniform sphere (testing against analytical solutions), dust absorption and scattering (understanding extinction and reddening), and finally frequency-dependent transfer with line profiles (connecting to spectroscopy). You‚Äôll discover why the interstellar medium looks patchy, how dust lanes in galaxies form, and why molecular clouds appear dark in optical but bright in infrared.","type":"content","url":"/curriculum-guide#scientific-background-radiative-transfer","position":97},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Radiative Transfer)","lvl3":"Weeks 7-8: Monte Carlo Radiative Transfer","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"type":"lvl4","url":"/curriculum-guide#computational-implementation-radiative-transfer","position":98},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Radiative Transfer)","lvl3":"Weeks 7-8: Monte Carlo Radiative Transfer","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"content":"MCRT teaches advanced programming patterns:class Photon:\n    def __init__(self, position, direction, wavelength, energy=1.0):\n        self.position = np.array(position)\n        self.direction = self.direction = np.array(direction) / np.linalg.norm(direction)\n        self.wavelength = wavelength\n        self.energy = energy\n        self.absorbed = False\n        self.escaped = False\n        \n    def propagate(self, optical_depth_function):\n        \"\"\"\n        Propagate photon through medium until interaction or escape\n        \"\"\"\n        # Sample optical depth to next interaction\n        tau_random = -np.log(np.random.random())\n        \n        # Ray-march to find physical distance for this optical depth\n        distance = self.tau_to_distance(tau_random, optical_depth_function)\n        \n        # Update position\n        self.position += distance * self.direction\n        \n    def scatter(self, phase_function):\n        \"\"\"\n        Scatter photon according to phase function\n        Demonstrates importance sampling for angular distributions\n        \"\"\"\n        # Sample scattering angles from phase function\n        cos_theta = phase_function.sample()\n        phi = 2 * np.pi * np.random.random()\n        \n        # Construct new direction in scattering frame\n        sin_theta = np.sqrt(1 - cos_theta**2)\n        \n        # Rotate to lab frame (involves coordinate transformation)\n        self.direction = self.rotate_direction(cos_theta, phi)\n        \n    def tau_to_distance(self, tau_target, optical_depth_function):\n        \"\"\"\n        Convert optical depth to physical distance via ray marching\n        This is where physics meets numerics\n        \"\"\"\n        distance = 0\n        tau_accumulated = 0\n        step_size = 0.01  # Adaptive stepping would be better\n        \n        while tau_accumulated < tau_target:\n            density = optical_depth_function(self.position + distance*self.direction)\n            dtau = density * step_size\n            \n            if tau_accumulated + dtau > tau_target:\n                # Linear interpolation for final step\n                remaining = tau_target - tau_accumulated\n                distance += step_size * remaining / dtau\n                break\n                \n            tau_accumulated += dtau\n            distance += step_size\n            \n        return distance\n\nclass RadiativeTransferSimulation:\n    def __init__(self, geometry, opacity_model):\n        self.geometry = geometry\n        self.opacity = opacity_model\n        self.photons_processed = 0\n        \n    def run(self, n_photons):\n        \"\"\"\n        Main MCRT loop - embarrassingly parallel\n        \"\"\"\n        observed_spectrum = []\n        \n        for _ in range(n_photons):\n            photon = self.emit_photon()\n            \n            while not (photon.absorbed or photon.escaped):\n                # Propagate to next interaction point\n                photon.propagate(self.opacity.optical_depth)\n                \n                # Check if escaped\n                if self.geometry.is_outside(photon.position):\n                    photon.escaped = True\n                    observed_spectrum.append(photon)\n                    continue\n                \n                # Determine interaction type (absorption vs scattering)\n                if np.random.random() < self.opacity.albedo:\n                    photon.scatter(self.opacity.phase_function)\n                else:\n                    photon.absorbed = True\n                    \n        return observed_spectrum\n\nYou‚Äôll learn about variance reduction (biasing photon emission toward the observer), parallelization strategies (photons are independent), and convergence testing (when do we have enough photons?).","type":"content","url":"/curriculum-guide#computational-implementation-radiative-transfer","position":99},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Weeks 9-10: Bayesian Inference and MCMC","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"type":"lvl3","url":"/curriculum-guide#weeks-9-10-bayesian-inference-and-mcmc","position":100},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Weeks 9-10: Bayesian Inference and MCMC","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"content":"","type":"content","url":"/curriculum-guide#weeks-9-10-bayesian-inference-and-mcmc","position":101},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Bayesian Inference)","lvl3":"Weeks 9-10: Bayesian Inference and MCMC","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"type":"lvl4","url":"/curriculum-guide#mathematical-foundations-bayesian-inference","position":102},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Bayesian Inference)","lvl3":"Weeks 9-10: Bayesian Inference and MCMC","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"content":"Bayesian inference will fundamentally change how you think about parameters and uncertainty. Instead of finding the ‚Äúbest‚Äù parameter values, you want the full probability distribution. Bayes‚Äô theorem:P(\\theta|D) = \\frac{P(D|\\theta)P(\\theta)}{P(D)}\n\nseems simple, but the denominator P(D) = \\int P(D|\\theta)P(\\theta)d\\theta is usually intractable. This integral over parameter space is why we need MCMC.\n\nMarkov Chain Monte Carlo solves this by constructing a Markov chain whose stationary distribution is our target posterior P(\\theta|D). The Metropolis-Hastings algorithm achieves this through a beautifully simple procedure:\n\nPropose new parameters: \\theta' \\sim q(\\theta'|\\theta)\n\nCalculate acceptance ratio: \\alpha = \\min\\left(1, \\frac{P(D|\\theta')P(\\theta')}{P(D|\\theta)P(\\theta)} \\times \\frac{q(\\theta|\\theta')}{q(\\theta'|\\theta)}\\right)\n\nAccept with probability \\alpha\n\nThe magic is that we never need P(D)‚Äîit cancels in the ratio! The detailed balance condition ensures our chain converges to the correct distribution:P(\\theta)P(\\theta'|\\theta) = P(\\theta')P(\\theta|\\theta')\n\nThis seemingly abstract mathematics has profound implications: we can explore million-dimensional parameter spaces, quantify correlations between parameters, and make probabilistic predictions with full uncertainty propagation.","type":"content","url":"/curriculum-guide#mathematical-foundations-bayesian-inference","position":103},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Bayesian Inference)","lvl3":"Weeks 9-10: Bayesian Inference and MCMC","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"type":"lvl4","url":"/curriculum-guide#scientific-background-bayesian-inference","position":104},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Bayesian Inference)","lvl3":"Weeks 9-10: Bayesian Inference and MCMC","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"content":"Bayesian methods revolutionized astronomy. From exoplanet detection to cosmological parameter estimation, Bayesian inference handles complex models with many parameters and non-Gaussian uncertainties. The cosmic microwave background analysis that confirmed dark energy used MCMC to explore a 20+ dimensional parameter space.\n\nYou‚Äôll implement classic astronomy problems: fitting orbital parameters for exoplanets (dealing with degeneracies and non-linear models), inferring stellar parameters from spectra (handling measurement uncertainties and model uncertainties), and even simple cosmological parameter estimation. You‚Äôll learn why frequentist confidence intervals can be misleading for bounded parameters and how Bayesian methods naturally handle upper limits and non-detections.","type":"content","url":"/curriculum-guide#scientific-background-bayesian-inference","position":105},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Bayesian Inference)","lvl3":"Weeks 9-10: Bayesian Inference and MCMC","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"type":"lvl4","url":"/curriculum-guide#computational-implementation-bayesian-inference","position":106},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Bayesian Inference)","lvl3":"Weeks 9-10: Bayesian Inference and MCMC","lvl2":"Phase 3: Deep Statistical Methods (Weeks 7-10)"},"content":"Building MCMC from scratch reveals its elegant simplicity:class MCMCSampler:\n    def __init__(self, log_likelihood, log_prior, initial_params):\n        \"\"\"\n        MCMC sampler using Metropolis-Hastings algorithm\n        Working in log space for numerical stability\n        \"\"\"\n        self.log_likelihood = log_likelihood\n        self.log_prior = log_prior\n        self.current_params = initial_params\n        self.current_log_prob = self.log_posterior(initial_params)\n        self.chain = [initial_params]\n        self.accepted = 0\n        self.proposed = 0\n        \n    def log_posterior(self, params):\n        \"\"\"\n        Log posterior = log likelihood + log prior\n        Working in log space prevents underflow\n        \"\"\"\n        return self.log_likelihood(params) + self.log_prior(params)\n    \n    def propose(self, params, step_size=0.1):\n        \"\"\"\n        Gaussian proposal distribution\n        Step size tuning is crucial for efficiency\n        \"\"\"\n        return params + np.random.normal(0, step_size, size=params.shape)\n    \n    def step(self, step_size=0.1):\n        \"\"\"\n        Single Metropolis-Hastings step\n        This simple algorithm explores arbitrary distributions!\n        \"\"\"\n        # Propose new parameters\n        proposed_params = self.propose(self.current_params, step_size)\n        proposed_log_prob = self.log_posterior(proposed_params)\n        \n        # Calculate acceptance ratio (in log space)\n        log_alpha = proposed_log_prob - self.current_log_prob\n        \n        # Accept or reject\n        if np.log(np.random.random()) < log_alpha:\n            self.current_params = proposed_params\n            self.current_log_prob = proposed_log_prob\n            self.accepted += 1\n        \n        self.proposed += 1\n        self.chain.append(self.current_params.copy())\n        \n    def run(self, n_steps, step_size=0.1, burn_in=1000):\n        \"\"\"\n        Run MCMC chain with burn-in period\n        \"\"\"\n        # Burn-in phase with step size adaptation\n        for i in range(burn_in):\n            self.step(step_size)\n            \n            # Adapt step size to maintain ~25% acceptance rate\n            if i % 100 == 0 and i > 0:\n                acceptance_rate = self.accepted / self.proposed\n                if acceptance_rate < 0.2:\n                    step_size *= 0.8\n                elif acceptance_rate > 0.3:\n                    step_size *= 1.2\n        \n        # Reset statistics after burn-in\n        self.accepted = 0\n        self.proposed = 0\n        self.chain = []\n        \n        # Production run\n        for _ in range(n_steps):\n            self.step(step_size)\n            \n        return np.array(self.chain)\n    \n    def analyze_chain(self):\n        \"\"\"\n        Extract posterior statistics from chain\n        \"\"\"\n        chain = np.array(self.chain)\n        \n        # Parameter estimates\n        mean = np.mean(chain, axis=0)\n        median = np.median(chain, axis=0)\n        std = np.std(chain, axis=0)\n        \n        # Credible intervals (Bayesian confidence intervals)\n        lower = np.percentile(chain, 16, axis=0)  # 1-sigma lower\n        upper = np.percentile(chain, 84, axis=0)  # 1-sigma upper\n        \n        # Correlation matrix\n        correlation = np.corrcoef(chain.T)\n        \n        return {\n            'mean': mean,\n            'median': median,\n            'std': std,\n            'credible_interval': (lower, upper),\n            'correlation': correlation,\n            'acceptance_rate': self.accepted / self.proposed\n        }\n\n# Example: Fitting a spectral line with uncertainty\ndef fit_spectral_line(wavelength, flux, flux_error):\n    \"\"\"\n    Bayesian fitting of Gaussian spectral line\n    Demonstrates handling of measurement uncertainties\n    \"\"\"\n    def log_likelihood(params):\n        amplitude, center, width, continuum = params\n        model = gaussian_line(wavelength, amplitude, center, width) + continuum\n        \n        # Chi-squared with measurement uncertainties\n        chi2 = np.sum(((flux - model) / flux_error)**2)\n        return -0.5 * chi2\n    \n    def log_prior(params):\n        amplitude, center, width, continuum = params\n        \n        # Informative priors based on physics\n        if amplitude < 0 or width < 0:\n            return -np.inf  # Unphysical\n            \n        # Gaussian prior on line center (from atomic physics)\n        log_p = -0.5 * ((center - expected_wavelength) / wavelength_uncertainty)**2\n        \n        # Jeffreys prior on width (scale parameter)\n        log_p += -np.log(width)\n        \n        return log_p\n    \n    # Run MCMC\n    sampler = MCMCSampler(log_likelihood, log_prior, initial_guess)\n    chain = sampler.run(n_steps=10000)\n    \n    return sampler.analyze_chain()\n\nYou‚Äôll learn about convergence diagnostics (trace plots, autocorrelation, Gelman-Rubin statistic), the importance of priors (informative vs uninformative), and common pitfalls (multimodal distributions, label switching, poor mixing).","type":"content","url":"/curriculum-guide#computational-implementation-bayesian-inference","position":107},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"type":"lvl2","url":"/curriculum-guide#phase-4-modern-machine-learning-weeks-11-16","position":108},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"content":"","type":"content","url":"/curriculum-guide#phase-4-modern-machine-learning-weeks-11-16","position":109},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Weeks 11-12: Gaussian Processes","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"type":"lvl3","url":"/curriculum-guide#weeks-11-12-gaussian-processes","position":110},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Weeks 11-12: Gaussian Processes","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"content":"","type":"content","url":"/curriculum-guide#weeks-11-12-gaussian-processes","position":111},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Gaussian Processes)","lvl3":"Weeks 11-12: Gaussian Processes","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"type":"lvl4","url":"/curriculum-guide#mathematical-foundations-gaussian-processes","position":112},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Gaussian Processes)","lvl3":"Weeks 11-12: Gaussian Processes","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"content":"Gaussian processes (GPs) represent a paradigm shift from parametric to non-parametric modeling. Instead of fitting parameters of a fixed functional form, GPs learn the function itself. A GP is fully specified by its mean function m(x) and covariance function k(x, x‚Äô):f(x) \\sim \\text{GP}(m(x), k(x, x'))\n\nFor any finite set of points, the function values follow a multivariate Gaussian distribution:f \\sim \\mathcal{N}(\\mu, K)\n\nwhere K_{ij} = k(x_i, x_j). The choice of kernel k encodes our assumptions about the function‚Äôs properties: smoothness, periodicity, or multiple length scales.\n\nThe power of GPs emerges in their closed-form predictions. Given observations y = f(X) + \\varepsilon with noise \\varepsilon \\sim \\mathcal{N}(0, \\sigma^2 I), the posterior prediction at new points X_* is:f_* | X, y, X_* \\sim \\mathcal{N}(\\mu_*, \\Sigma_*)\\mu_* = K(X_*, X)\\{K(X, X) + \\sigma^2 I\\}^{-1}y\\Sigma_* = K(X_*, X_*) - K(X_*, X)\\{K(X, X) + \\sigma^2 I\\}^{-1}K(X, X_*)\n\nThis gives not just predictions but full uncertainty quantification‚Äîwe know where we‚Äôre confident and where we‚Äôre guessing.\n\nThe computational challenge is the O(N^3) cost of matrix inversion. This motivates approximate methods: sparse GPs, local GPs, and connections to neural networks (infinitely wide neural networks are GPs!).","type":"content","url":"/curriculum-guide#mathematical-foundations-gaussian-processes","position":113},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Gaussian Processes)","lvl3":"Weeks 11-12: Gaussian Processes","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"type":"lvl4","url":"/curriculum-guide#scientific-background-gaussian-processes","position":114},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Gaussian Processes)","lvl3":"Weeks 11-12: Gaussian Processes","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"content":"In astronomy, GPs excel at problems with sparse, irregular sampling and where uncertainty quantification is crucial. They‚Äôre used for removing stellar variability from exoplanet transits (the star‚Äôs intrinsic variability is modeled as a GP), interpolating light curves for supernova cosmology, and emulating expensive simulations in cosmological parameter estimation.\n\nThe kernel choice encodes physical assumptions. A periodic kernel models stellar rotation, a Mat√©rn kernel captures turbulent processes, and combining kernels (sums and products) builds sophisticated models. You‚Äôll learn that the art of GP modeling lies in kernel engineering‚Äîencoding domain knowledge into mathematical structures.","type":"content","url":"/curriculum-guide#scientific-background-gaussian-processes","position":115},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Gaussian Processes)","lvl3":"Weeks 11-12: Gaussian Processes","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"type":"lvl4","url":"/curriculum-guide#computational-implementation-gaussian-processes","position":116},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Gaussian Processes)","lvl3":"Weeks 11-12: Gaussian Processes","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"content":"Implementing GPs reveals their elegant structure:class GaussianProcess:\n    def __init__(self, kernel, noise_level=1e-10):\n        \"\"\"\n        Gaussian Process regression\n        The kernel encodes all our assumptions about the function\n        \"\"\"\n        self.kernel = kernel\n        self.noise_level = noise_level\n        self.X_train = None\n        self.y_train = None\n        self.K_inv = None\n        \n    def fit(self, X, y):\n        \"\"\"\n        'Training' a GP just means storing data and computing K^(-1)\n        No optimization required (unless learning hyperparameters)\n        \"\"\"\n        self.X_train = X\n        self.y_train = y\n        \n        # Compute covariance matrix\n        K = self.kernel(X, X)\n        K += self.noise_level * np.eye(len(X))  # Add noise for stability\n        \n        # Compute inverse (or better, Cholesky decomposition)\n        self.L = np.linalg.cholesky(K)\n        self.alpha = np.linalg.solve(self.L.T, np.linalg.solve(self.L, y))\n        \n    def predict(self, X_test, return_std=True):\n        \"\"\"\n        GP prediction with uncertainty quantification\n        This closed-form solution is the magic of GPs\n        \"\"\"\n        # Compute covariances\n        K_star = self.kernel(X_test, self.X_train)\n        \n        # Mean prediction\n        mean = K_star @ self.alpha\n        \n        if return_std:\n            # Compute variance\n            K_star_star = self.kernel(X_test, X_test)\n            v = np.linalg.solve(self.L, K_star.T)\n            variance = K_star_star - v.T @ v\n            std = np.sqrt(np.diag(variance))\n            return mean, std\n        else:\n            return mean\n    \n    def log_marginal_likelihood(self):\n        \"\"\"\n        Log marginal likelihood for hyperparameter optimization\n        This integrates out the function values analytically!\n        \"\"\"\n        # Using Cholesky decomposition for numerical stability\n        return -0.5 * self.y_train.T @ self.alpha - \\\n               np.sum(np.log(np.diag(self.L))) - \\\n               0.5 * len(self.X_train) * np.log(2*np.pi)\n\nclass RBFKernel:\n    \"\"\"\n    Radial Basis Function (squared exponential) kernel\n    Encodes smoothness assumption\n    \"\"\"\n    def __init__(self, length_scale=1.0, amplitude=1.0):\n        self.length_scale = length_scale\n        self.amplitude = amplitude\n        \n    def __call__(self, X1, X2):\n        \"\"\"\n        Compute kernel matrix K where K_ij = k(x_i, x_j)\n        \"\"\"\n        # Efficient computation using broadcasting\n        X1 = X1[:, np.newaxis, :]  # Shape: (n1, 1, d)\n        X2 = X2[np.newaxis, :, :]  # Shape: (1, n2, d)\n        \n        # Squared Euclidean distance\n        dist_sq = np.sum((X1 - X2)**2, axis=2)\n        \n        # RBF kernel\n        return self.amplitude**2 * np.exp(-0.5 * dist_sq / self.length_scale**2)\n\nclass PeriodicKernel:\n    \"\"\"\n    Periodic kernel for modeling cyclic phenomena\n    Perfect for stellar rotation, pulsations, etc.\n    \"\"\"\n    def __init__(self, period=1.0, length_scale=1.0, amplitude=1.0):\n        self.period = period\n        self.length_scale = length_scale\n        self.amplitude = amplitude\n        \n    def __call__(self, X1, X2):\n        X1 = X1[:, np.newaxis, :]\n        X2 = X2[np.newaxis, :, :]\n        \n        # Periodic distance\n        dist = np.abs(X1 - X2)\n        \n        # Periodic kernel\n        return self.amplitude**2 * np.exp(\n            -2 * np.sin(np.pi * dist / self.period)**2 / self.length_scale**2\n        )\n\n# Example: Removing stellar variability from exoplanet data\ndef detrend_transit(time, flux, flux_error, transit_model):\n    \"\"\"\n    Use GP to model stellar variability while preserving transit\n    \"\"\"\n    # Stellar variability kernel: quasi-periodic\n    stellar_kernel = PeriodicKernel(period=star_rotation_period) * RBFKernel()\n    \n    # Fit GP to out-of-transit data\n    out_of_transit = np.abs(time - transit_time) > transit_duration\n    gp = GaussianProcess(stellar_kernel, noise_level=np.mean(flux_error)**2)\n    gp.fit(time[out_of_transit], flux[out_of_transit])\n    \n    # Predict stellar variability everywhere\n    stellar_variation, uncertainty = gp.predict(time)\n    \n    # Detrended flux\n    detrended = flux - stellar_variation + np.median(flux)\n    \n    return detrended, uncertainty\n\nYou‚Äôll learn about kernel composition (building complex behaviors from simple components), hyperparameter optimization (maximizing marginal likelihood), and the connection to Bayesian inference (GPs are priors over functions).","type":"content","url":"/curriculum-guide#computational-implementation-gaussian-processes","position":117},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Weeks 13-15: Neural Networks from Scratch","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"type":"lvl3","url":"/curriculum-guide#weeks-13-15-neural-networks-from-scratch","position":118},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Weeks 13-15: Neural Networks from Scratch","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"content":"","type":"content","url":"/curriculum-guide#weeks-13-15-neural-networks-from-scratch","position":119},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Neural Networks)","lvl3":"Weeks 13-15: Neural Networks from Scratch","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"type":"lvl4","url":"/curriculum-guide#mathematical-foundations-neural-networks","position":120},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical Foundations (Neural Networks)","lvl3":"Weeks 13-15: Neural Networks from Scratch","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"content":"Neural networks are universal function approximators built from simple components. A single neuron computes:y = \\sigma(w^T x + b)\n\nwhere œÉ is a non-linear activation function. The power comes from composition‚Äîstacking layers creates increasingly complex functions.\n\nThe forward pass through a network is just repeated matrix multiplication and element-wise non-linearity:\n\nz^{(l)} = W^{(l)} a^{(l-1)} + b^{(l)}  (linear transformation)\n\na^{(l)} = \\sigma(z^{(l)})  (activation)\n\nBackpropagation‚Äîthe algorithm that makes deep learning possible‚Äîis just the chain rule applied systematically. For a loss L, the gradient with respect to weights in layer l is:\\frac{\\partial L}{\\partial W^{(l)}} = \\frac{\\partial L}{\\partial z^{(l)}} \\times \\frac{\\partial z^{(l)}}{\\partial W^{(l)}} = \\delta^{(l)} \\times (a^{(l-1)})^T\n\nwhere \\delta^{(l)} = \\frac{\\partial L}{\\partial z^{(l)}} is the ‚Äúerror‚Äù at layer l, computed recursively:\\delta^{(l)} = (W^{(l+1)})^T \\delta^{(l+1)} \\odot \\sigma'(z^{(l)})\n\nThis recursive structure makes gradient computation efficient‚ÄîO(N) instead of O(N^2) for N parameters.\n\nThe mathematics reveals why deep learning works: depth enables compositional representations (building complex functions from simple pieces), non-linearity enables universal approximation (linear models can‚Äôt escape their subspace), and gradient descent finds good solutions despite non-convex loss landscapes (the blessing of overparameterization).","type":"content","url":"/curriculum-guide#mathematical-foundations-neural-networks","position":121},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Neural Networks)","lvl3":"Weeks 13-15: Neural Networks from Scratch","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"type":"lvl4","url":"/curriculum-guide#scientific-background-neural-networks","position":122},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Scientific Background (Neural Networks)","lvl3":"Weeks 13-15: Neural Networks from Scratch","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"content":"Neural networks are transforming astronomy. They‚Äôre used for photometric redshift estimation (replacing expensive spectroscopy), transient classification (finding supernovae in real-time surveys), gravitational lens finding (pattern recognition in images), and even solving differential equations (physics-informed neural networks).\n\nYou‚Äôll implement networks for astronomical tasks: classifying galaxy morphologies (convolutional features), predicting stellar parameters from spectra (regression with uncertainty), and even generating synthetic observations (touching on generative models). You‚Äôll learn that neural networks aren‚Äôt magic‚Äîthey‚Äôre sophisticated function approximators that excel when we have lots of data but unclear functional forms.","type":"content","url":"/curriculum-guide#scientific-background-neural-networks","position":123},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Neural Networks)","lvl3":"Weeks 13-15: Neural Networks from Scratch","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"type":"lvl4","url":"/curriculum-guide#computational-implementation-neural-networks","position":124},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Computational Implementation (Neural Networks)","lvl3":"Weeks 13-15: Neural Networks from Scratch","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"content":"Building a neural network from numpy arrays demystifies deep learning:class Layer:\n    \"\"\"\n    Base class for neural network layers\n    \"\"\"\n    def forward(self, input):\n        \"\"\"Forward pass: compute output and cache for backprop\"\"\"\n        raise NotImplementedError\n        \n    def backward(self, grad_output):\n        \"\"\"Backward pass: compute gradients\"\"\"\n        raise NotImplementedError\n        \n    def update(self, learning_rate):\n        \"\"\"Parameter update\"\"\"\n        pass\n\nclass Linear(Layer):\n    \"\"\"\n    Fully connected layer: y = Wx + b\n    \"\"\"\n    def __init__(self, input_dim, output_dim):\n        # Initialize weights (Xavier/He initialization matters!)\n        self.W = np.random.randn(input_dim, output_dim) * np.sqrt(2.0 / input_dim)\n        self.b = np.zeros(output_dim)\n        \n        # For gradient accumulation\n        self.dW = None\n        self.db = None\n        \n    def forward(self, input):\n        \"\"\"\n        Forward pass: matrix multiplication\n        Cache input for backward pass\n        \"\"\"\n        self.input = input\n        return input @ self.W + self.b\n    \n    def backward(self, grad_output):\n        \"\"\"\n        Backward pass using chain rule\n        This is where the magic happens!\n        \"\"\"\n        # Gradient w.r.t weights: dL/dW = input^T @ dL/doutput\n        self.dW = self.input.T @ grad_output\n        \n        # Gradient w.r.t bias: dL/db = sum(dL/doutput, axis=0)\n        self.db = np.sum(grad_output, axis=0)\n        \n        # Gradient w.r.t input: dL/dinput = dL/doutput @ W^T\n        return grad_output @ self.W.T\n    \n    def update(self, learning_rate):\n        \"\"\"\n        Gradient descent update\n        \"\"\"\n        self.W -= learning_rate * self.dW\n        self.b -= learning_rate * self.db\n\nclass ReLU(Layer):\n    \"\"\"\n    Rectified Linear Unit: max(0, x)\n    Simple but effective non-linearity\n    \"\"\"\n    def forward(self, input):\n        self.input = input\n        return np.maximum(0, input)\n    \n    def backward(self, grad_output):\n        # Gradient is 1 where input > 0, else 0\n        return grad_output * (self.input > 0)\n\nclass Softmax(Layer):\n    \"\"\"\n    Softmax for multi-class classification\n    Converts logits to probabilities\n    \"\"\"\n    def forward(self, input):\n        # Subtract max for numerical stability\n        exp_input = np.exp(input - np.max(input, axis=1, keepdims=True))\n        self.output = exp_input / np.sum(exp_input, axis=1, keepdims=True)\n        return self.output\n    \n    def backward(self, grad_output):\n        # Softmax gradient is complex but beautiful\n        # For cross-entropy loss, it simplifies to: predictions - targets\n        return grad_output  # Assuming grad_output is from cross-entropy\n\nclass NeuralNetwork:\n    \"\"\"\n    A simple but complete neural network implementation\n    \"\"\"\n    def __init__(self, layers):\n        self.layers = layers\n        \n    def forward(self, X):\n        \"\"\"\n        Forward pass through all layers\n        \"\"\"\n        for layer in self.layers:\n            X = layer.forward(X)\n        return X\n    \n    def backward(self, grad_output):\n        \"\"\"\n        Backward pass through all layers (in reverse!)\n        \"\"\"\n        for layer in reversed(self.layers):\n            grad_output = layer.backward(grad_output)\n            \n    def update(self, learning_rate):\n        \"\"\"\n        Update all parameters\n        \"\"\"\n        for layer in self.layers:\n            layer.update(learning_rate)\n    \n    def train_step(self, X, y, loss_fn, learning_rate):\n        \"\"\"\n        One complete training step\n        \"\"\"\n        # Forward pass\n        predictions = self.forward(X)\n        \n        # Compute loss\n        loss = loss_fn(predictions, y)\n        \n        # Backward pass\n        grad = loss_fn.gradient(predictions, y)\n        self.backward(grad)\n        \n        # Update parameters\n        self.update(learning_rate)\n        \n        return loss\n\nclass CrossEntropyLoss:\n    \"\"\"\n    Cross-entropy loss for classification\n    \"\"\"\n    def __call__(self, predictions, targets):\n        # Avoid log(0)\n        epsilon = 1e-15\n        predictions = np.clip(predictions, epsilon, 1 - epsilon)\n        \n        # Cross-entropy: -sum(y * log(y_hat))\n        return -np.mean(np.sum(targets * np.log(predictions), axis=1))\n    \n    def gradient(self, predictions, targets):\n        \"\"\"\n        Gradient of cross-entropy w.r.t predictions\n        With softmax, this simplifies beautifully to: predictions - targets\n        \"\"\"\n        return (predictions - targets) / len(targets)\n\n# Advanced concepts you'll implement:\nclass Dropout(Layer):\n    \"\"\"\n    Dropout for regularization\n    Randomly zero out neurons during training\n    \"\"\"\n    def __init__(self, dropout_rate=0.5):\n        self.dropout_rate = dropout_rate\n        self.mask = None\n        \n    def forward(self, input, training=True):\n        if training:\n            # Random binary mask\n            self.mask = np.random.binomial(1, 1-self.dropout_rate, input.shape)\n            # Scale by 1/(1-p) to maintain expected value\n            return input * self.mask / (1 - self.dropout_rate)\n        else:\n            return input\n    \n    def backward(self, grad_output):\n        return grad_output * self.mask / (1 - self.dropout_rate)\n\nclass BatchNormalization(Layer):\n    \"\"\"\n    Batch normalization for stable training\n    Normalizes inputs to have zero mean and unit variance\n    \"\"\"\n    def __init__(self, dim, momentum=0.9):\n        self.gamma = np.ones(dim)  # Scale parameter\n        self.beta = np.zeros(dim)  # Shift parameter\n        self.running_mean = np.zeros(dim)\n        self.running_var = np.ones(dim)\n        self.momentum = momentum\n        \n    def forward(self, input, training=True):\n        if training:\n            # Compute batch statistics\n            batch_mean = np.mean(input, axis=0)\n            batch_var = np.var(input, axis=0)\n            \n            # Update running statistics\n            self.running_mean = self.momentum * self.running_mean + (1-self.momentum) * batch_mean\n            self.running_var = self.momentum * self.running_var + (1-self.momentum) * batch_var\n            \n            # Normalize\n            self.input_normalized = (input - batch_mean) / np.sqrt(batch_var + 1e-8)\n        else:\n            # Use running statistics\n            self.input_normalized = (input - self.running_mean) / np.sqrt(self.running_var + 1e-8)\n        \n        # Scale and shift\n        return self.gamma * self.input_normalized + self.beta\n    \n    def backward(self, grad_output):\n        # BatchNorm backward pass is complex but teaches important concepts\n        # about gradient flow and internal covariate shift\n        # [Implementation details omitted for brevity]\n        pass\n\nYou‚Äôll discover key insights: why initialization matters (vanishing/exploding gradients), why batch normalization helps (internal covariate shift), why dropout works (ensemble interpretation), and why deep networks are hard to train (gradient flow, local minima, saddle points).","type":"content","url":"/curriculum-guide#computational-implementation-neural-networks","position":125},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Week 16: JAX and Modern Frameworks","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"type":"lvl3","url":"/curriculum-guide#week-16-jax-and-modern-frameworks","position":126},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Week 16: JAX and Modern Frameworks","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"content":"","type":"content","url":"/curriculum-guide#week-16-jax-and-modern-frameworks","position":127},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical and Computational Foundations","lvl3":"Week 16: JAX and Modern Frameworks","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"type":"lvl4","url":"/curriculum-guide#mathematical-and-computational-foundations","position":128},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl4":"Mathematical and Computational Foundations","lvl3":"Week 16: JAX and Modern Frameworks","lvl2":"Phase 4: Modern Machine Learning (Weeks 11-16)"},"content":"JAX represents a paradigm shift in scientific computing: functional programming meets automatic differentiation. The key insight is that derivatives are just another function transformation, like mapping or filtering.\n\nJAX‚Äôs grad function transforms a function f: \\mathbb{R}^n \\to \\mathbb{R} into its gradient \\nabla f: \\mathbb{R}^n \\to \\mathbb{R}^n. This works through automatic differentiation‚Äîsystematically applying the chain rule to elementary operations. Unlike numerical differentiation (finite differences) or symbolic differentiation (expression manipulation), autodiff is exact and efficient.\n\nThe functional programming paradigm means functions are pure‚Äîno side effects, no mutation. This enables powerful transformations:\n\njit: Just-in-time compilation to XLA (100x speedups)\n\nvmap: Vectorization over batch dimensions\n\npmap: Parallelization across devices\n\nYou‚Äôll see your hand-coded neural network translated to JAX:import jax\nimport jax.numpy as jnp\nfrom jax import grad, jit, vmap\n\ndef neural_network_jax(params, x):\n    \"\"\"\n    Same network, but functional style\n    No classes, just functions and data\n    \"\"\"\n    W1, b1, W2, b2 = params\n    \n    # Layer 1\n    z1 = jnp.dot(x, W1) + b1\n    a1 = jax.nn.relu(z1)\n    \n    # Layer 2\n    z2 = jnp.dot(a1, W2) + b2\n    return jax.nn.softmax(z2)\n\ndef loss_fn(params, x, y):\n    \"\"\"\n    Cross-entropy loss\n    \"\"\"\n    predictions = neural_network_jax(params, x)\n    return -jnp.mean(jnp.sum(y * jnp.log(predictions + 1e-8), axis=1))\n\n# The magic: automatic gradients!\ngrad_fn = grad(loss_fn)  # Returns gradient function\n\n# JIT compilation for speed\nfast_grad = jit(grad_fn)\n\n# Vectorization for batches\nbatched_forward = vmap(neural_network_jax, in_axes=(None, 0))\n\ndef train_step(params, x_batch, y_batch, learning_rate):\n    \"\"\"\n    One training step with JAX\n    Compare to our 100+ lines of backprop code!\n    \"\"\"\n    gradients = fast_grad(params, x_batch, y_batch)\n    \n    # Update parameters (functional style - no mutation)\n    new_params = []\n    for param, grad in zip(params, gradients):\n        new_params.append(param - learning_rate * grad)\n    \n    return new_params\n\n# Advanced: Using JAX's optimizers\nfrom jax.experimental import optimizers\n\n# Adam optimizer in 3 lines\nopt_init, opt_update, get_params = optimizers.adam(learning_rate=0.001)\nopt_state = opt_init(params)\n\ndef train_step_adam(i, opt_state, x_batch, y_batch):\n    params = get_params(opt_state)\n    gradients = grad_fn(params, x_batch, y_batch)\n    return opt_update(i, gradients, opt_state)\n\nYou‚Äôll realize JAX isn‚Äôt just faster‚Äîit‚Äôs a different way of thinking. Functional programming eliminates bugs from mutable state. Automatic differentiation eliminates bugs from manual gradient computation. JIT compilation eliminates the Python overhead you‚Äôve been fighting all semester.","type":"content","url":"/curriculum-guide#mathematical-and-computational-foundations","position":129},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Integration and Synthesis"},"type":"lvl2","url":"/curriculum-guide#integration-and-synthesis","position":130},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Integration and Synthesis"},"content":"The course‚Äôs true brilliance emerges in how topics reinforce each other:\n\nMonte Carlo ‚Üí MCMC: Random sampling for integration becomes random sampling for inference. The Metropolis criterion is just importance sampling with memory.\n\nLinear Regression ‚Üí Neural Networks: The normal equations become gradient descent. Single layer becomes deep networks. Least squares becomes cross-entropy.\n\nN-body ‚Üí Radiative Transfer ‚Üí Neural ODEs: Numerical integration of ODEs appears everywhere. The same Runge-Kutta solver that evolves planetary orbits can train neural ODEs.\n\nGaussian Processes ‚Üí Neural Networks: Infinitely wide neural networks are GPs. The kernel trick appears in both. Both are universal approximators with different trade-offs.\n\nEverything ‚Üí JAX: Every algorithm you‚Äôve built by hand‚Äîgradients, optimization, parallelization‚ÄîJAX does automatically. But now you understand what‚Äôs happening under the hood.","type":"content","url":"/curriculum-guide#integration-and-synthesis","position":131},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Pedagogical Insights for Course Design"},"type":"lvl2","url":"/curriculum-guide#pedagogical-insights-for-course-design","position":132},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Pedagogical Insights for Course Design"},"content":"","type":"content","url":"/curriculum-guide#pedagogical-insights-for-course-design","position":133},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Building Intuition Through Implementation","lvl2":"Pedagogical Insights for Course Design"},"type":"lvl3","url":"/curriculum-guide#building-intuition-through-implementation","position":134},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Building Intuition Through Implementation","lvl2":"Pedagogical Insights for Course Design"},"content":"Each topic follows the pattern: physical motivation ‚Üí mathematical foundation ‚Üí naive implementation ‚Üí discover problems ‚Üí sophisticated solution. You learn not just what works, but why alternatives fail. When your Euler integration sends planets flying off to infinity, you viscerally understand numerical stability. When your neural network won‚Äôt train, you appreciate proper initialization.","type":"content","url":"/curriculum-guide#building-intuition-through-implementation","position":135},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Computational Thinking Development","lvl2":"Pedagogical Insights for Course Design"},"type":"lvl3","url":"/curriculum-guide#computational-thinking-development","position":136},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Computational Thinking Development","lvl2":"Pedagogical Insights for Course Design"},"content":"The course develops six core computational thinking skills:\n\nDecomposition: Breaking complex systems into modules (OOP design)\n\nPattern Recognition: Seeing common structures across different domains (optimization everywhere)\n\nAbstraction: Hiding complexity behind interfaces (Layer class for neural networks)\n\nAlgorithm Design: Choosing appropriate methods for problems (when to use MC vs deterministic)\n\nDebugging Intuition: Recognizing failure modes (energy drift, gradient vanishing)\n\nPerformance Reasoning: Understanding computational complexity and bottlenecks","type":"content","url":"/curriculum-guide#computational-thinking-development","position":137},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Why You‚Äôll Sometimes Struggle (And Why That‚Äôs Good)","lvl2":"Pedagogical Insights for Course Design"},"type":"lvl3","url":"/curriculum-guide#why-youll-sometimes-struggle-and-why-thats-good","position":138},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Why You‚Äôll Sometimes Struggle (And Why That‚Äôs Good)","lvl2":"Pedagogical Insights for Course Design"},"content":"The struggles you‚Äôll encounter are intentionally designed to deepen your understanding. You‚Äôll:\n\nFight with numerical instability before learning symplectic integrators\n\nExperience the curse of dimensionality before appreciating Monte Carlo\n\nImplement backpropagation manually before using automatic differentiation\n\nHit the O(N¬≥) wall with GPs before learning approximations\n\nEach struggle makes the eventual solution meaningful rather than arbitrary. When you finally see why something works, you‚Äôll appreciate it more because you‚Äôve felt the pain of the problem it solves.","type":"content","url":"/curriculum-guide#why-youll-sometimes-struggle-and-why-thats-good","position":139},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Learning Through Creation","lvl2":"Pedagogical Insights for Course Design"},"type":"lvl3","url":"/curriculum-guide#learning-through-creation","position":140},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Learning Through Creation","lvl2":"Pedagogical Insights for Course Design"},"content":"Your projects will build something real: a galaxy collision simulator, a transit light curve fitter, a stellar spectrum classifier. This changes the question from ‚Äúdid you understand the lecture?‚Äù to ‚Äúcan you use this to do science?‚Äù The mandatory extensions push you beyond implementation to experimentation‚Äîthe heart of research.","type":"content","url":"/curriculum-guide#learning-through-creation","position":141},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Resources and References for Course Development"},"type":"lvl2","url":"/curriculum-guide#resources-and-references-for-course-development","position":142},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Resources and References for Course Development"},"content":"","type":"content","url":"/curriculum-guide#resources-and-references-for-course-development","position":143},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Essential Textbooks","lvl2":"Resources and References for Course Development"},"type":"lvl3","url":"/curriculum-guide#essential-textbooks","position":144},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Essential Textbooks","lvl2":"Resources and References for Course Development"},"content":"Numerical Methods: Press et al., ‚ÄúNumerical Recipes‚Äù - The bible of scientific computing\n\nMachine Learning: Bishop, ‚ÄúPattern Recognition and Machine Learning‚Äù - Rigorous but accessible\n\nBayesian Methods: Gelman et al., ‚ÄúBayesian Data Analysis‚Äù - The definitive reference\n\nDeep Learning: Goodfellow et al., ‚ÄúDeep Learning‚Äù - Comprehensive modern coverage","type":"content","url":"/curriculum-guide#essential-textbooks","position":145},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Astrophysics Applications","lvl2":"Resources and References for Course Development"},"type":"lvl3","url":"/curriculum-guide#astrophysics-applications","position":146},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Astrophysics Applications","lvl2":"Resources and References for Course Development"},"content":"N-body: Binney & Tremaine, ‚ÄúGalactic Dynamics‚Äù - The standard reference\n\nRadiative Transfer: Rybicki & Lightman, ‚ÄúRadiative Processes in Astrophysics‚Äù\n\nAstrostatistics: Feigelson & Babu, ‚ÄúModern Statistical Methods for Astronomy‚Äù","type":"content","url":"/curriculum-guide#astrophysics-applications","position":147},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Online Resources","lvl2":"Resources and References for Course Development"},"type":"lvl3","url":"/curriculum-guide#online-resources","position":148},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Online Resources","lvl2":"Resources and References for Course Development"},"content":"JAX Documentation: Excellent tutorials on functional programming and autodiff\n\nDistill.pub: Beautiful visual explanations of ML concepts\n\nStan Documentation: Great Bayesian modeling examples\n\nAstroPy Tutorials: Practical astronomy computing","type":"content","url":"/curriculum-guide#online-resources","position":149},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Key Papers for Inspiration","lvl2":"Resources and References for Course Development"},"type":"lvl3","url":"/curriculum-guide#key-papers-for-inspiration","position":150},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl3":"Key Papers for Inspiration","lvl2":"Resources and References for Course Development"},"content":"‚ÄúGaussian Processes for Machine Learning‚Äù (Rasmussen & Williams) - The GP bible\n\n‚ÄúAuto-Encoding Variational Bayes‚Äù (Kingma & Welling) - Modern generative modeling\n\n‚ÄúNeural Ordinary Differential Equations‚Äù (Chen et al.) - Bridging numerical methods and deep learning\n\n‚ÄúPhysicsGP‚Äù (Rajpaul et al.) - GPs in astronomy","type":"content","url":"/curriculum-guide#key-papers-for-inspiration","position":151},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Conclusion: The Transformative Journey"},"type":"lvl2","url":"/curriculum-guide#conclusion-the-transformative-journey","position":152},{"hierarchy":{"lvl1":"Understanding Your Learning Journey in ASTR 596: Modeling the Universe","lvl2":"Conclusion: The Transformative Journey"},"content":"By semester‚Äôs end, you‚Äôll have traveled from F=ma to training neural networks, but more importantly, you‚Äôll have developed a computational worldview. You‚Äôll see Monte Carlo not as random guessing but as leveraging probability theory. You‚Äôll see neural networks not as black boxes but as compositions of simple functions. You‚Äôll see Bayesian inference not as abstract philosophy but as practical uncertainty quantification.\n\nThis progression‚Äîfrom deterministic to statistical, from classical to modern, from implementation to understanding‚Äîwill transform you into a computational scientist rather than just a programmer. You‚Äôll leave knowing not just how to use tools, but how to build them, when to apply them, and why they work.\n\nThe course teaches that computational physics isn‚Äôt about computers or physics‚Äîit‚Äôs about thinking. How do we translate physical understanding into algorithms? How do we diagnose when those algorithms fail? How do we improve them? These questions transcend any particular method or programming language.\n\nMost beautifully, you‚Äôll discover that the same mathematical structures appear everywhere: optimization, linear algebra, probability theory. A small set of fundamental ideas‚Äîgradient descent, Monte Carlo sampling, matrix decomposition‚Äîpower everything from stellar evolution to deep learning. This unity reveals the deep elegance underlying computational science.\n\nYour journey from stellar physics to neural networks isn‚Äôt just about coverage‚Äîit‚Äôs about transformation. You‚Äôll begin thinking in equations and end thinking in algorithms. You‚Äôll start seeing computers as calculators and finish seeing them as laboratories. You‚Äôll enter as a physics student who can code and leave as a computational scientist who understands physics.\n\nThis is the real goal of your curriculum: preparing you to read a paper on Wednesday, implement it on Thursday, find its limitations on Friday, and improve it on Monday. In our age of exponentially growing data and increasingly sophisticated models, these skills aren‚Äôt just valuable‚Äîthey‚Äôre essential for your future as a scientist.","type":"content","url":"/curriculum-guide#conclusion-the-transformative-journey","position":153},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide"},"type":"lvl1","url":"/learning-guide","position":0},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide"},"content":"","type":"content","url":"/learning-guide","position":1},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Expanded Philosophy, Strategies, and Resources"},"type":"lvl2","url":"/learning-guide#expanded-philosophy-strategies-and-resources","position":2},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Expanded Philosophy, Strategies, and Resources"},"content":"","type":"content","url":"/learning-guide#expanded-philosophy-strategies-and-resources","position":3},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Table of Contents"},"type":"lvl2","url":"/learning-guide#table-of-contents","position":4},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Table of Contents"},"content":"Extended Course Philosophy\n\nWhat This Course Is NOT\n\nLearning Strategies\n\nDebugging Strategies\n\nResources & Documentation\n\nGrowth Mindset & Classroom Culture\n\nRecognizing When You Need Help\n\nStudy Tips & Best Practices","type":"content","url":"/learning-guide#table-of-contents","position":5},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Extended Course Philosophy"},"type":"lvl2","url":"/learning-guide#extended-course-philosophy","position":6},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Extended Course Philosophy"},"content":"","type":"content","url":"/learning-guide#extended-course-philosophy","position":7},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Comprehensive Methods with Essential Theory","lvl2":"Extended Course Philosophy"},"type":"lvl3","url":"/learning-guide#comprehensive-methods-with-essential-theory","position":8},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Comprehensive Methods with Essential Theory","lvl2":"Extended Course Philosophy"},"content":"This course provides comprehensive coverage of essential computational methods in astrophysics. For each topic, we develop understanding through four integrated perspectives:\n\nThe core mathematical foundations - Why algorithms work, key equations, and their derivations\n\nThe physical intuition - What the math means physically, how it connects to astronomical phenomena\n\nThe computational implementation - How to build it correctly from first principles\n\nThe practical limitations - When methods break, why they fail, and how to diagnose issues\n\nRather than spending an entire semester on theoretical proofs for a single method (as traditional courses do), we spend 2-3 weeks per topic developing deep, practical understanding through implementation and experimentation. This is not a ‚Äúcookbook‚Äù course‚Äîyou will understand the ‚Äúwhy‚Äù behind every algorithm you build.","type":"content","url":"/learning-guide#comprehensive-methods-with-essential-theory","position":9},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Our Goal","lvl2":"Extended Course Philosophy"},"type":"lvl3","url":"/learning-guide#our-goal","position":10},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Our Goal","lvl2":"Extended Course Philosophy"},"content":"Give you comprehensive understanding to:\n\nImplement core algorithms from scratch with mathematical rigor\n\nKnow what these methods do, when to use them, and their limitations\n\nRecognize when you need deeper theoretical knowledge\n\nHave the foundation to self-learn advanced topics","type":"content","url":"/learning-guide#our-goal","position":11},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"The Strategy","lvl2":"Extended Course Philosophy"},"type":"lvl3","url":"/learning-guide#the-strategy","position":12},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"The Strategy","lvl2":"Extended Course Philosophy"},"content":"By implementing methods from first principles while understanding their mathematical foundations and physical meaning, you‚Äôll develop both theoretical insight and practical skills. This course is your launching pad, not your final destination.","type":"content","url":"/learning-guide#the-strategy","position":13},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Why This Works","lvl2":"Extended Course Philosophy"},"type":"lvl3","url":"/learning-guide#why-this-works","position":14},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Why This Works","lvl2":"Extended Course Philosophy"},"content":"Once you‚Äôve built MCMC from scratch, understand why it works, and have used it for real problems, diving into convergence theory or advanced samplers becomes a natural next step rather than an abstract exercise. Once you‚Äôve implemented Euler‚Äôs method, Runge-Kutta, and leapfrog integration and understand their trade-offs, applying these concepts to adaptive step-size methods, symplectic integrators, or entirely different domains becomes straightforward. The same applies to neural networks, Gaussian processes, and every other topic we cover.","type":"content","url":"/learning-guide#why-this-works","position":15},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Your Future Learning","lvl2":"Extended Course Philosophy"},"type":"lvl3","url":"/learning-guide#your-future-learning","position":16},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Your Future Learning","lvl2":"Extended Course Philosophy"},"content":"With the foundation from this course plus AI as your tutor, you‚Äôll be equipped to:\n\nTake advanced courses with deeper theoretical coverage\n\nSelf-study specialized topics relevant to your research and interests\n\nRead and implement papers in computational astrophysics\n\nContribute to open-source scientific software\n\nThis approach‚Äîbroad exposure with hands-on implementation‚Äîis designed to transform you from a passive consumer of computational tools into an active creator. You‚Äôll develop the confidence to peek under the hood of any algorithm, the judgment to choose appropriate methods for your research, and most importantly, the foundation to build custom solutions when existing tools fall short.","type":"content","url":"/learning-guide#your-future-learning","position":17},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"What This Course Is NOT"},"type":"lvl2","url":"/learning-guide#what-this-course-is-not","position":18},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"What This Course Is NOT"},"content":"NOT a physics course - All equations and physics background provided; no physics exams\n\nNOT a software engineering bootcamp - We focus on scientific computing, not web development\n\nNOT a pure ML/AI course - ML is one tool among many in our computational toolkit\n\nNOT cookbook programming - You‚Äôll understand why algorithms work, not just copy recipes\n\nNOT a math theory course - We emphasize practical implementation over formal proofs\n\nUnderstanding what we‚Äôre NOT doing is as important as knowing what we ARE doing. This clarity helps you focus your efforts appropriately.","type":"content","url":"/learning-guide#what-this-course-is-not","position":19},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Learning Strategies"},"type":"lvl2","url":"/learning-guide#learning-strategies","position":20},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Learning Strategies"},"content":"","type":"content","url":"/learning-guide#learning-strategies","position":21},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"The Three Pillars of Computational Learning","lvl2":"Learning Strategies"},"type":"lvl3","url":"/learning-guide#the-three-pillars-of-computational-learning","position":22},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"The Three Pillars of Computational Learning","lvl2":"Learning Strategies"},"content":"Conceptual Understanding - Know the theory behind what you‚Äôre implementing\n\nPractical Implementation - Transform theory into working code\n\nCritical Evaluation - Understand when methods work, fail, and why","type":"content","url":"/learning-guide#the-three-pillars-of-computational-learning","position":23},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Effective Learning Workflow","lvl2":"Learning Strategies"},"type":"lvl3","url":"/learning-guide#effective-learning-workflow","position":24},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Effective Learning Workflow","lvl2":"Learning Strategies"},"content":"","type":"content","url":"/learning-guide#effective-learning-workflow","position":25},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"Before Class","lvl3":"Effective Learning Workflow","lvl2":"Learning Strategies"},"type":"lvl4","url":"/learning-guide#before-class","position":26},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"Before Class","lvl3":"Effective Learning Workflow","lvl2":"Learning Strategies"},"content":"Read actively - Don‚Äôt just skim the JupyterBook chapters\n\nTry examples - Type out code examples yourself (no copy-paste!)\n\nNote questions - Write down confusion points to ask in class\n\nAttempt project start - Even 30 minutes of trying helps frame questions","type":"content","url":"/learning-guide#before-class","position":27},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"During Class","lvl3":"Effective Learning Workflow","lvl2":"Learning Strategies"},"type":"lvl4","url":"/learning-guide#during-class","position":28},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"During Class","lvl3":"Effective Learning Workflow","lvl2":"Learning Strategies"},"content":"Ask ‚Äúdumb‚Äù questions - They‚Äôre usually the most important\n\nEngage in pair programming - Explain your thinking out loud\n\nTake implementation notes - Document approaches that work\n\nDebug together - Learn from others‚Äô errors too","type":"content","url":"/learning-guide#during-class","position":29},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"After Class","lvl3":"Effective Learning Workflow","lvl2":"Learning Strategies"},"type":"lvl4","url":"/learning-guide#after-class","position":30},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"After Class","lvl3":"Effective Learning Workflow","lvl2":"Learning Strategies"},"content":"Review immediately - Solidify concepts while fresh\n\nImplement incrementally - Small, tested pieces beat large untested code\n\nDocument learnings - Your future self will thank you\n\nHelp peers - Teaching solidifies understanding","type":"content","url":"/learning-guide#after-class","position":31},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Using AI Tools Effectively","lvl2":"Learning Strategies"},"type":"lvl3","url":"/learning-guide#using-ai-tools-effectively","position":32},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Using AI Tools Effectively","lvl2":"Learning Strategies"},"content":"Remember: AI is your tutor, not your programmer. Use it to:\n\nUnderstand concepts - ‚ÄúExplain eigenvalues like I‚Äôm a physics student‚Äù\n\nClarify confusion - ‚ÄúWhy does my Monte Carlo simulation converge slowly?‚Äù\n\nDebug intelligently - ‚ÄúThis error suggests X, but I checked Y...‚Äù\n\nFind resources - ‚ÄúWhere can I learn more about symplectic integrators?‚Äù\n\nNOT to:\n\nGenerate your solution code\n\nComplete your projects\n\nReplace your thinking\n\nAvoid struggling (struggle is where learning happens!)","type":"content","url":"/learning-guide#using-ai-tools-effectively","position":33},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Debugging Strategies"},"type":"lvl2","url":"/learning-guide#debugging-strategies","position":34},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Debugging Strategies"},"content":"","type":"content","url":"/learning-guide#debugging-strategies","position":35},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"The Systematic Approach","lvl2":"Debugging Strategies"},"type":"lvl3","url":"/learning-guide#the-systematic-approach","position":36},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"The Systematic Approach","lvl2":"Debugging Strategies"},"content":"Read the error message - Really read it, don‚Äôt just panic\n\nIdentify the line - Where exactly is the problem?\n\nCheck your assumptions - What do you think should happen?\n\nSimplify the problem - Can you reproduce with minimal code?\n\nPrint debugging - Sometimes print() beats fancy debuggers\n\nRubber duck debugging - Explain to an imaginary listener\n\nTake a break - Fresh eyes catch obvious errors","type":"content","url":"/learning-guide#the-systematic-approach","position":37},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Common Python Pitfalls","lvl2":"Debugging Strategies"},"type":"lvl3","url":"/learning-guide#common-python-pitfalls","position":38},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Common Python Pitfalls","lvl2":"Debugging Strategies"},"content":"Mutable defaults - def func(lst=[]): is usually wrong\n\nInteger division - Python 2 vs 3 differences\n\nIndentation errors - Mixing tabs and spaces\n\nOff-by-one errors - Remember Python is 0-indexed\n\nScope issues - Local vs global variables\n\nNumPy broadcasting - Shape mismatches in array operations","type":"content","url":"/learning-guide#common-python-pitfalls","position":39},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Using Python Debugger (pdb)","lvl2":"Debugging Strategies"},"type":"lvl3","url":"/learning-guide#using-python-debugger-pdb","position":40},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Using Python Debugger (pdb)","lvl2":"Debugging Strategies"},"content":"import pdb\n\ndef problematic_function(x):\n    result = x * 2\n    pdb.set_trace()  # Execution stops here\n    return result / 0  # Obviously wrong\n\n# Commands in pdb:\n# n - next line\n# s - step into function\n# c - continue\n# l - list code\n# p variable - print variable\n# pp variable - pretty print","type":"content","url":"/learning-guide#using-python-debugger-pdb","position":41},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Resources & Documentation"},"type":"lvl2","url":"/learning-guide#resources-documentation","position":42},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Resources & Documentation"},"content":"","type":"content","url":"/learning-guide#resources-documentation","position":43},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Essential References","lvl2":"Resources & Documentation"},"type":"lvl3","url":"/learning-guide#essential-references","position":44},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Essential References","lvl2":"Resources & Documentation"},"content":"","type":"content","url":"/learning-guide#essential-references","position":45},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"Python Fundamentals","lvl3":"Essential References","lvl2":"Resources & Documentation"},"type":"lvl4","url":"/learning-guide#python-fundamentals","position":46},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"Python Fundamentals","lvl3":"Essential References","lvl2":"Resources & Documentation"},"content":"Official Python Documentation\n\nPython for Data Science Handbook\n\nReal Python Tutorials\n\nPython Tutor Visualizer - See your code execute step-by-step","type":"content","url":"/learning-guide#python-fundamentals","position":47},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"Scientific Computing","lvl3":"Essential References","lvl2":"Resources & Documentation"},"type":"lvl4","url":"/learning-guide#scientific-computing","position":48},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"Scientific Computing","lvl3":"Essential References","lvl2":"Resources & Documentation"},"content":"NumPy Documentation\n\nSciPy Documentation\n\nMatplotlib Gallery\n\nNumerical Recipes","type":"content","url":"/learning-guide#scientific-computing","position":49},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"Machine Learning & JAX","lvl3":"Essential References","lvl2":"Resources & Documentation"},"type":"lvl4","url":"/learning-guide#machine-learning-jax","position":50},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"Machine Learning & JAX","lvl3":"Essential References","lvl2":"Resources & Documentation"},"content":"JAX Documentation\n\nEquinox Documentation\n\nFlax Documentation\n\nML for Physics - Ting‚Äôs excellent review","type":"content","url":"/learning-guide#machine-learning-jax","position":51},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"Astronomical Computing","lvl3":"Essential References","lvl2":"Resources & Documentation"},"type":"lvl4","url":"/learning-guide#astronomical-computing","position":52},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl4":"Astronomical Computing","lvl3":"Essential References","lvl2":"Resources & Documentation"},"content":"Astropy Documentation\n\nAstroBetter Programming Tips\n\nSDSU HPC Documentation","type":"content","url":"/learning-guide#astronomical-computing","position":53},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Recommended YouTube Channels","lvl2":"Resources & Documentation"},"type":"lvl3","url":"/learning-guide#recommended-youtube-channels","position":54},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Recommended YouTube Channels","lvl2":"Resources & Documentation"},"content":"3Blue1Brown - Mathematical intuition through visualization\n\nTwo Minute Papers - Latest ML research explained simply\n\nComputerphile - Computer science concepts\n\nStatQuest - Statistics and ML with humor","type":"content","url":"/learning-guide#recommended-youtube-channels","position":55},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Key Tools to Master","lvl2":"Resources & Documentation"},"type":"lvl3","url":"/learning-guide#key-tools-to-master","position":56},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Key Tools to Master","lvl2":"Resources & Documentation"},"content":"Version Control (Git)\n\nLearn branching, merging, rebasing\n\nWrite meaningful commit messages\n\nUse .gitignore properly\n\nCommand Line\n\nNavigate directories\n\nRun Python scripts\n\nUse grep, sed, awk for data manipulation\n\nVirtual Environments\n\nCreate reproducible environments\n\nManage dependencies\n\nAvoid ‚Äúworks on my machine‚Äù syndrome\n\nProfiling & Optimization\n\nUse cProfile for performance analysis\n\nUnderstand Big-O notation practically\n\nKnow when to optimize (hint: usually later)","type":"content","url":"/learning-guide#key-tools-to-master","position":57},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Growth Mindset & Classroom Culture"},"type":"lvl2","url":"/learning-guide#growth-mindset-classroom-culture","position":58},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Growth Mindset & Classroom Culture"},"content":"","type":"content","url":"/learning-guide#growth-mindset-classroom-culture","position":59},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Core Beliefs","lvl2":"Growth Mindset & Classroom Culture"},"type":"lvl3","url":"/learning-guide#core-beliefs","position":60},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Core Beliefs","lvl2":"Growth Mindset & Classroom Culture"},"content":"Intelligence is not fixed - Your brain literally grows new connections when learning\n\nStruggle is necessary - If it‚Äôs not hard, you‚Äôre not learning\n\nErrors are data - Bugs teach you how things really work\n\nQuestions reveal strength - Asking shows engagement, not weakness","type":"content","url":"/learning-guide#core-beliefs","position":61},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Creating Psychological Safety","lvl2":"Growth Mindset & Classroom Culture"},"type":"lvl3","url":"/learning-guide#creating-psychological-safety","position":62},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Creating Psychological Safety","lvl2":"Growth Mindset & Classroom Culture"},"content":"In our classroom:\n\nNo question is too basic\n\nMistakes are learning opportunities\n\nWe celebrate ‚Äúaha!‚Äù moments\n\nEveryone‚Äôs learning journey is different\n\nImposter syndrome is normal and discussable","type":"content","url":"/learning-guide#creating-psychological-safety","position":63},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Dealing with Imposter Syndrome","lvl2":"Growth Mindset & Classroom Culture"},"type":"lvl3","url":"/learning-guide#dealing-with-imposter-syndrome","position":64},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Dealing with Imposter Syndrome","lvl2":"Growth Mindset & Classroom Culture"},"content":"Remember:\n\nEveryone googles basic syntax\n\nSenior developers still print debug\n\nPublished researchers make coding errors\n\nThe learning never stops, even for experts\n\nFeeling lost sometimes is part of the process","type":"content","url":"/learning-guide#dealing-with-imposter-syndrome","position":65},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Recognizing When You Need Help"},"type":"lvl2","url":"/learning-guide#recognizing-when-you-need-help","position":66},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Recognizing When You Need Help"},"content":"","type":"content","url":"/learning-guide#recognizing-when-you-need-help","position":67},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Red Flags Expanded","lvl2":"Recognizing When You Need Help"},"type":"lvl3","url":"/learning-guide#red-flags-expanded","position":68},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Red Flags Expanded","lvl2":"Recognizing When You Need Help"},"content":"Beyond the red flags in the syllabus, watch for:\n\nTechnical Warning Signs:\n\nYour code ‚Äúworks‚Äù but you don‚Äôt know why\n\nYou‚Äôre changing things randomly hoping it works\n\nYou‚Äôve been stuck on the same error for hours\n\nYour solution is significantly longer than expected\n\nYou‚Äôre avoiding entire sections of projects\n\nEmotional Warning Signs:\n\nFeeling overwhelmed consistently\n\nComparing yourself negatively to peers\n\nConsidering dropping the course\n\nLosing interest in the material\n\nPhysical stress symptoms (sleep loss, anxiety)\n\nWhat to Do:\n\nReach out immediately - Don‚Äôt wait until it‚Äôs critical\n\nBe specific - ‚ÄúI don‚Äôt understand X‚Äù beats ‚ÄúI‚Äôm lost‚Äù\n\nShow your work - Even broken attempts help diagnosis\n\nUse office hours - They exist for you\n\nForm study groups - Collective struggle is easier","type":"content","url":"/learning-guide#red-flags-expanded","position":69},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Study Tips & Best Practices"},"type":"lvl2","url":"/learning-guide#study-tips-best-practices","position":70},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Study Tips & Best Practices"},"content":"","type":"content","url":"/learning-guide#study-tips-best-practices","position":71},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Project Management","lvl2":"Study Tips & Best Practices"},"type":"lvl3","url":"/learning-guide#project-management","position":72},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Project Management","lvl2":"Study Tips & Best Practices"},"content":"Two-Week Project Timeline:\n\nDay 1-2: Read assignment, understand requirements\n\nDay 3-4: Initial implementation attempt\n\nDay 5-6: Debug, test edge cases\n\nDay 7 (Friday): Class work session\n\nDay 8-9: Refine based on class insights\n\nDay 10-11: Complete extensions\n\nDay 12-13: Polish, document, write memo\n\nDay 14: Final review and submit","type":"content","url":"/learning-guide#project-management","position":73},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Code Organization","lvl2":"Study Tips & Best Practices"},"type":"lvl3","url":"/learning-guide#code-organization","position":74},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Code Organization","lvl2":"Study Tips & Best Practices"},"content":"# Good structure example\nproject/\n‚îú‚îÄ‚îÄ src/\n‚îÇ   ‚îú‚îÄ‚îÄ __init__.py\n‚îÇ   ‚îú‚îÄ‚îÄ physics.py      # Physics calculations\n‚îÇ   ‚îú‚îÄ‚îÄ numerics.py     # Numerical methods\n‚îÇ   ‚îî‚îÄ‚îÄ visualization.py # Plotting functions\n‚îú‚îÄ‚îÄ tests/\n‚îÇ   ‚îî‚îÄ‚îÄ test_physics.py\n‚îú‚îÄ‚îÄ data/\n‚îÇ   ‚îî‚îÄ‚îÄ input_data.csv\n‚îú‚îÄ‚îÄ outputs/\n‚îÇ   ‚îî‚îÄ‚îÄ figures/\n‚îú‚îÄ‚îÄ README.md\n‚îú‚îÄ‚îÄ requirements.txt\n‚îî‚îÄ‚îÄ main.py            # Entry point","type":"content","url":"/learning-guide#code-organization","position":75},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Documentation Best Practices","lvl2":"Study Tips & Best Practices"},"type":"lvl3","url":"/learning-guide#documentation-best-practices","position":76},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Documentation Best Practices","lvl2":"Study Tips & Best Practices"},"content":"def integrate_orbit(initial_conditions, time_span, method='RK4'):\n    \"\"\"\n    Integrate orbital dynamics using specified method.\n    \n    Parameters\n    ----------\n    initial_conditions : array-like\n        [x, y, z, vx, vy, vz] initial position and velocity\n    time_span : tuple\n        (t_start, t_end) integration time bounds\n    method : str, optional\n        Integration method: 'Euler', 'RK4', or 'Leapfrog'\n    \n    Returns\n    -------\n    trajectory : ndarray\n        Shape (n_steps, 6) array of positions and velocities\n    \n    Notes\n    -----\n    Uses adaptive timestep for RK4 method.\n    \"\"\"\n    # Implementation here","type":"content","url":"/learning-guide#documentation-best-practices","position":77},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Testing Your Code","lvl2":"Study Tips & Best Practices"},"type":"lvl3","url":"/learning-guide#testing-your-code","position":78},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Testing Your Code","lvl2":"Study Tips & Best Practices"},"content":"Always test with:\n\nKnown solutions - Can you reproduce textbook examples?\n\nLimiting cases - Does your code behave correctly at extremes?\n\nConservation laws - Is energy/momentum conserved when it should be?\n\nDimensional analysis - Do your units make sense?\n\nVisualization - Plot everything; eyes catch patterns","type":"content","url":"/learning-guide#testing-your-code","position":79},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Time Management","lvl2":"Study Tips & Best Practices"},"type":"lvl3","url":"/learning-guide#time-management","position":80},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl3":"Time Management","lvl2":"Study Tips & Best Practices"},"content":"Start early - Day 1, not day 10\n\nWork daily - 1 hour/day beats 7 hours in one day\n\nTake breaks - Pomodoro technique (25 min work, 5 min break)\n\nSet boundaries - Perfect is the enemy of done\n\nTrack time - Know where your hours go","type":"content","url":"/learning-guide#time-management","position":81},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Final Thoughts"},"type":"lvl2","url":"/learning-guide#final-thoughts","position":82},{"hierarchy":{"lvl1":"ASTR 596: Course Learning Guide","lvl2":"Final Thoughts"},"content":"This course will challenge you, and that‚Äôs intentional. You‚Äôre not just learning to code; you‚Äôre learning to think computationally about the universe. Every struggle, every bug, every ‚Äúaha!‚Äù moment is building neural pathways that will serve you throughout your career.\n\nRemember: Everyone feels lost sometimes. The difference between those who succeed and those who don‚Äôt isn‚Äôt ability‚Äîit‚Äôs persistence and willingness to seek help.\n\nYou‚Äôve got this. And when you don‚Äôt feel like you do, reach out. That‚Äôs what we‚Äôre here for.","type":"content","url":"/learning-guide#final-thoughts","position":83},{"hierarchy":{"lvl1":"Course Schedule"},"type":"lvl1","url":"/schedule","position":0},{"hierarchy":{"lvl1":"Course Schedule"},"content":"","type":"content","url":"/schedule","position":1},{"hierarchy":{"lvl1":"Course Schedule","lvl2":"Weekly Schedule Structure"},"type":"lvl2","url":"/schedule#weekly-schedule-structure","position":2},{"hierarchy":{"lvl1":"Course Schedule","lvl2":"Weekly Schedule Structure"},"content":"Mondays: New project assigned via GitHub Classroom, previous project due at 11:59 PM\nWednesdays: Growth Memo due (when applicable) via Canvas PDF submission\nFridays: Class meeting with prepared discussion and project work time.","type":"content","url":"/schedule#weekly-schedule-structure","position":3},{"hierarchy":{"lvl1":"Course Schedule","lvl3":"Weekly Topics","lvl2":"Weekly Schedule Structure"},"type":"lvl3","url":"/schedule#weekly-topics","position":4},{"hierarchy":{"lvl1":"Course Schedule","lvl3":"Weekly Topics","lvl2":"Weekly Schedule Structure"},"content":"Week 1 (Aug 29): Course introduction, Python fundamentals, execution control, functions and modular programming\n\nWeek 2 (Sept 5): NumPy and matplotlib basics, OOP, stellar physics\n\nWeek 3 (Sept 12): Gravitational dynamics, numerical integration\n\nWeek 4 (Sept 19): Monte Carlo methods, statistical sampling\n\nWeek 5 (Sept 26): Linear regression from first principles\n\nWeek 6 (Oct 3): Advanced regression, model selection\n\nWeek 7 (Oct 10): Monte Carlo radiative transfer\n\nWeek 8 (Oct 17): Observational effects, synthetic data\n\nWeek 9 (Oct 24): Bayesian inference foundations\n\nWeek 10 (Oct 31): Markov Chain Monte Carlo\n\nWeek 11 (Nov 7): Gaussian processes and kernel methods\n\nWeek 12 (Nov 14): Advanced GP applications and optimization\n\nWeek 13 (Nov 21): Neural network fundamentals, forward propagation\n\nWeek 14 (Nov 28): THANKSGIVING - No class\n\nWeek 15 (Dec 5): Backpropagation, Flax/JAX introduction\n\nWeek 16 (Dec 12): Project workshop and presentations prep\n\nFinals Week (Dec 14-18): Final presentations (Dec 17 or 18 TBD)","type":"content","url":"/schedule#weekly-topics","position":5},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe"},"type":"lvl1","url":"/syllabus","position":0},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe"},"content":"Fall 2025 - San Diego State University (SDSU)\n\nFridays 11:00 AM - 1:40 PM | PA 215","type":"content","url":"/syllabus","position":1},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Instructor Information"},"type":"lvl2","url":"/syllabus#instructor-information","position":2},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Instructor Information"},"content":"Dr. Anna Rosen\n\nOffice: Physics 239\n\nHacking Hours: TBD in class (also available by appointment)\n\nEmail: \n\nalrosen@sdsu.edu","type":"content","url":"/syllabus#instructor-information","position":3},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Information"},"type":"lvl2","url":"/syllabus#course-information","position":4},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Information"},"content":"Prerequisites: Physics 196; MATH 254 or 342A; or equivalent with instructor permission, or graduate standing\n\nMeeting Time: Fridays 11:00 AM - 1:40 PM\n\nFormat: ~30-45min lecture review + 2h hands-on project work\n\nLocation: PA 215\n\nCourse Website: <\n\nwww.anna-rosen.com>\n\nPlatforms: Canvas, Slack, GitHub Classroom\n\nExpectations: Students must come prepared having completed assigned JupyterBook readings","type":"content","url":"/syllabus#course-information","position":5},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Class Meeting Structure","lvl2":"Course Information"},"type":"lvl3","url":"/syllabus#class-meeting-structure","position":6},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Class Meeting Structure","lvl2":"Course Information"},"content":"Pre-Class Preparation (Required):\n\nComplete assigned JupyterBook chapter readings\n\nReview project requirements if new project assigned\n\nPrepare questions on material and implementation challenges\n\nFriday Class Sessions:\n\n11:00-11:45 AM: Interactive review of week‚Äôs concepts, Q&A on readings, clarification of project requirements\n\n11:45 AM-1:40 PM: Hands-on project work with pair programming, implementation support, and peer collaboration\n\nStudents are expected to arrive prepared, having engaged with the material. The lecture review assumes familiarity with the JupyterBook content and focuses on clarification, deeper insights, and connecting theory to implementation.","type":"content","url":"/syllabus#class-meeting-structure","position":7},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Description"},"type":"lvl2","url":"/syllabus#course-description","position":8},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Description"},"content":"This course provides a hands-on introduction to the practice and theory of scientific computing, with an emphasis on numerical methods and machine learning, applied to astrophysical problems. Beginning with Python programming fundamentals and object-oriented design, the course progresses through sophisticated numerical methods including N-body dynamics, Monte Carlo radiative transfer, Bayesian inference, Gaussian processes, and culminates with neural networks. Students will implement all algorithms from first principles (‚Äúglass box‚Äù approach) before transitioning to modern frameworks (JAX ecosystem, e.g., Equinox, Flax, Optax). The course emphasizes professional software development practices, responsible AI integration, and preparation for computational research careers.\n\nImportant Note: I‚Äôm not testing your physics knowledge. I‚Äôm teaching you to be excellent scientific programmers. Astrophysics is our playground, not our examination subject. All necessary equations and scientific background will be provided ‚Äî your task is to understand the scientific concepts, implement them correctly, and connect the computation to the physics. You‚Äôll learn the science through building it, without the stress of physics exams.","type":"content","url":"/syllabus#course-description","position":9},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Philosophy & Approach"},"type":"lvl2","url":"/syllabus#course-philosophy-approach","position":10},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Philosophy & Approach"},"content":"This course provides comprehensive coverage of essential computational methods in astrophysics through a ‚Äúglass box‚Äù approach‚Äîyou‚Äôll build algorithms from first principles to understand both how and why they work. Rather than spending an entire semester on theoretical proofs for a single method, we spend 2-3 weeks per topic developing deep, practical understanding through implementation and experimentation. This is not a ‚Äúcookbook‚Äù course‚Äîyou will understand the mathematical foundations, physical intuition, computational implementation, and practical limitations of every algorithm you build.\n\nBy implementing methods from scratch while understanding their foundations, you‚Äôll develop both theoretical insight and practical skills. This course is your launching pad for computational research, equipping you to self-study advanced topics, implement papers, and build custom solutions when existing tools fall short.\n\nSee the Course Learning Guide for expanded philosophy, detailed learning strategies, and additional resources.","type":"content","url":"/syllabus#course-philosophy-approach","position":11},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Learning Outcomes"},"type":"lvl2","url":"/syllabus#course-learning-outcomes","position":12},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Learning Outcomes"},"content":"Upon successful completion of this course, students will be able to:\n\nImplement numerical schemes for solving scientific problems using Python, employing advanced programming paradigms including object-oriented programming (OOP).\n\nDevelop professional software practices including modular algorithm design, meaningful documentation, version control, testing, and effective code structuring.\n\nMaster key numerical techniques including numerical integration, root finding, model fitting, and solving ordinary and partial differential equations, understanding both how and why these methods work.\n\nApply Monte Carlo methods to complex astrophysical problems including radiative transfer and Bayesian inference, implementing MCMC from scratch.\n\nBuild neural networks from fundamentals implementing backpropagation, gradient descent, and modern architectures without relying on libraries.\n\nUtilize modern computational frameworks translating implementations to the JAX ecosystem (automatic differentiation, GPU acceleration, and differentiable programming).\n\nIntegrate AI tools strategically through a scaffolded three-phase approach while maintaining deep understanding and critical evaluation skills.\n\nSimulate advanced astrophysical phenomena including N-body dynamics, stellar physics, and radiative processes with proper physics.\n\nCommunicate computational methods and scientific results effectively through written reports, code documentation, and oral presentations.\n\nThink computationally about physics developing intuition for numerical stability, convergence, and the connection between physical and computational constraints.","type":"content","url":"/syllabus#course-learning-outcomes","position":13},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Required and Recommended Materials"},"type":"lvl2","url":"/syllabus#required-and-recommended-materials","position":14},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Required and Recommended Materials"},"content":"","type":"content","url":"/syllabus#required-and-recommended-materials","position":15},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Textbooks (Free Online Resources)","lvl2":"Required and Recommended Materials"},"type":"lvl3","url":"/syllabus#textbooks-free-online-resources","position":16},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Textbooks (Free Online Resources)","lvl2":"Required and Recommended Materials"},"content":"ASTR 596 Course JupyterBook (<\n\nwww.anna-rosen.com>)\n\nVanderPlas, Python Data Science Handbook (\n\nhttps://‚Äãjakevdp‚Äã.github‚Äã.io‚Äã/PythonDataScienceHandbook/)\n\nTing, Statistical Machine Learning for Astronomy (\n\nhttps://‚Äãarxiv‚Äã.org‚Äã/abs‚Äã/2506‚Äã.12230)","type":"content","url":"/syllabus#textbooks-free-online-resources","position":17},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Software Requirements","lvl2":"Required and Recommended Materials"},"type":"lvl3","url":"/syllabus#software-requirements","position":18},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Software Requirements","lvl2":"Required and Recommended Materials"},"content":"Python 3.10+ with scientific stack (NumPy, SciPy, matplotlib, pandas, jax, equinox, flax, optax)\n\nGit and GitHub account (\n\nhttps://github.com/)\n\nJupyter Lab/Notebooks (Project 1 only - afterwards, all code in .py scripts)\n\nIDE (Integrated Development Environment, \n\nVS Code recommended) with ALL AI assistants disabled for entire semester.\n\nTerminal/command line access (introduced in class and course materials)\n\nRecommended Python Installation Method: Install Python and all required packages using Miniforge/Conda for simplified dependency management. To do this:\n\nDownload Miniforge: \n\nhttps://‚Äãconda‚Äã-forge‚Äã.org‚Äã/download/ or install from source \n\nhttps://‚Äãgithub‚Äã.com‚Äã/conda‚Äã-forge‚Äã/miniforge\n\nMiniforge provides conda package manager with conda-forge as the default channel and ensures reproducible environments across different operating systems","type":"content","url":"/syllabus#software-requirements","position":19},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Computational Resources","lvl2":"Required and Recommended Materials"},"type":"lvl3","url":"/syllabus#computational-resources","position":20},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Computational Resources","lvl2":"Required and Recommended Materials"},"content":"SDSU Instructional Cluster (Verne): \n\nhttps://‚Äãsdsu‚Äã-research‚Äã-ci‚Äã.github‚Äã.io‚Äã/instructionalcluster\n\nGitHub Classroom: \n\nhttps://‚Äãsdsu‚Äã-research‚Äã-ci‚Äã.github‚Äã.io‚Äã/github‚Äã/classroom\n\nAll students will have access to high-performance computing resources for intensive computations.","type":"content","url":"/syllabus#computational-resources","position":21},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Grading Information"},"type":"lvl2","url":"/syllabus#grading-information","position":22},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Grading Information"},"content":"","type":"content","url":"/syllabus#grading-information","position":23},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Assessment Components","lvl2":"Grading Information"},"type":"lvl3","url":"/syllabus#assessment-components","position":24},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Assessment Components","lvl2":"Grading Information"},"content":"Component\n\nWeight\n\nDescription\n\nProjects 1-6\n\n50%\n\n8.33% each, due biweekly on Mondays\n\nGrowth Memos\n\n10%\n\n6 reflections at 1.67% each, linked to Projects 1-6\n\nTechnical Growth Synthesis\n\n5%\n\nCumulative reflection due Dec 11\n\nFinal Project\n\n25%\n\nJAX implementation with research component due Dec 18\n\nParticipation & Engagement\n\n10%\n\nPre-class preparation, active contribution, collaboration\n\nTechnical Growth Synthesis (5%): A final cumulative reflection (2-3 pages) due December 11 that synthesizes your computational learning journey across all projects. Unlike individual growth memos which are sequential, this document should demonstrate how your computational thinking, problem-solving approaches, and programming skills evolved throughout the entire course. Submitting this before the final project allows you to recognize your growth before tackling the culminating challenge.\n\nParticipation & Engagement (10%): Active participation requires coming to each class having completed the assigned readings and initial project attempts. Students are expected to contribute meaningfully to discussions, ask clarifying questions, answer peers‚Äô questions when able, engage productively in pair programming and peer review, and help create a collaborative learning environment. Preparation is non-negotiable: unprepared students cannot contribute effectively to our small group‚Äôs collective learning.","type":"content","url":"/syllabus#assessment-components","position":25},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Grading Scale","lvl2":"Grading Information"},"type":"lvl3","url":"/syllabus#grading-scale","position":26},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Grading Scale","lvl2":"Grading Information"},"content":"A: 93-100% (Outstanding) | A-: 90-92%\n\nB+: 87-89% | B: 83-86% (Praiseworthy) | B-: 80-82%\n\nC+: 77-79% | C: 73-76% (Average) | C-: 70-72%\n\nD+: 67-69% | D: 63-66% (Minimally Passing) | D-: 60-62%\n\nF: Below 60% (Failure)\n\nNote: Final grade distribution and any curving will be at the instructor‚Äôs discretion based on overall class performance and demonstrated effort.","type":"content","url":"/syllabus#grading-scale","position":27},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Growth Memos"},"type":"lvl2","url":"/syllabus#growth-memos","position":28},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Growth Memos"},"content":"Six reflective memos (1-2 pages each) submitted as PDFs to Canvas on Wednesdays following project completion. These memos focus on your development as a computational scientist, not just the technical content. You‚Äôll reflect on your problem-solving strategies, debugging approaches, metacognitive awareness, skill development, and evolution as a programmer. A standard set of prompts will guide your reflection on how you‚Äôre learning to think computationally, overcome challenges, and develop professional practices. This timing ensures reflection while the experience is fresh.","type":"content","url":"/syllabus#growth-memos","position":29},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Schedule"},"type":"lvl2","url":"/syllabus#course-schedule","position":30},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Schedule"},"content":"","type":"content","url":"/syllabus#course-schedule","position":31},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Projects Overview","lvl2":"Course Schedule"},"type":"lvl3","url":"/syllabus#projects-overview","position":32},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Projects Overview","lvl2":"Course Schedule"},"content":"Projects are carefully scaffolded to build upon each other‚Äîlater projects may require importing and extending code from earlier ones. Each project deepens your computational toolkit while reinforcing previous concepts. Projects are assigned on Mondays (posted to GitHub Classroom) and due the following Monday at 11:59 PM. This schedule allows students to review requirements before Friday‚Äôs class, where we‚Äôll work on implementation together.\n\nProject\n\nAssigned\n\nDue Date\n\nTopic\n\nProject 1\n\nAug 25 (Mon)\n\nSept 8 (Mon)\n\nPython/OOP/Stellar Physics Basics\n\nProject 2\n\nSept 8 (Mon)\n\nSept 22 (Mon)\n\nODE Integration + N-Body Dynamics + Monte Carlo Sampling\n\nProject 3\n\nSept 22 (Mon)\n\nOct 6 (Mon)\n\nRegression/ML Fundamentals\n\nProject 4\n\nOct 6 (Mon)\n\nOct 20 (Mon)\n\nMonte Carlo Radiative Transfer\n\nProject 5\n\nOct 20 (Mon)\n\nNov 3 (Mon)\n\nBayesian/MCMC\n\nProject 6\n\nNov 3 (Mon)\n\nNov 17 (Mon)\n\nGaussian Processes\n\nFinal Project\n\nNov 17 (Mon)\n\nDec 18 (Thu)\n\nNeural Networks (From Scratch + JAX ecosystem)","type":"content","url":"/syllabus#projects-overview","position":33},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Project Submission Requirements"},"type":"lvl2","url":"/syllabus#project-submission-requirements","position":34},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Project Submission Requirements"},"content":"","type":"content","url":"/syllabus#project-submission-requirements","position":35},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Development Environment Policies","lvl2":"Project Submission Requirements"},"type":"lvl3","url":"/syllabus#development-environment-policies","position":36},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Development Environment Policies","lvl2":"Project Submission Requirements"},"content":"Jupyter Notebooks: Allowed ONLY for Project 1. Starting with Project 2, all code must be written as modular Python scripts (.py files). This requirement develops essential professional skills including code reusability, proper testing, terminal proficiency, and version control practices.\n\nIDE AI Assistants: Must remain disabled for the ENTIRE semester. This includes GitHub Copilot, Cursor AI, VS Code AI suggestions, and any AI-powered autocomplete. Developing programming ‚Äúmuscle memory‚Äù requires actively typing code without AI intervention.","type":"content","url":"/syllabus#development-environment-policies","position":37},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Each Project Submission Must Include","lvl2":"Project Submission Requirements"},"type":"lvl3","url":"/syllabus#each-project-submission-must-include","position":38},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Each Project Submission Must Include","lvl2":"Project Submission Requirements"},"content":"Code Components:\n\nModular Python scripts with clear organization.\n\nRequirements.txt file listing dependencies.\n\nProper imports and function definitions.\n\nNo Jupyter notebooks after Project 1.\n\nProject Memo (Markdown .md format):\n\nSummary of methodology and approach.\n\nKey results with embedded and readable plots with descriptive captions.\n\nUnderstanding and interpretation of results, demonstrating conceptual grasp.\n\nChallenges encountered and solutions.\n\nComputational performance observations.\n\nInformal tone, typically 2-5 pages.\n\nDocumentation:\n\nREADME.md with installation and usage instructions.\n\nDocstrings for all functions and classes.\n\nInline comments for complex algorithms.\n\nExample usage scripts.\n\nGitHub Classroom Requirements:\n\nRegular commits demonstrating progress.\n\nMeaningful commit messages.\n\nFinal push by Monday 11:59 PM deadline.\n\nProper .gitignore file.\n\nSee the Project Submission Guide for detailed requirements, grading rubric, and examples.","type":"content","url":"/syllabus#each-project-submission-must-include","position":39},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Final Project: Neural Network Synthesis","lvl2":"Project Submission Requirements"},"type":"lvl3","url":"/syllabus#final-project-neural-network-synthesis","position":40},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Final Project: Neural Network Synthesis","lvl2":"Project Submission Requirements"},"content":"The final project leverages your existing codebase to tackle a new, more advanced scientific question using neural networks. You‚Äôll select one of your previous implementations (P1-P6), refactor it to JAX, then apply neural network methods to solve a related but distinct problem that extends beyond the original project scope. This approach lets you build on familiar code while exploring how NNs enable new scientific investigations that would be difficult with classical methods alone.\n\nRequirements:\n\nSelect and refactor previous code to JAX ecosystem.\n\nDefine a new scientific question that extends the original project.\n\nImplement NN solution from scratch + use JAX tools (Equinox/Flax/Optax).\n\nDemonstrate why NNs enable this new investigation.\n\n8-12 page research report including plots and references.\n\n10-minute presentation during finals week.\n\nSee detailed Final Project Guide for inspiration, project ideas, and requirements.","type":"content","url":"/syllabus#final-project-neural-network-synthesis","position":41},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Policies"},"type":"lvl2","url":"/syllabus#course-policies","position":42},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Course Policies"},"content":"","type":"content","url":"/syllabus#course-policies","position":43},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Attendance Policy","lvl2":"Course Policies"},"type":"lvl3","url":"/syllabus#attendance-policy","position":44},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Attendance Policy","lvl2":"Course Policies"},"content":"Attendance at Friday sessions is essential as they combine lecture and hands-on lab work. There are no recordings available. While attendance is not explicitly tracked, participation grades require active engagement in class, which is impossible without being present. Two absences are permitted without penalty. Additional absences may impact your participation grade and project success.","type":"content","url":"/syllabus#attendance-policy","position":45},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Late Work Policy","lvl2":"Course Policies"},"type":"lvl3","url":"/syllabus#late-work-policy","position":46},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Late Work Policy","lvl2":"Course Policies"},"content":"One no-questions-asked 2-day extension per semester.\n\nMust be requested at least 24 hours before the Monday 11:59 PM deadline.\n\nExtensions requested with less than 24 hours notice will not be granted and standard late penalties apply.\n\nAdditional extensions only for documented emergencies.\n\n10% penalty per day after grace period.\n\nFinal project extensions strongly discouraged.\n\nEarly submissions are encouraged‚Äîyou may submit anytime after the project is assigned.","type":"content","url":"/syllabus#late-work-policy","position":47},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Collaboration Policy","lvl2":"Course Policies"},"type":"lvl3","url":"/syllabus#collaboration-policy","position":48},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Collaboration Policy","lvl2":"Course Policies"},"content":"Pair programming is encouraged during lab sessions. While you may discuss approaches with classmates, all submitted code must be individually written and understood. Acknowledge all collaborators in your submissions. You must be able to explain every line of code you submit.","type":"content","url":"/syllabus#collaboration-policy","position":49},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Pair Programming Logistics","lvl2":"Course Policies"},"type":"lvl3","url":"/syllabus#pair-programming-logistics","position":50},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"Pair Programming Logistics","lvl2":"Course Policies"},"content":"With our small class size, pairs will be assigned randomly and rotate each week to ensure everyone works with different partners. If we have an odd number due to absence, one group will have three members or someone will work independently.\n\nEqual Contribution Policy: Pair programming is a privilege, not a right. While you may collaborate, discuss ideas, and look at each other‚Äôs code during class, every student must submit their own independently written code. Copying or submitting identical code will result in strict disciplinary action. The goal is mutual support and learning ‚Äî help each other understand concepts, debug issues, discuss ideas, and think through problems, but write your own implementation. This privilege will be revoked for students who abuse it.","type":"content","url":"/syllabus#pair-programming-logistics","position":51},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"AI Usage Policy (Three-Phase Scaffolded Approach)","lvl2":"Course Policies"},"type":"lvl3","url":"/syllabus#ai-usage-policy-three-phase-scaffolded-approach","position":52},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl3":"AI Usage Policy (Three-Phase Scaffolded Approach)","lvl2":"Course Policies"},"content":"","type":"content","url":"/syllabus#ai-usage-policy-three-phase-scaffolded-approach","position":53},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl4":"Phase 1: Foundation Building (Weeks 1-4)","lvl3":"AI Usage Policy (Three-Phase Scaffolded Approach)","lvl2":"Course Policies"},"type":"lvl4","url":"/syllabus#phase-1-foundation-building-weeks-1-4","position":54},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl4":"Phase 1: Foundation Building (Weeks 1-4)","lvl3":"AI Usage Policy (Three-Phase Scaffolded Approach)","lvl2":"Course Policies"},"content":"Minimal AI usage, Python documentation-first approach.\n\n20-30 minute struggle rule before seeking help.\n\nAI only for debugging after genuine effort.","type":"content","url":"/syllabus#phase-1-foundation-building-weeks-1-4","position":55},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl4":"Phase 2: Strategic Integration (Weeks 5-8)","lvl3":"AI Usage Policy (Three-Phase Scaffolded Approach)","lvl2":"Course Policies"},"type":"lvl4","url":"/syllabus#phase-2-strategic-integration-weeks-5-8","position":56},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl4":"Phase 2: Strategic Integration (Weeks 5-8)","lvl3":"AI Usage Policy (Three-Phase Scaffolded Approach)","lvl2":"Course Policies"},"content":"Use AI for clarification after consulting documentation.\n\nVerify all AI suggestions against official sources.\n\nBegin developing prompt engineering skills.","type":"content","url":"/syllabus#phase-2-strategic-integration-weeks-5-8","position":57},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl4":"Phase 3: Professional Practice (Weeks 9-16)","lvl3":"AI Usage Policy (Three-Phase Scaffolded Approach)","lvl2":"Course Policies"},"type":"lvl4","url":"/syllabus#phase-3-professional-practice-weeks-9-16","position":58},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl4":"Phase 3: Professional Practice (Weeks 9-16)","lvl3":"AI Usage Policy (Three-Phase Scaffolded Approach)","lvl2":"Course Policies"},"content":"Full AI integration with critical evaluation.\n\nUse AI as research accelerator.\n\nMaintain deep understanding requirement.\n\nAll AI usage must be cited in code comments and project memos. See the detailed AI Usage Policy & Guide for specific examples and best practices.","type":"content","url":"/syllabus#phase-3-professional-practice-weeks-9-16","position":59},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Growth Mindset"},"type":"lvl2","url":"/syllabus#growth-mindset","position":60},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Growth Mindset"},"content":"This course operates on the principle that intelligence and computational abilities are not fixed traits but skills that can be developed through dedication and practice. Your current ability is just your starting point.\n\nOur Classroom Culture:\n\nStruggle is necessary for growth - bugs and errors are where learning happens.\n\nQuestions are celebrated, especially ‚Äúbasic‚Äù ones.\n\nHelping peers solidifies your own understanding.\n\nEvery student can master this material with effort and support.\n\nThe specific tools you learn today will evolve, but your ability to learn, adapt, and think computationally will define your career. This course builds that meta-skill: learning how to learn complex computational methods.","type":"content","url":"/syllabus#growth-mindset","position":61},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Red Flags: When You‚Äôre Struggling"},"type":"lvl2","url":"/syllabus#red-flags-when-youre-struggling","position":62},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Red Flags: When You‚Äôre Struggling"},"content":"Recognize these warning signs and seek help immediately:\n\nCan‚Äôt explain your code - If you can‚Äôt describe what each line does, you don‚Äôt understand it.\n\nCopy-pasting without understanding - Using code you found without knowing why it works.\n\nAvoiding error messages - Clearing outputs instead of reading and understanding errors.\n\nNot testing incrementally - Writing 100+ lines before running anything.\n\nSkipping the readings - Trying to start projects without completing JupyterBook chapters.\n\nAI dependency - Can‚Äôt write basic functions without AI assistance.\n\nIsolation - Not asking questions in class or on Slack when confused.\n\nIf you notice these patterns, please reach out immediately. These are fixable problems, but only if addressed early.\n\nFor comprehensive learning strategies, debugging tips, and additional resources, see the Course Learning Guide.","type":"content","url":"/syllabus#red-flags-when-youre-struggling","position":63},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Resources"},"type":"lvl2","url":"/syllabus#resources","position":64},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Resources"},"content":"For comprehensive documentation, debugging strategies, and learning resources, see the Course Learning Guide on the course website.","type":"content","url":"/syllabus#resources","position":65},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Academic Integrity"},"type":"lvl2","url":"/syllabus#academic-integrity","position":66},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Academic Integrity"},"content":"All work submitted must be your own, including code, written analysis, and project documentation. Plagiarism includes submitting code you cannot explain or understand, copying written work, or using content from online sources, AI tools, or other students without proper attribution and understanding.\n\nTo ensure academic integrity and support your learning, I may ask you to explain any aspect of your submitted work during office hours or class discussions. This is a normal part of the learning process and helps verify that you truly understand the concepts and methods you‚Äôve implemented.\n\nViolations will be reported to the Center for Student Rights and Responsibilities and may result in course failure. See SDSU‚Äôs Academic Integrity Policy for details.","type":"content","url":"/syllabus#academic-integrity","position":67},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Accommodations"},"type":"lvl2","url":"/syllabus#accommodations","position":68},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Accommodations"},"content":"Students with disabilities who may need accommodations should make an appointment with Student Disability Services (\n\nsds@sdsu.edu, 619-594-6473). Please consult with SDS within the first two weeks of class.","type":"content","url":"/syllabus#accommodations","position":69},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Land Acknowledgement"},"type":"lvl2","url":"/syllabus#land-acknowledgement","position":70},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Land Acknowledgement"},"content":"We acknowledge that SDSU sits on the traditional territory of the Kumeyaay Nation. We honor their continued connection to this region and recognize their continuing presence.","type":"content","url":"/syllabus#land-acknowledgement","position":71},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Important Dates"},"type":"lvl2","url":"/syllabus#important-dates","position":72},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Important Dates"},"content":"Date\n\nItem\n\nSubmission Method\n\nSept 8 (Mon)\n\nProject 1 Due\n\nGitHub Classroom\n\nSept 10 (Wed)\n\nGrowth Memo 1 Due\n\nCanvas PDF\n\nSept 22 (Mon)\n\nProject 2 Due\n\nGitHub Classroom\n\nSept 24 (Wed)\n\nGrowth Memo 2 Due\n\nCanvas PDF\n\nOct 6 (Mon)\n\nProject 3 Due\n\nGitHub Classroom\n\nOct 8 (Wed)\n\nGrowth Memo 3 Due\n\nCanvas PDF\n\nOct 20 (Mon)\n\nProject 4 Due\n\nGitHub Classroom\n\nOct 22 (Wed)\n\nGrowth Memo 4 Due\n\nCanvas PDF\n\nNov 3 (Mon)\n\nProject 5 Due\n\nGitHub Classroom\n\nNov 5 (Wed)\n\nGrowth Memo 5 Due\n\nCanvas PDF\n\nNov 17 (Mon)\n\nProject 6 Due\n\nGitHub Classroom\n\nNov 19 (Wed)\n\nGrowth Memo 6 Due\n\nCanvas PDF\n\nNov 21 (Fri)\n\nFinal Project Proposal Due\n\nCanvas PDF\n\nDec 5 (Fri)\n\nFinal Project Progress Report\n\nCanvas PDF\n\nDec 11 (Wed)\n\nTechnical Growth Synthesis Due\n\nCanvas PDF\n\nDec 17 or 18\n\nFinal Presentations\n\nIn-person (TBD)\n\nDec 18 (Thu)\n\nFinal Project Due\n\nGitHub + Canvas","type":"content","url":"/syllabus#important-dates","position":73},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Frequently Asked Questions"},"type":"lvl2","url":"/syllabus#frequently-asked-questions","position":74},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Frequently Asked Questions"},"content":"Q: I have a question about the course.\nA: Check the syllabus first. If it‚Äôs answered here, my response will only be ‚ÄúPlease see the syllabus.‚Äù This document is our contract‚Äîyou‚Äôre responsible for knowing its contents.\n\nQ: Where can I find more details about [topic]?\nA: The syllabus contains all essential policies. Expanded guidance is in the supplementary documents on the course website.\n\nQ: I‚Äôve never used the command line. Will I struggle?\nA: Week 1 covers basics. Use AI tutors for practice. You‚Äôll be comfortable by Week 3.\n\nQ: Can I use different libraries than specified?\nA: No for Projects 1-6 (glass box approach). Yes for final project extensions.\n\nQ: What if I can‚Äôt attend a Friday session?\nA: Contact instructor ASAP. Review recordings if available, complete work independently, check in via Slack.\n\nQ: How much time should I spend on each project?\nA: Expect 12-18 hours per 2-week project outside of class. Start early, work incrementally.\n\nQ: Can I use AI to write my code?\nA: No. Follow the three-phase policy. AI is for learning, not replacing your thinking.\n\nQ: When can I use AI tools like Claude or ChatGPT?\nA: You can use AI from day one to understand concepts, clarify theory, and reinforce learning. Just don‚Äôt use it to write your code. Even in Phase 3, use AI sparingly for coding‚Äîprimarily for debugging help, finding documentation, or understanding error messages, not for generating solutions.\n\nQ: What if I finish a project early?\nA: Great! Submit it early, explore suggested extensions, help peers, or start reading ahead for the next project.\n\nQ: What if my code works but is inefficient?\nA: Working code is the first goal. We‚Äôll discuss optimization in class and extensions.\n\nQ: Do I need to memorize equations?\nA: No. All physics equations will be provided. Focus on understanding what they mean physically and can be solved computationally.\n\nQ: Can I work ahead on projects?\nA: Yes! The JupyterBook provides the foundation. But wait for the official assignment for full requirements.\n\nQ: What programming background do I need?\nA: Basic Python. We‚Äôll build from there.","type":"content","url":"/syllabus#frequently-asked-questions","position":75},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Your Responsibility"},"type":"lvl2","url":"/syllabus#your-responsibility","position":76},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Your Responsibility"},"content":"This syllabus constitutes our course contract. You are responsible for reading and understanding all policies stated here. Questions answered in this document will receive the response: ‚ÄúIt‚Äôs in the syllabus.‚Äù","type":"content","url":"/syllabus#your-responsibility","position":77},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Additional Course Documents"},"type":"lvl2","url":"/syllabus#additional-course-documents","position":78},{"hierarchy":{"lvl1":"Syllabus - ASTR 596: Modeling the Universe","lvl2":"Additional Course Documents"},"content":"Detailed guides expanding on these policies are available on the course website:\n\nCourse Learning Guide - Expanded philosophy, learning strategies, debugging tips, resources\n\nProject Submission Guide - Detailed requirements, rubric, and examples\n\nAI Usage Policy & Guide - Specific examples and best practices\n\nFinal Project Guide - Project ideas, requirements, and inspiration","type":"content","url":"/syllabus#additional-course-documents","position":79},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way"},"type":"lvl1","url":"/why-astr596-is-different","position":0},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way"},"content":"","type":"content","url":"/why-astr596-is-different","position":1},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Preparing You for Research Reality"},"type":"lvl2","url":"/why-astr596-is-different#preparing-you-for-research-reality","position":2},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Preparing You for Research Reality"},"content":"This course intentionally operates differently from traditional lecture-based classes because research careers require fundamentally different skills than undergraduate coursework. Understanding why we use this approach will help you get the most from the experience.","type":"content","url":"/why-astr596-is-different#preparing-you-for-research-reality","position":3},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"The Research Environment You‚Äôre Entering"},"type":"lvl2","url":"/why-astr596-is-different#the-research-environment-youre-entering","position":4},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"The Research Environment You‚Äôre Entering"},"content":"","type":"content","url":"/why-astr596-is-different#the-research-environment-youre-entering","position":5},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"What Professional Technical Work Actually Looks Like","lvl2":"The Research Environment You‚Äôre Entering"},"type":"lvl3","url":"/why-astr596-is-different#what-professional-technical-work-actually-looks-like","position":6},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"What Professional Technical Work Actually Looks Like","lvl2":"The Research Environment You‚Äôre Entering"},"content":"Whether you pursue academia, industry, or entrepreneurship, high-level technical work shares common characteristics:\n\nNo predetermined answers: You‚Äôre solving problems no one has tackled before\n\nIndependent problem-solving: Managers expect solutions, not step-by-step guidance requests\n\nCreative approaches required: Standard methods often need adaptation for new contexts\n\nCollaboration with peers: Working effectively with colleagues at your skill level\n\nAI-integrated workflows: Strategic use of computational tools is now standard across industries\n\nContinuous learning: Technology evolves rapidly; successful professionals adapt continuously\n\nCross-disciplinary thinking: Real problems don‚Äôt respect academic boundaries","type":"content","url":"/why-astr596-is-different#what-professional-technical-work-actually-looks-like","position":7},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"The Transition from Student to Scientist","lvl2":"The Research Environment You‚Äôre Entering"},"type":"lvl3","url":"/why-astr596-is-different#the-transition-from-student-to-scientist","position":8},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"The Transition from Student to Scientist","lvl2":"The Research Environment You‚Äôre Entering"},"content":"As Martin Schwartz explains in his influential essay, the transition from coursework to research is jarring by design:\n\nUndergraduate coursework: Taking courses, getting right answers on tests, feeling smart when you know the answers\n\nGraduate research: ‚ÄúImmersion in the unknown,‚Äù where nobody knows the right answers yet‚Äîthat‚Äôs why it‚Äôs research\n\nThe key realization: As Schwartz discovered when even his Nobel Prize-winning advisor didn‚Äôt know how to solve a research problem: ‚ÄúThat‚Äôs when it hit me: nobody did. That‚Äôs why it was a research problem.‚Äù\n\nThis transition requires developing ‚Äúproductive stupidity‚Äù‚Äîbeing comfortable with not knowing, so you can wade deeper into genuinely unknown territory where discoveries happen.","type":"content","url":"/why-astr596-is-different#the-transition-from-student-to-scientist","position":9},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Why Traditional Teaching Falls Short"},"type":"lvl2","url":"/why-astr596-is-different#why-traditional-teaching-falls-short","position":10},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Why Traditional Teaching Falls Short"},"content":"","type":"content","url":"/why-astr596-is-different#why-traditional-teaching-falls-short","position":11},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"The ‚ÄúRecipe Following‚Äù Problem","lvl2":"Why Traditional Teaching Falls Short"},"type":"lvl3","url":"/why-astr596-is-different#the-recipe-following-problem","position":12},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"The ‚ÄúRecipe Following‚Äù Problem","lvl2":"Why Traditional Teaching Falls Short"},"content":"Traditional approach: ‚ÄúHere‚Äôs the method, here‚Äôs the data, follow these steps, get the right answer‚Äù\nResearch reality: ‚ÄúHere‚Äôs an interesting phenomenon - figure out how to study it‚Äù\n\nTraditional approach: ‚ÄúUse this specific software package exactly as shown‚Äù\nResearch reality: ‚ÄúChoose appropriate tools, adapt them to your needs, integrate multiple approaches‚Äù\n\nTraditional approach: ‚ÄúAvoid mistakes - they hurt your grade‚Äù\nResearch reality: ‚ÄúLearn from mistakes - they‚Äôre how discoveries happen‚Äù","type":"content","url":"/why-astr596-is-different#the-recipe-following-problem","position":13},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"The Passive Learning Trap","lvl2":"Why Traditional Teaching Falls Short"},"type":"lvl3","url":"/why-astr596-is-different#the-passive-learning-trap","position":14},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"The Passive Learning Trap","lvl2":"Why Traditional Teaching Falls Short"},"content":"Many courses accidentally teach students to:\n\nWait for instructions rather than taking initiative\n\nFocus on ‚Äúwhat does the professor want?‚Äù rather than ‚Äúwhat does this result mean?‚Äù\n\nAvoid risks that might lead to interesting discoveries\n\nSee confusion as failure rather than the beginning of understanding\n\nThis doesn‚Äôt prepare you for careers where creativity and independent thinking are essential.","type":"content","url":"/why-astr596-is-different#the-passive-learning-trap","position":15},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Our Strategic Design Choices"},"type":"lvl2","url":"/why-astr596-is-different#our-strategic-design-choices","position":16},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Our Strategic Design Choices"},"content":"","type":"content","url":"/why-astr596-is-different#our-strategic-design-choices","position":17},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"‚ÄúI Want You to Think‚Äù Focus","lvl2":"Our Strategic Design Choices"},"type":"lvl3","url":"/why-astr596-is-different#i-want-you-to-think-focus","position":18},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"‚ÄúI Want You to Think‚Äù Focus","lvl2":"Our Strategic Design Choices"},"content":"Why: Research supervisors expect you to contribute ideas, not just follow directions. You need to develop intellectual confidence and curiosity.\n\nHow this helps: By explicitly rewarding thinking over compliance, you develop the mindset essential for research success.","type":"content","url":"/why-astr596-is-different#i-want-you-to-think-focus","position":19},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Growth Over Perfection Philosophy","lvl2":"Our Strategic Design Choices"},"type":"lvl3","url":"/why-astr596-is-different#growth-over-perfection-philosophy","position":20},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Growth Over Perfection Philosophy","lvl2":"Our Strategic Design Choices"},"content":"Why: Research involves constant learning, failed experiments, and iterative improvement. Perfection paralysis kills creativity.\n\nHow this helps: You develop resilience and learn to extract value from challenges rather than avoiding them.","type":"content","url":"/why-astr596-is-different#growth-over-perfection-philosophy","position":21},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Mandatory Extensions","lvl2":"Our Strategic Design Choices"},"type":"lvl3","url":"/why-astr596-is-different#mandatory-extensions","position":22},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Mandatory Extensions","lvl2":"Our Strategic Design Choices"},"content":"Why: Real research requires going beyond minimum requirements to discover something new or interesting. Each project includes mandatory extensions (parameter exploration, visualization interpretation, performance analysis) that push you to experiment.\n\nHow this helps: You practice the curiosity and initiative that drives scientific discovery, learning to ask ‚Äúwhat if?‚Äù and ‚Äúwhy does this happen?‚Äù","type":"content","url":"/why-astr596-is-different#mandatory-extensions","position":23},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"AI Integration Framework","lvl2":"Our Strategic Design Choices"},"type":"lvl3","url":"/why-astr596-is-different#ai-integration-framework","position":24},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"AI Integration Framework","lvl2":"Our Strategic Design Choices"},"content":"Why: AI tools are now standard in computational research, but using them effectively requires critical thinking and domain expertise.\n\nHow this helps: You learn to leverage AI strategically while maintaining the deep understanding needed for research innovation.","type":"content","url":"/why-astr596-is-different#ai-integration-framework","position":25},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Pair Programming and Collaboration","lvl2":"Our Strategic Design Choices"},"type":"lvl3","url":"/why-astr596-is-different#pair-programming-and-collaboration","position":26},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Pair Programming and Collaboration","lvl2":"Our Strategic Design Choices"},"content":"Why: Modern research is highly collaborative, requiring effective communication and mutual learning.\n\nHow this helps: You develop skills for working productively with peers, giving and receiving feedback, and learning from others.","type":"content","url":"/why-astr596-is-different#pair-programming-and-collaboration","position":27},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Evidence That This Approach Works","lvl2":"Our Strategic Design Choices"},"type":"lvl3","url":"/why-astr596-is-different#evidence-that-this-approach-works","position":28},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Evidence That This Approach Works","lvl2":"Our Strategic Design Choices"},"content":"Recent research validation: Ting & O‚ÄôBriain (2025) conducted an empirical study of LLM integration in final-year undergraduate astronomy education and found:\n\nStudents decreased their AI dependence over time when given structured guidance and documentation requirements\n\nAI became a learning tool rather than a shortcut - students developed verification workflows instead of just seeking answers\n\nDocumentation requirements fostered metacognitive awareness - students became better at evaluating AI strengths and limitations\n\nStrong student satisfaction: Students reported high confidence that the AI literacy skills would be valuable for future academic and professional work\n\nKey insight: Contrary to fears about AI undermining education, thoughtful integration with reflection requirements actually enhanced learning outcomes while building essential 21st-century skills.","type":"content","url":"/why-astr596-is-different#evidence-that-this-approach-works","position":29},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Addressing Common Concerns (With Research Evidence)"},"type":"lvl2","url":"/why-astr596-is-different#addressing-common-concerns-with-research-evidence","position":30},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Addressing Common Concerns (With Research Evidence)"},"content":"","type":"content","url":"/why-astr596-is-different#addressing-common-concerns-with-research-evidence","position":31},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"‚ÄúThis seems harder than my other courses‚Äù","lvl2":"Addressing Common Concerns (With Research Evidence)"},"type":"lvl3","url":"/why-astr596-is-different#this-seems-harder-than-my-other-courses","position":32},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"‚ÄúThis seems harder than my other courses‚Äù","lvl2":"Addressing Common Concerns (With Research Evidence)"},"content":"Why it feels harder: You‚Äôre developing new cognitive abilities‚Äîindependent thinking, creative problem-solving, and comfort with uncertainty. Neuroscience shows this kind of learning literally requires your brain to form new neural connections, which takes mental effort.\n\nWhy it‚Äôs worth it: Research demonstrates that students who develop a growth mindset (believing abilities can be developed through effort) significantly outperform those with a fixed mindset (believing abilities are innate). The Ting & O‚ÄôBriain study confirms that students who engage with this approach develop valuable professional skills and decreased AI dependency over time.","type":"content","url":"/why-astr596-is-different#this-seems-harder-than-my-other-courses","position":33},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"‚ÄúI‚Äôm making more mistakes than usual‚Äù","lvl2":"Addressing Common Concerns (With Research Evidence)"},"type":"lvl3","url":"/why-astr596-is-different#im-making-more-mistakes-than-usual","position":34},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"‚ÄúI‚Äôm making more mistakes than usual‚Äù","lvl2":"Addressing Common Concerns (With Research Evidence)"},"content":"This is scientifically normal and valuable. As Schwartz writes: ‚ÄúScience involves confronting our ‚Äòabsolute stupidity‚Äô... The more comfortable we become with being stupid, the deeper we will wade into the unknown.‚Äù\n\nWhat neuroscience tells us: Mistakes and confusion during learning signal that your brain is actively building new neural pathways. The productive struggle is where cognitive growth happens‚Äîavoiding it means avoiding the development of expertise.","type":"content","url":"/why-astr596-is-different#im-making-more-mistakes-than-usual","position":35},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Professional Skills You‚Äôre Developing"},"type":"lvl2","url":"/why-astr596-is-different#professional-skills-youre-developing","position":36},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Professional Skills You‚Äôre Developing"},"content":"","type":"content","url":"/why-astr596-is-different#professional-skills-youre-developing","position":37},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Computational Research Competencies","lvl2":"Professional Skills You‚Äôre Developing"},"type":"lvl3","url":"/why-astr596-is-different#computational-research-competencies","position":38},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Computational Research Competencies","lvl2":"Professional Skills You‚Äôre Developing"},"content":"Code literacy: Reading, writing, debugging, and adapting computational methods\n\nDocumentation: Communicating your approach clearly for future reference\n\nVersion control: Managing complex projects over time\n\nTesting and validation: Ensuring your methods work correctly\n\nPerformance optimization: Making code efficient and scalable","type":"content","url":"/why-astr596-is-different#computational-research-competencies","position":39},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Scientific Thinking Skills","lvl2":"Professional Skills You‚Äôre Developing"},"type":"lvl3","url":"/why-astr596-is-different#scientific-thinking-skills","position":40},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Scientific Thinking Skills","lvl2":"Professional Skills You‚Äôre Developing"},"content":"Hypothesis formation: Developing testable ideas from observations\n\nMethod selection: Choosing appropriate approaches for specific questions\n\nResult interpretation: Understanding what computational outputs mean physically\n\nLimitation assessment: Recognizing boundaries and assumptions in your work\n\nCommunication: Presenting complex ideas clearly to technical audiences","type":"content","url":"/why-astr596-is-different#scientific-thinking-skills","position":41},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Professional Habits","lvl2":"Professional Skills You‚Äôre Developing"},"type":"lvl3","url":"/why-astr596-is-different#professional-habits","position":42},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Professional Habits","lvl2":"Professional Skills You‚Äôre Developing"},"content":"Intellectual honesty: Acknowledging what you don‚Äôt know and where you‚Äôre uncertain\n\nCollaborative learning: Working effectively with peers at similar skill levels\n\nContinuous improvement: Learning from feedback and iterating on your approach\n\nTime management: Balancing exploration with productivity\n\nResilience: Maintaining motivation through challenging periods","type":"content","url":"/why-astr596-is-different#professional-habits","position":43},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"How This Prepares You for Success"},"type":"lvl2","url":"/why-astr596-is-different#how-this-prepares-you-for-success","position":44},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"How This Prepares You for Success"},"content":"","type":"content","url":"/why-astr596-is-different#how-this-prepares-you-for-success","position":45},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Academic Paths","lvl2":"How This Prepares You for Success"},"type":"lvl3","url":"/why-astr596-is-different#academic-paths","position":46},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Academic Paths","lvl2":"How This Prepares You for Success"},"content":"Graduate school: Research experience, genuine computational competency, ability to articulate how you learn from challenges\n\nResearch positions: Independence in tackling problems, creative approaches, meaningful team contributions\n\nGrant writing: Clear communication of complex work to funding agencies","type":"content","url":"/why-astr596-is-different#academic-paths","position":47},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Technical Industry","lvl2":"How This Prepares You for Success"},"type":"lvl3","url":"/why-astr596-is-different#technical-industry","position":48},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Technical Industry","lvl2":"How This Prepares You for Success"},"content":"Software engineering: Debug complex systems, write maintainable code, integrate AI tools strategically\n\nData science: Approach novel datasets, develop custom pipelines, interpret results for stakeholders\n\nQuantitative finance: Develop and validate models under uncertainty, communicate findings to decision-makers\n\nProduct development: Translate technical capabilities into user-facing solutions","type":"content","url":"/why-astr596-is-different#technical-industry","position":49},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Leadership & Entrepreneurship","lvl2":"How This Prepares You for Success"},"type":"lvl3","url":"/why-astr596-is-different#leadership-entrepreneurship","position":50},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Leadership & Entrepreneurship","lvl2":"How This Prepares You for Success"},"content":"Technical founding: Build prototypes, evaluate feasibility, pivot based on data\n\nStrategic thinking: Connect technical work to broader business goals\n\nTeam leadership: Guide projects and mentor others in technical contexts\n\nProblem-solving: Approach novel challenges systematically across any domain","type":"content","url":"/why-astr596-is-different#leadership-entrepreneurship","position":51},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Transferable Life Skills","lvl2":"How This Prepares You for Success"},"type":"lvl3","url":"/why-astr596-is-different#transferable-life-skills","position":52},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Transferable Life Skills","lvl2":"How This Prepares You for Success"},"content":"Critical thinking: Evaluate complex information and make reasoned decisions\n\nLearning agility: Acquire new skills independently throughout your career\n\nCommunication: Explain complex ideas clearly to diverse audiences\n\nResilience: Persist through difficult problems and learn from setbacks\n\nAI integration: Use AI tools effectively while maintaining critical judgment","type":"content","url":"/why-astr596-is-different#transferable-life-skills","position":53},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Making the Most of This Approach"},"type":"lvl2","url":"/why-astr596-is-different#making-the-most-of-this-approach","position":54},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Making the Most of This Approach"},"content":"","type":"content","url":"/why-astr596-is-different#making-the-most-of-this-approach","position":55},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Embrace the Discomfort","lvl2":"Making the Most of This Approach"},"type":"lvl3","url":"/why-astr596-is-different#embrace-the-discomfort","position":56},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Embrace the Discomfort","lvl2":"Making the Most of This Approach"},"content":"Feeling challenged or uncertain is a sign you‚Äôre growing. Research careers require comfort with ambiguity and confidence in your ability to figure things out.","type":"content","url":"/why-astr596-is-different#embrace-the-discomfort","position":57},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Use Support Resources","lvl2":"Making the Most of This Approach"},"type":"lvl3","url":"/why-astr596-is-different#use-support-resources","position":58},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Use Support Resources","lvl2":"Making the Most of This Approach"},"content":"Hacking Hours: Perfect for working through challenges collaboratively\n\nPair programming: Learn from peers and contribute to their learning\n\nGrowth Memos: Reflect on your development and consolidate insights","type":"content","url":"/why-astr596-is-different#use-support-resources","position":59},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Focus on Long-Term Development","lvl2":"Making the Most of This Approach"},"type":"lvl3","url":"/why-astr596-is-different#focus-on-long-term-development","position":60},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Focus on Long-Term Development","lvl2":"Making the Most of This Approach"},"content":"Individual assignments matter less than the cumulative development of your capabilities. Ask yourself: ‚ÄúHow am I growing as a computational scientist?‚Äù","type":"content","url":"/why-astr596-is-different#focus-on-long-term-development","position":61},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Your Choice in This Process"},"type":"lvl2","url":"/why-astr596-is-different#your-choice-in-this-process","position":62},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Your Choice in This Process"},"content":"This is your education and your career - I‚Äôm just here to provide opportunities. You get to decide how much you want to engage with this approach and what you want to get out of it.","type":"content","url":"/why-astr596-is-different#your-choice-in-this-process","position":63},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"What I Can Offer","lvl2":"Your Choice in This Process"},"type":"lvl3","url":"/why-astr596-is-different#what-i-can-offer","position":64},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"What I Can Offer","lvl2":"Your Choice in This Process"},"content":"Structured opportunities to develop independence, creativity, and critical thinking\n\nProfessional skills that serve you across academic and industry careers\n\nSupport and guidance as you develop your own problem-solving capabilities\n\nA learning environment where intellectual risk-taking is safe and encouraged","type":"content","url":"/why-astr596-is-different#what-i-can-offer","position":65},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"What You Control","lvl2":"Your Choice in This Process"},"type":"lvl3","url":"/why-astr596-is-different#what-you-control","position":66},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"What You Control","lvl2":"Your Choice in This Process"},"content":"Your level of engagement - how deeply you dive into optional explorations and growth opportunities\n\nYour learning goals - what skills and insights you prioritize developing\n\nYour career direction - whether you pursue academia, industry, entrepreneurship, or something entirely different\n\nYour relationship with challenges - whether you see them as obstacles or growth opportunities","type":"content","url":"/why-astr596-is-different#what-you-control","position":67},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Different Levels of Engagement","lvl2":"Your Choice in This Process"},"type":"lvl3","url":"/why-astr596-is-different#different-levels-of-engagement","position":68},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Different Levels of Engagement","lvl2":"Your Choice in This Process"},"content":"Minimum approach: Meet the requirements, pass the course, move on with your degree\nGrowth approach: Use this as an opportunity to develop stronger problem-solving and technical skills\nTransformation approach: Let this fundamentally change how you approach learning and professional challenges\n\nAll of these are valid choices. I hope you‚Äôll choose deeper engagement because I believe it will serve you well, but ultimately that‚Äôs your decision to make.","type":"content","url":"/why-astr596-is-different#different-levels-of-engagement","position":69},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"The Long View","lvl2":"Your Choice in This Process"},"type":"lvl3","url":"/why-astr596-is-different#the-long-view","position":70},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"The Long View","lvl2":"Your Choice in This Process"},"content":"The skills we‚Äôre developing here - independent thinking, creative problem-solving, strategic AI use, intellectual resilience - are increasingly valuable across all technical careers. Whether you become a researcher, data scientist, software engineer, consultant, or entrepreneur, these capabilities will serve you.\n\nBut you‚Äôre the one who has to live your career and make your own choices about what matters to you.\n\nI‚Äôm here to provide opportunities and support. What you do with them is entirely up to you.","type":"content","url":"/why-astr596-is-different#the-long-view","position":71},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Your First Steps"},"type":"lvl2","url":"/why-astr596-is-different#your-first-steps","position":72},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl2":"Your First Steps"},"content":"","type":"content","url":"/why-astr596-is-different#your-first-steps","position":73},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Week 1 Survival Guide","lvl2":"Your First Steps"},"type":"lvl3","url":"/why-astr596-is-different#week-1-survival-guide","position":74},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Week 1 Survival Guide","lvl2":"Your First Steps"},"content":"Accept that confusion is normal - Everyone feels lost the first 2-3 weeks. This is your brain building new neural pathways.\n\nUse the 20-minute struggle rule - Wrestling with problems before seeking help builds problem-solving muscles.\n\nWrite honest growth memos - They‚Äôre for your development, not performance evaluation.\n\nForm study partnerships early - You‚Äôre only 4 students‚Äîleverage each other‚Äôs strengths.\n\nCome to Hacking Hours with specific questions - ‚ÄúI tried X, expected Y, got Z‚Äù is much better than ‚ÄúI‚Äôm stuck.‚Äù","type":"content","url":"/why-astr596-is-different#week-1-survival-guide","position":75},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Mindset Shifts to Practice","lvl2":"Your First Steps"},"type":"lvl3","url":"/why-astr596-is-different#mindset-shifts-to-practice","position":76},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Mindset Shifts to Practice","lvl2":"Your First Steps"},"content":"Add ‚Äúyet‚Äù to your struggles: ‚ÄúI don‚Äôt understand this YET‚Äù\n\nReframe errors as data: ‚ÄúInteresting, why did that break?‚Äù\n\nCelebrate productive failures: ‚ÄúI learned three ways that don‚Äôt work‚Äù\n\nValue questions over answers: ‚ÄúWhat am I not seeing here?‚Äù","type":"content","url":"/why-astr596-is-different#mindset-shifts-to-practice","position":77},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Remember","lvl2":"Your First Steps"},"type":"lvl3","url":"/why-astr596-is-different#remember","position":78},{"hierarchy":{"lvl1":"Why ASTR 596 is Designed This Way","lvl3":"Remember","lvl2":"Your First Steps"},"content":"This course requires ~9 hours per week outside of class, though you may spend more time early in the semester as you develop your skills and confidence. That‚Äôs not punishment‚Äîit‚Äôs practice time for developing expertise. Like learning an instrument or training for athletics, computational thinking requires consistent daily practice, not last-minute cramming. As you build competency, you‚Äôll work more efficiently.\n\nYou‚Äôre not just learning to code. You‚Äôre learning to think like a computational scientist.","type":"content","url":"/why-astr596-is-different#remember","position":79},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide"},"type":"lvl1","url":"/final-project-guide","position":0},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide"},"content":"##Neural Networks for Astrophysical Discovery**","type":"content","url":"/final-project-guide","position":1},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Overview"},"type":"lvl3","url":"/final-project-guide#overview","position":2},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Overview"},"content":"The final project is your opportunity to synthesize everything you‚Äôve learned by tackling a novel scientific question using neural networks. You‚Äôll extend one of your previous projects (P1-P6), refactor it to JAX, and apply neural network methods to solve a problem that would be difficult or impossible with classical approaches alone.\n\nKey Dates:\n\nNov 17: Project assigned, begin planning\n\nNov 21: Proposal due (2 pages)\n\nDec 5: Progress report due (1 page + preliminary results)\n\nDec 11: Technical Growth Synthesis due\n\nDec 17/18: Final presentations (10 minutes)\n\nDec 18: Final submission (code + 8-12 page report)","type":"content","url":"/final-project-guide#overview","position":3},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Project Structure"},"type":"lvl2","url":"/final-project-guide#project-structure","position":4},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Project Structure"},"content":"","type":"content","url":"/final-project-guide#project-structure","position":5},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Phase 1: Selection & Refactoring (Week 1)","lvl2":"Project Structure"},"type":"lvl3","url":"/final-project-guide#phase-1-selection-refactoring-week-1","position":6},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Phase 1: Selection & Refactoring (Week 1)","lvl2":"Project Structure"},"content":"Choose one of your previous projects and identify a scientific question that:\n\nExtends beyond the original project scope\n\nBenefits from neural network approaches\n\nCannot be easily solved with classical methods alone\n\nThen refactor your existing code to JAX:\n\nConvert NumPy operations to JAX\n\nImplement automatic differentiation where beneficial\n\nPrepare for GPU acceleration\n\nMaintain modular structure","type":"content","url":"/final-project-guide#phase-1-selection-refactoring-week-1","position":7},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Phase 2: Neural Network Implementation (Week 2)","lvl2":"Project Structure"},"type":"lvl3","url":"/final-project-guide#phase-2-neural-network-implementation-week-2","position":8},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Phase 2: Neural Network Implementation (Week 2)","lvl2":"Project Structure"},"content":"Implement your neural network solution with two components:\n\nFrom Scratch: Build the core NN architecture manually (forward pass, backprop)\n\nJAX Ecosystem: Use Equinox/Flax for production implementation","type":"content","url":"/final-project-guide#phase-2-neural-network-implementation-week-2","position":9},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Phase 3: Science & Analysis (Week 3)","lvl2":"Project Structure"},"type":"lvl3","url":"/final-project-guide#phase-3-science-analysis-week-3","position":10},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Phase 3: Science & Analysis (Week 3)","lvl2":"Project Structure"},"content":"Run experiments and generate results\n\nCompare NN approach to classical methods\n\nAnalyze what the network learned\n\nPrepare visualizations and presentation","type":"content","url":"/final-project-guide#phase-3-science-analysis-week-3","position":11},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Project Ideas by Previous Project"},"type":"lvl2","url":"/final-project-guide#project-ideas-by-previous-project","position":12},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Project Ideas by Previous Project"},"content":"","type":"content","url":"/final-project-guide#project-ideas-by-previous-project","position":13},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 1: Stellar Physics","lvl2":"Project Ideas by Previous Project"},"type":"lvl3","url":"/final-project-guide#extending-project-1-stellar-physics","position":14},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 1: Stellar Physics","lvl2":"Project Ideas by Previous Project"},"content":"Classical Approach: HR diagram analysis, stellar classification\n\nNN Extension Ideas:\n\nStellar Parameter Prediction: Train NN to predict Teff, log(g), [Fe/H] from spectra\n\nEvolutionary Track Interpolation: NN to predict stellar evolution between computed models\n\nVariable Star Classification: Time-series classification of light curves\n\nSpectral Synthesis: Generate synthetic spectra from stellar parameters\n\nWhy NNs? Non-linear relationships in high-dimensional spectral data, pattern recognition in time series","type":"content","url":"/final-project-guide#extending-project-1-stellar-physics","position":15},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 2: N-Body Dynamics","lvl2":"Project Ideas by Previous Project"},"type":"lvl3","url":"/final-project-guide#extending-project-2-n-body-dynamics","position":16},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 2: N-Body Dynamics","lvl2":"Project Ideas by Previous Project"},"content":"Classical Approach: Direct integration of gravitational forces\n\nNN Extension Ideas:\n\nChaos Prediction: Predict long-term stability of multi-body systems\n\nFast Force Approximation: NN to approximate expensive force calculations\n\nOrbit Classification: Classify orbital families in galactic potentials\n\nMissing Mass Inference: Infer dark matter distribution from visible orbits\n\nWhy NNs? Speed up expensive calculations, find patterns in chaotic dynamics, inverse problems","type":"content","url":"/final-project-guide#extending-project-2-n-body-dynamics","position":17},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 3: Regression Fundamentals","lvl2":"Project Ideas by Previous Project"},"type":"lvl3","url":"/final-project-guide#extending-project-3-regression-fundamentals","position":18},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 3: Regression Fundamentals","lvl2":"Project Ideas by Previous Project"},"content":"Classical Approach: Linear/polynomial regression, basic optimization\n\nNN Extension Ideas:\n\nDeep Regression Networks: Multi-layer networks for complex relationships\n\nUncertainty Quantification: Bayesian neural networks for error estimates\n\nFeature Learning: Automatic feature extraction from raw data\n\nTransfer Learning: Pre-train on simulations, fine-tune on observations\n\nWhy NNs? Capture non-linear relationships, automatic feature engineering, uncertainty estimation","type":"content","url":"/final-project-guide#extending-project-3-regression-fundamentals","position":19},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 4: Monte Carlo Radiative Transfer","lvl2":"Project Ideas by Previous Project"},"type":"lvl3","url":"/final-project-guide#extending-project-4-monte-carlo-radiative-transfer","position":20},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 4: Monte Carlo Radiative Transfer","lvl2":"Project Ideas by Previous Project"},"content":"Classical Approach: Photon packet propagation through medium\n\nNN Extension Ideas:\n\nEmulator Networks: NN to approximate expensive MCRT calculations\n\nInverse RT: Infer medium properties from observed spectra\n\nAcceleration Schemes: NN to importance sample photon paths\n\nImage-to-Image Translation: Map observations to physical parameters\n\nWhy NNs? Orders of magnitude speedup, solve inverse problems, learn from simulations","type":"content","url":"/final-project-guide#extending-project-4-monte-carlo-radiative-transfer","position":21},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 5: Bayesian/MCMC","lvl2":"Project Ideas by Previous Project"},"type":"lvl3","url":"/final-project-guide#extending-project-5-bayesian-mcmc","position":22},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 5: Bayesian/MCMC","lvl2":"Project Ideas by Previous Project"},"content":"Classical Approach: Metropolis-Hastings, parameter estimation\n\nNN Extension Ideas:\n\nNormalizing Flows: Learn complex posterior distributions\n\nLikelihood-Free Inference: Neural posterior estimation\n\nProposal Networks: Learn optimal MCMC proposal distributions\n\nVariational Inference: Approximate posteriors with NNs\n\nWhy NNs? Handle high-dimensional posteriors, accelerate inference, avoid likelihood calculations","type":"content","url":"/final-project-guide#extending-project-5-bayesian-mcmc","position":23},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 6: Gaussian Processes","lvl2":"Project Ideas by Previous Project"},"type":"lvl3","url":"/final-project-guide#extending-project-6-gaussian-processes","position":24},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Extending Project 6: Gaussian Processes","lvl2":"Project Ideas by Previous Project"},"content":"Classical Approach: Kernel-based regression, hyperparameter optimization\nNN Extension Ideas:\n\nDeep Kernel Learning: Learn kernel functions with NNs\n\nNeural Process Models: Combine GP flexibility with NN scalability\n\nAttention Mechanisms: Self-attention for irregular time series\n\nMeta-Learning: Learn to learn from few examples\n\nWhy NNs? Scale to large datasets, learn complex kernels, handle irregular sampling","type":"content","url":"/final-project-guide#extending-project-6-gaussian-processes","position":25},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Technical Requirements"},"type":"lvl2","url":"/final-project-guide#technical-requirements","position":26},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Technical Requirements"},"content":"","type":"content","url":"/final-project-guide#technical-requirements","position":27},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Core Implementation Requirements","lvl2":"Technical Requirements"},"type":"lvl3","url":"/final-project-guide#core-implementation-requirements","position":28},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Core Implementation Requirements","lvl2":"Technical Requirements"},"content":"JAX Refactoring\n\nConvert core functions to JAX\n\nUse jit compilation where appropriate\n\nImplement vectorized operations\n\nDemonstrate speedup over NumPy version\n\nNeural Network From Scratchclass NeuralNetwork:\n    def __init__(self, layers):\n        self.weights = self.initialize_weights(layers)\n    \n    def forward(self, x):\n        # Implement forward pass\n        \n    def backward(self, x, y, learning_rate):\n        # Implement backpropagation\n        \n    def train(self, X, y, epochs):\n        # Training loop\n\nJAX Ecosystem Implementation\n\nUse Equinox or Flax for model definition\n\nOptax for optimization\n\nProper train/validation/test splits\n\nImplement early stopping and regularization","type":"content","url":"/final-project-guide#core-implementation-requirements","position":29},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Scientific Requirements","lvl2":"Technical Requirements"},"type":"lvl3","url":"/final-project-guide#scientific-requirements","position":30},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Scientific Requirements","lvl2":"Technical Requirements"},"content":"Hypothesis: Clear statement of what you‚Äôre investigating\n\nBaseline: Compare to non-NN approach from original project\n\nValidation: Demonstrate correctness on known solutions\n\nAnalysis: What did the network learn? Interpretability attempts\n\nLimitations: Where does your approach fail?","type":"content","url":"/final-project-guide#scientific-requirements","position":31},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Code Structure","lvl2":"Technical Requirements"},"type":"lvl3","url":"/final-project-guide#code-structure","position":32},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Code Structure","lvl2":"Technical Requirements"},"content":"final_project/\n‚îú‚îÄ‚îÄ src/\n‚îÇ   ‚îú‚îÄ‚îÄ __init__.py\n‚îÇ   ‚îú‚îÄ‚îÄ jax_refactor/       # JAX version of original project\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ physics.py\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ numerics.py\n‚îÇ   ‚îú‚îÄ‚îÄ nn_from_scratch/    # Manual implementation\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ network.py\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ layers.py\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ optimizers.py\n‚îÇ   ‚îú‚îÄ‚îÄ nn_production/      # Equinox/Flax implementation\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ models.py\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ training.py\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ evaluation.py\n‚îÇ   ‚îî‚îÄ‚îÄ analysis/           # Results analysis\n‚îÇ       ‚îú‚îÄ‚îÄ visualize.py\n‚îÇ       ‚îî‚îÄ‚îÄ interpret.py\n‚îú‚îÄ‚îÄ data/\n‚îÇ   ‚îú‚îÄ‚îÄ raw/\n‚îÇ   ‚îú‚îÄ‚îÄ processed/\n‚îÇ   ‚îî‚îÄ‚îÄ results/\n‚îú‚îÄ‚îÄ notebooks/              # Exploration only (not submission)\n‚îú‚îÄ‚îÄ outputs/\n‚îÇ   ‚îú‚îÄ‚îÄ figures/\n‚îÇ   ‚îú‚îÄ‚îÄ models/            # Saved model checkpoints\n‚îÇ   ‚îî‚îÄ‚îÄ metrics/           # Training histories\n‚îú‚îÄ‚îÄ tests/\n‚îú‚îÄ‚îÄ README.md\n‚îú‚îÄ‚îÄ requirements.txt\n‚îú‚îÄ‚îÄ proposal.pdf\n‚îú‚îÄ‚îÄ progress_report.pdf\n‚îî‚îÄ‚îÄ final_report.pdf","type":"content","url":"/final-project-guide#code-structure","position":33},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Deliverables"},"type":"lvl2","url":"/final-project-guide#deliverables","position":34},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Deliverables"},"content":"","type":"content","url":"/final-project-guide#deliverables","position":35},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"1. Project Proposal (Nov 21) - 2 pages","lvl2":"Deliverables"},"type":"lvl3","url":"/final-project-guide#id-1-project-proposal-nov-21-2-pages","position":36},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"1. Project Proposal (Nov 21) - 2 pages","lvl2":"Deliverables"},"content":"Format: PDF submitted to Canvas\n\nRequired Sections:\n\nScientific Question (0.5 page)\n\nWhat new question will you address?\n\nWhy can‚Äôt classical methods solve this?\n\nMethodology (0.75 page)\n\nWhich previous project are you extending?\n\nWhat NN architecture will you use?\n\nHow will you validate results?\n\nTimeline (0.25 page)\n\nWeek-by-week plan\n\nSuccess Metrics (0.5 page)\n\nHow will you know if it worked?\n\nWhat‚Äôs your baseline comparison?","type":"content","url":"/final-project-guide#id-1-project-proposal-nov-21-2-pages","position":37},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"2. Progress Report (Dec 5) - 1 page + figures","lvl2":"Deliverables"},"type":"lvl3","url":"/final-project-guide#id-2-progress-report-dec-5-1-page-figures","position":38},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"2. Progress Report (Dec 5) - 1 page + figures","lvl2":"Deliverables"},"content":"Required Elements:\n\nJAX refactoring complete (show timing comparisons)\n\nNN from scratch implemented (show it learns something)\n\nPreliminary results from JAX ecosystem version\n\nAny blocking issues identified","type":"content","url":"/final-project-guide#id-2-progress-report-dec-5-1-page-figures","position":39},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"3. Final Report (Dec 18) - 8-12 pages","lvl2":"Deliverables"},"type":"lvl3","url":"/final-project-guide#id-3-final-report-dec-18-8-12-pages","position":40},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"3. Final Report (Dec 18) - 8-12 pages","lvl2":"Deliverables"},"content":"Format: Research paper style (abstract, intro, methods, results, discussion)\n\nSections:\n\nAbstract (200 words)\n\nIntroduction (1-2 pages)\n\nScientific motivation\n\nPrevious work (cite your original project)\n\nWhy neural networks?\n\nMethods (3-4 pages)\n\nJAX refactoring approach\n\nNetwork architecture choices\n\nTraining procedure\n\nValidation strategy\n\nResults (2-3 pages)\n\nPerformance comparisons (classical vs NN)\n\nScientific findings\n\nComputational benchmarks\n\nDiscussion (2-3 pages)\n\nInterpretation of what network learned\n\nLimitations and failure modes\n\nFuture improvements\n\nBroader implications\n\nConclusion (0.5 page)\n\nReferences (not counted in page limit)\n\nFigure Requirements:\n\nMinimum 5 figures\n\nArchitecture diagram\n\nTraining curves\n\nResults comparison\n\nScientific interpretation plots","type":"content","url":"/final-project-guide#id-3-final-report-dec-18-8-12-pages","position":41},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"4. Final Presentation (Dec 17/18) - 10 minutes","lvl2":"Deliverables"},"type":"lvl3","url":"/final-project-guide#id-4-final-presentation-dec-17-18-10-minutes","position":42},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"4. Final Presentation (Dec 17/18) - 10 minutes","lvl2":"Deliverables"},"content":"Structure:\n\n2 min: Problem setup and motivation\n\n3 min: Methods (focus on NN approach)\n\n3 min: Results and comparison\n\n1 min: What the network learned\n\n1 min: Conclusions and future work\n\nSlides: 10-12 slides maximum, emphasize visuals","type":"content","url":"/final-project-guide#id-4-final-presentation-dec-17-18-10-minutes","position":43},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Grading Rubric (100 points)"},"type":"lvl2","url":"/final-project-guide#grading-rubric-100-points","position":44},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Grading Rubric (100 points)"},"content":"Component\n\nPoints\n\nCriteria\n\nJAX Refactoring\n\n15\n\nCorrect implementation, performance gains\n\nNN From Scratch\n\n20\n\nWorking implementation, clear understanding\n\nJAX Ecosystem\n\n20\n\nProper use of tools, advanced features\n\nScientific Merit\n\n15\n\nNovel question, appropriate methods\n\nResults & Analysis\n\n15\n\nThorough comparison, interpretation\n\nReport Quality\n\n10\n\nClear writing, good figures, proper citations\n\nPresentation\n\n5\n\nClear, engaging, on time","type":"content","url":"/final-project-guide#grading-rubric-100-points","position":45},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Detailed Rubric Descriptions","lvl2":"Grading Rubric (100 points)"},"type":"lvl3","url":"/final-project-guide#detailed-rubric-descriptions","position":46},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Detailed Rubric Descriptions","lvl2":"Grading Rubric (100 points)"},"content":"","type":"content","url":"/final-project-guide#detailed-rubric-descriptions","position":47},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"JAX Refactoring (15 points)","lvl3":"Detailed Rubric Descriptions","lvl2":"Grading Rubric (100 points)"},"type":"lvl4","url":"/final-project-guide#jax-refactoring-15-points","position":48},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"JAX Refactoring (15 points)","lvl3":"Detailed Rubric Descriptions","lvl2":"Grading Rubric (100 points)"},"content":"Excellent (14-15): Full refactor, significant speedup, uses advanced JAX features\n\nGood (11-13): Most code refactored, some speedup, basic JAX usage\n\nSatisfactory (8-10): Partial refactor, works but minimal optimization\n\nNeeds Improvement (0-7): Minimal refactoring or doesn‚Äôt work","type":"content","url":"/final-project-guide#jax-refactoring-15-points","position":49},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"NN From Scratch (20 points)","lvl3":"Detailed Rubric Descriptions","lvl2":"Grading Rubric (100 points)"},"type":"lvl4","url":"/final-project-guide#nn-from-scratch-20-points","position":50},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"NN From Scratch (20 points)","lvl3":"Detailed Rubric Descriptions","lvl2":"Grading Rubric (100 points)"},"content":"Excellent (18-20): Full backprop, multiple layers, advanced features (dropout, batch norm)\n\nGood (14-17): Working backprop, 2+ layers, trains successfully\n\nSatisfactory (10-13): Basic working network, may have limitations\n\nNeeds Improvement (0-9): Doesn‚Äôt train or major implementation errors","type":"content","url":"/final-project-guide#nn-from-scratch-20-points","position":51},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"JAX Ecosystem (20 points)","lvl3":"Detailed Rubric Descriptions","lvl2":"Grading Rubric (100 points)"},"type":"lvl4","url":"/final-project-guide#jax-ecosystem-20-points","position":52},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"JAX Ecosystem (20 points)","lvl3":"Detailed Rubric Descriptions","lvl2":"Grading Rubric (100 points)"},"content":"Excellent (18-20): Advanced architectures, proper training pipeline, uses multiple libraries\n\nGood (14-17): Standard implementation, works well, uses Equinox/Flax properly\n\nSatisfactory (10-13): Basic implementation, works but not optimized\n\nNeeds Improvement (0-9): Minimal use of ecosystem or doesn‚Äôt work","type":"content","url":"/final-project-guide#jax-ecosystem-20-points","position":53},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Scientific Merit (15 points)"},"type":"lvl2","url":"/final-project-guide#scientific-merit-15-points","position":54},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Scientific Merit (15 points)"},"content":"Excellent (14-15): Novel question, clear hypothesis, appropriate for NNs\n\nGood (11-13): Good question, reasonable approach\n\nSatisfactory (8-10): Adequate question but could use classical methods\n\nNeeds Improvement (0-7): Unclear question or inappropriate methods","type":"content","url":"/final-project-guide#scientific-merit-15-points","position":55},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Tips for Success"},"type":"lvl2","url":"/final-project-guide#tips-for-success","position":56},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Tips for Success"},"content":"","type":"content","url":"/final-project-guide#tips-for-success","position":57},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Choosing Your Project","lvl2":"Tips for Success"},"type":"lvl3","url":"/final-project-guide#choosing-your-project","position":58},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Choosing Your Project","lvl2":"Tips for Success"},"content":"","type":"content","url":"/final-project-guide#choosing-your-project","position":59},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Good Final Projects:","lvl3":"Choosing Your Project","lvl2":"Tips for Success"},"type":"lvl4","url":"/final-project-guide#good-final-projects","position":60},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Good Final Projects:","lvl3":"Choosing Your Project","lvl2":"Tips for Success"},"content":"Address a clear scientific question\n\nShow when/why NNs outperform classical methods\n\nBuild naturally on your previous work\n\nAre ambitious but achievable in 3 weeks","type":"content","url":"/final-project-guide#good-final-projects","position":61},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Avoid:","lvl3":"Choosing Your Project","lvl2":"Tips for Success"},"type":"lvl4","url":"/final-project-guide#avoid","position":62},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Avoid:","lvl3":"Choosing Your Project","lvl2":"Tips for Success"},"content":"Applying NNs just because you can\n\nProblems with analytical solutions\n\nDatasets too small for NNs to be beneficial\n\nOverly complex architectures you don‚Äôt understand","type":"content","url":"/final-project-guide#avoid","position":63},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Time Management","lvl2":"Tips for Success"},"type":"lvl3","url":"/final-project-guide#time-management","position":64},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Time Management","lvl2":"Tips for Success"},"content":"","type":"content","url":"/final-project-guide#time-management","position":65},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Week 1 Focus:","lvl3":"Time Management","lvl2":"Tips for Success"},"type":"lvl4","url":"/final-project-guide#week-1-focus","position":66},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Week 1 Focus:","lvl3":"Time Management","lvl2":"Tips for Success"},"content":"Days 1-2: Project selection and proposal writing\n\nDays 3-4: JAX refactoring\n\nDays 5-7: NN from scratch implementation","type":"content","url":"/final-project-guide#week-1-focus","position":67},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Week 2 Focus:","lvl3":"Time Management","lvl2":"Tips for Success"},"type":"lvl4","url":"/final-project-guide#week-2-focus","position":68},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Week 2 Focus:","lvl3":"Time Management","lvl2":"Tips for Success"},"content":"Days 8-10: JAX ecosystem implementation\n\nDays 11-12: Training and hyperparameter tuning\n\nDays 13-14: Progress report and debugging","type":"content","url":"/final-project-guide#week-2-focus","position":69},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Week 3 Focus:","lvl3":"Time Management","lvl2":"Tips for Success"},"type":"lvl4","url":"/final-project-guide#week-3-focus","position":70},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Week 3 Focus:","lvl3":"Time Management","lvl2":"Tips for Success"},"content":"Days 15-17: Final experiments and analysis\n\nDays 18-19: Report writing\n\nDays 20-21: Presentation preparation","type":"content","url":"/final-project-guide#week-3-focus","position":71},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Common Pitfalls","lvl2":"Tips for Success"},"type":"lvl3","url":"/final-project-guide#common-pitfalls","position":72},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Common Pitfalls","lvl2":"Tips for Success"},"content":"Overcomplicating: Start simple, add complexity if time permits\n\nPoor Baselines: Always compare to your classical implementation\n\nNo Validation: Must demonstrate correctness on known cases\n\nBlack Box Syndrome: Understand what your network is doing\n\nLast-Minute JAX: Start refactoring early, JAX has a learning curve","type":"content","url":"/final-project-guide#common-pitfalls","position":73},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Resources","lvl2":"Tips for Success"},"type":"lvl3","url":"/final-project-guide#resources","position":74},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Resources","lvl2":"Tips for Success"},"content":"","type":"content","url":"/final-project-guide#resources","position":75},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"JAX Tutorials:","lvl3":"Resources","lvl2":"Tips for Success"},"type":"lvl4","url":"/final-project-guide#jax-tutorials","position":76},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"JAX Tutorials:","lvl3":"Resources","lvl2":"Tips for Success"},"content":"Official JAX Documentation\n\nJAX 101 Tutorial\n\nThinking in JAX","type":"content","url":"/final-project-guide#jax-tutorials","position":77},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Neural Network Theory:","lvl3":"Resources","lvl2":"Tips for Success"},"type":"lvl4","url":"/final-project-guide#neural-network-theory","position":78},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Neural Network Theory:","lvl3":"Resources","lvl2":"Tips for Success"},"content":"Deep Learning book (Goodfellow et al.) - free online\n\nNeural Networks and Deep Learning (Michael Nielsen) - free online\n\nFast.ai course materials","type":"content","url":"/final-project-guide#neural-network-theory","position":79},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Astrophysics ML Papers:","lvl3":"Resources","lvl2":"Tips for Success"},"type":"lvl4","url":"/final-project-guide#astrophysics-ml-papers","position":80},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl4":"Astrophysics ML Papers:","lvl3":"Resources","lvl2":"Tips for Success"},"content":"‚ÄúMachine Learning in Astronomy‚Äù (Baron 2019)\n\n‚ÄúDeep Learning for Observational Cosmology‚Äù (Ntampaka+ 2019)\n\nRecent papers using NNs in your subfield","type":"content","url":"/final-project-guide#astrophysics-ml-papers","position":81},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Getting Help"},"type":"lvl2","url":"/final-project-guide#getting-help","position":82},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Getting Help"},"content":"","type":"content","url":"/final-project-guide#getting-help","position":83},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Technical Support:","lvl2":"Getting Help"},"type":"lvl3","url":"/final-project-guide#technical-support","position":84},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Technical Support:","lvl2":"Getting Help"},"content":"JAX issues: Check documentation first, then ask on Slack\n\nNN architecture questions: Discuss in Friday sessions\n\nDebugging: Use AI tutors for concept help, not code generation","type":"content","url":"/final-project-guide#technical-support","position":85},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Scientific Guidance:","lvl2":"Getting Help"},"type":"lvl3","url":"/final-project-guide#scientific-guidance","position":86},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl3":"Scientific Guidance:","lvl2":"Getting Help"},"content":"Unsure if your question is appropriate? Discuss in office hours\n\nNeed literature references? Ask on Slack\n\nWant feedback on approach? Submit optional draft to instructor\n\nRemember: This project should showcase your growth as a computational astrophysicist. It‚Äôs not about building the most complex network‚Äîit‚Äôs about demonstrating understanding of when, why, and how neural networks can advance astrophysical research.","type":"content","url":"/final-project-guide#scientific-guidance","position":87},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Final Thoughts"},"type":"lvl2","url":"/final-project-guide#final-thoughts","position":88},{"hierarchy":{"lvl1":"ASTR 596: Final Project Guide","lvl2":"Final Thoughts"},"content":"This project is your opportunity to:\n\nDemonstrate mastery of course concepts\n\nExplore a scientific question you‚Äôre passionate about\n\nBuild something you can show future advisors/employers\n\nPush yourself beyond your comfort zone\n\nEmbrace the challenge, ask for help when needed, and create something you‚Äôre proud of!","type":"content","url":"/final-project-guide#final-thoughts","position":89},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX"},"type":"lvl1","url":"/index-2","position":0},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX"},"content":"The culminating project for ASTR 596 where you implement neural networks from scratch and then translate to the JAX ecosystem.","type":"content","url":"/index-2","position":1},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl2":"Project Overview"},"type":"lvl2","url":"/index-2#project-overview","position":2},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl2":"Project Overview"},"content":"This capstone project synthesizes everything you‚Äôve learned throughout the course:\n\nNeural Network Implementation: Build backpropagation from first principles\n\nJAX Translation: Convert your NumPy implementation to JAX\n\nAstrophysical Application: Apply your networks to real astronomical data\n\nResearch-Quality Output: Publication-ready analysis and documentation","type":"content","url":"/index-2#project-overview","position":3},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl2":"Learning Objectives"},"type":"lvl2","url":"/index-2#learning-objectives","position":4},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl2":"Learning Objectives"},"content":"By completing this project, you will:\n\nUnderstand neural network fundamentals at the mathematical level\n\nImplement automatic differentiation manually before using JAX\n\nMaster the JAX ecosystem for high-performance computing\n\nApply ML to astrophysics with proper scientific methodology\n\nProduce research-quality work suitable for academic or industry contexts","type":"content","url":"/index-2#learning-objectives","position":5},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl2":"Project Components"},"type":"lvl2","url":"/index-2#project-components","position":6},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl2":"Project Components"},"content":"","type":"content","url":"/index-2#project-components","position":7},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl3":"Phase 1: From Scratch Implementation (Weeks 13-14)","lvl2":"Project Components"},"type":"lvl3","url":"/index-2#phase-1-from-scratch-implementation-weeks-13-14","position":8},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl3":"Phase 1: From Scratch Implementation (Weeks 13-14)","lvl2":"Project Components"},"content":"Manual backpropagation in pure NumPy\n\nCustom automatic differentiation\n\nTraining on astronomical datasets","type":"content","url":"/index-2#phase-1-from-scratch-implementation-weeks-13-14","position":9},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl3":"Phase 2: JAX Translation (Week 15)","lvl2":"Project Components"},"type":"lvl3","url":"/index-2#phase-2-jax-translation-week-15","position":10},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl3":"Phase 2: JAX Translation (Week 15)","lvl2":"Project Components"},"content":"Convert NumPy code to JAX\n\nLeverage automatic differentiation\n\nOptimize for performance","type":"content","url":"/index-2#phase-2-jax-translation-week-15","position":11},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl3":"Phase 3: Research Application (Finals Week)","lvl2":"Project Components"},"type":"lvl3","url":"/index-2#phase-3-research-application-finals-week","position":12},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl3":"Phase 3: Research Application (Finals Week)","lvl2":"Project Components"},"content":"Apply to cutting-edge astrophysical problems\n\nGenerate publication-quality figures\n\nWrite formal research report","type":"content","url":"/index-2#phase-3-research-application-finals-week","position":13},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl2":"Resources"},"type":"lvl2","url":"/index-2#resources","position":14},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl2":"Resources"},"content":"Project Guide - Detailed requirements and rubric\n\nJAX Documentation - Official JAX guide\n\nFlax Examples - Neural network implementations","type":"content","url":"/index-2#resources","position":15},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl2":"Timeline"},"type":"lvl2","url":"/index-2#timeline","position":16},{"hierarchy":{"lvl1":"Final Project: Neural Networks & JAX","lvl2":"Timeline"},"content":"Week\n\nMilestone\n\nDeliverable\n\n13\n\nImplement forward pass\n\nWorking neural network\n\n14\n\nAdd backpropagation\n\nTraining pipeline\n\n15\n\nJAX translation\n\nHigh-performance version\n\nFinals\n\nResearch application\n\nFinal report & presentation\n\nThis project represents the culmination of your journey from Python fundamentals to cutting-edge computational astrophysics. You‚Äôll emerge with both deep understanding and practical skills for modern research careers.","type":"content","url":"/index-2#timeline","position":17},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe"},"type":"lvl1","url":"/","position":0},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe"},"content":"SDSU | Fall 2025 | Fridays 11:00 AM - 1:40 PM | PA 215\n\nWelcome to computational astrophysics! This course takes you on a journey from Python fundamentals to cutting-edge JAX implementations, building transparent ‚Äúglass box‚Äù models that reveal the physics underlying astronomical phenomena.\n\nCourse Philosophy: ‚ÄúGlass Box‚Äù Modeling\n\nEarned Complexity: We implement fundamental algorithms from first principles before leveraging advanced frameworks. Every line of code serves understanding‚Äîno black boxes allowed until you‚Äôve built the glass box yourself.","type":"content","url":"/","position":1},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Course Trajectory"},"type":"lvl2","url":"/#course-trajectory","position":2},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Course Trajectory"},"content":"üêç Python Foundations\n\nProfessional development environment, OOP design, and stellar physics modeling\n\nü™ê N-Body Dynamics\n\nGravitational systems, numerical integration, and Monte Carlo sampling\n\nüìà Machine Learning\n\nLinear regression, optimization, and statistical modeling from scratch\n\nüé≤ Monte Carlo Methods\n\nRadiative transfer, photon transport, and observational effects\n\nüîç Bayesian Inference\n\nMCMC sampling, parameter estimation, and uncertainty quantification\n\nüß† Neural Networks\n\nFrom backpropagation to JAX ecosystem and research applications","type":"content","url":"/#course-trajectory","position":3},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Quick Navigation"},"type":"lvl2","url":"/#quick-navigation","position":4},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Quick Navigation"},"content":"üìã Course Information\n\nSyllabus, schedule, policies, and expectations\n\nüéØ Projects\n\nSix progressive projects building computational skills\n\nü§ñ AI Guidelines\n\nThree-phase approach to responsible AI integration\n\nüõ†Ô∏è Resources\n\nSetup guides, references, and learning materials","type":"content","url":"/#quick-navigation","position":5},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Learning Philosophy"},"type":"lvl2","url":"/#learning-philosophy","position":6},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Learning Philosophy"},"content":"graph TD\n    A[Manual Implementation] --> B[Deep Understanding]\n    B --> C[Modern AI Tools]\n    C --> D[Research-Ready Skills]\n    \n    A1[NumPy from scratch] --> A\n    A2[MCMC by hand] --> A\n    A3[Neural nets manually] --> A\n    \n    D --> D1[Academic Research]\n    D --> D2[Industry Applications]\n    D --> D3[Computational Discovery]\n    \n    style A fill:#e1f5fe\n    style D fill:#f3e5f5","type":"content","url":"/#learning-philosophy","position":7},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Course Highlights"},"type":"lvl2","url":"/#course-highlights","position":8},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Course Highlights"},"content":"Glass Box Methodology: Build understanding from first principles\n\nPair Programming: Collaborative learning with rotating partnerships\n\nModern Frameworks: Bridge from NumPy to JAX ecosystem\n\nReal Astrophysics: Every project addresses genuine astronomical problems\n\nProfessional Skills: Git, testing, documentation, and AI tool integration\n\nResearch Preparation: Publication-quality code and cutting-edge methods","type":"content","url":"/#course-highlights","position":9},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Responsible AI Integration"},"type":"lvl2","url":"/#responsible-ai-integration","position":10},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Responsible AI Integration"},"content":"AI as a Learning Partner\n\nThis course teaches you to use AI tools (GitHub Copilot, ChatGPT) as learning amplifiers, not replacement thinking. You‚Äôll develop critical evaluation skills while building the foundational knowledge that makes AI truly powerful.\n\nPhase 1 (Weeks 1-4): Foundation building with limited AI assistancePhase 2 (Weeks 5-8): Strategic AI integration with critical evaluationPhase 3 (Weeks 9-15): Full AI partnership for advanced implementations","type":"content","url":"/#responsible-ai-integration","position":11},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Getting Started"},"type":"lvl2","url":"/#getting-started","position":12},{"hierarchy":{"lvl1":"ASTR 596: Modeling the Universe","lvl2":"Getting Started"},"content":"üìñ Review the \n\nSyllabus and \n\nAI Guidelines\n\n‚öôÔ∏è Set up your development environment (see \n\nResources)\n\nüë• Join the course GitHub organization\n\nüöÄ Start with \n\nProject 1\n\nQuestions or Issues?\n\nInstructor: Professor Anna Rosen\n\nOffice: Physics 239\n\nEmail: \n\nalrosen@sdsu.edu\n\nOffice Hours: TBD in class (also available by appointment)\n\nCourse Issues: \n\nGitHub repository\n\nWelcome to a journey from Python basics to the frontiers of computational astrophysics. Together, we‚Äôll model the universe, one algorithm at a time. ‚ú®","type":"content","url":"/#getting-started","position":13},{"hierarchy":{"lvl1":"External Resources"},"type":"lvl1","url":"/index-15","position":0},{"hierarchy":{"lvl1":"External Resources"},"content":"Content coming soon!","type":"content","url":"/index-15","position":1},{"hierarchy":{"lvl1":"Reference Materials"},"type":"lvl1","url":"/index-13","position":0},{"hierarchy":{"lvl1":"Reference Materials"},"content":"Comprehensive resources and references for ASTR 596: Modeling the Universe.","type":"content","url":"/index-13","position":1},{"hierarchy":{"lvl1":"Reference Materials","lvl2":"Quick Access"},"type":"lvl2","url":"/index-13#quick-access","position":2},{"hierarchy":{"lvl1":"Reference Materials","lvl2":"Quick Access"},"content":"Quick References - Cheat sheets and syntax guides\n\nExternal Resources - Books, papers, and online materials\n\nTroubleshooting Guide - Common issues and solutions","type":"content","url":"/index-13#quick-access","position":3},{"hierarchy":{"lvl1":"Reference Materials","lvl2":"What You‚Äôll Find Here"},"type":"lvl2","url":"/index-13#what-youll-find-here","position":4},{"hierarchy":{"lvl1":"Reference Materials","lvl2":"What You‚Äôll Find Here"},"content":"","type":"content","url":"/index-13#what-youll-find-here","position":5},{"hierarchy":{"lvl1":"Reference Materials","lvl3":"Quick References","lvl2":"What You‚Äôll Find Here"},"type":"lvl3","url":"/index-13#quick-references","position":6},{"hierarchy":{"lvl1":"Reference Materials","lvl3":"Quick References","lvl2":"What You‚Äôll Find Here"},"content":"Fast lookup guides for Python syntax, mathematical formulas, and computational methods used throughout the course.","type":"content","url":"/index-13#quick-references","position":7},{"hierarchy":{"lvl1":"Reference Materials","lvl3":"External Resources","lvl2":"What You‚Äôll Find Here"},"type":"lvl3","url":"/index-13#external-resources","position":8},{"hierarchy":{"lvl1":"Reference Materials","lvl3":"External Resources","lvl2":"What You‚Äôll Find Here"},"content":"Curated collection of textbooks, research papers, online courses, and documentation that complement the course material.","type":"content","url":"/index-13#external-resources","position":9},{"hierarchy":{"lvl1":"Reference Materials","lvl3":"Troubleshooting","lvl2":"What You‚Äôll Find Here"},"type":"lvl3","url":"/index-13#troubleshooting","position":10},{"hierarchy":{"lvl1":"Reference Materials","lvl3":"Troubleshooting","lvl2":"What You‚Äôll Find Here"},"content":"Solutions to common programming, mathematical, and conceptual issues students encounter during projects.","type":"content","url":"/index-13#troubleshooting","position":11},{"hierarchy":{"lvl1":"Reference Materials","lvl2":"Using These Resources"},"type":"lvl2","url":"/index-13#using-these-resources","position":12},{"hierarchy":{"lvl1":"Reference Materials","lvl2":"Using These Resources"},"content":"These materials are designed to support your learning throughout ASTR 596 and serve as a reference for future research work. Bookmark this section for quick access during projects and assignments.","type":"content","url":"/index-13#using-these-resources","position":13},{"hierarchy":{"lvl1":"Quick References"},"type":"lvl1","url":"/index-14","position":0},{"hierarchy":{"lvl1":"Quick References"},"content":"Content coming soon!","type":"content","url":"/index-14","position":1},{"hierarchy":{"lvl1":"Troubleshooting"},"type":"lvl1","url":"/index-16","position":0},{"hierarchy":{"lvl1":"Troubleshooting"},"content":"Content coming soon!","type":"content","url":"/index-16","position":1},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide"},"type":"lvl1","url":"/project-submission-guide","position":0},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide"},"content":"","type":"content","url":"/project-submission-guide","position":1},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Project Schedule & Deadlines"},"type":"lvl2","url":"/project-submission-guide#project-schedule-deadlines","position":2},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Project Schedule & Deadlines"},"content":"","type":"content","url":"/project-submission-guide#project-schedule-deadlines","position":3},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Project Timeline","lvl2":"Project Schedule & Deadlines"},"type":"lvl3","url":"/project-submission-guide#project-timeline","position":4},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Project Timeline","lvl2":"Project Schedule & Deadlines"},"content":"Projects are assigned on Mondays (posted to GitHub Classroom) and due the following Monday at 11:59 PM. This schedule allows you to review requirements before Friday‚Äôs class, where we‚Äôll work on implementation together.\n\nProject\n\nAssigned\n\nDue Date\n\nTopic\n\nKey Concepts\n\nProject 1\n\nAug 25 (Mon)\n\nSept 8 (Mon)\n\nPython/OOP/Stellar Physics Basics\n\nClasses, inheritance, HR diagrams\n\nProject 2\n\nSept 8 (Mon)\n\nSept 22 (Mon)\n\nODE Integration + N-Body Dynamics + Monte Carlo Sampling\n\nEuler, RK4, Leapfrog, IMF sampling\n\nProject 3\n\nSept 22 (Mon)\n\nOct 6 (Mon)\n\nRegression/ML Fundamentals\n\nGradient descent, loss functions, optimization\n\nProject 4\n\nOct 6 (Mon)\n\nOct 20 (Mon)\n\nMonte Carlo Radiative Transfer\n\nPhoton packets, scattering, absorption\n\nProject 5\n\nOct 20 (Mon)\n\nNov 3 (Mon)\n\nBayesian/MCMC\n\nPriors, likelihood, Metropolis-Hastings\n\nProject 6\n\nNov 3 (Mon)\n\nNov 17 (Mon)\n\nGaussian Processes\n\nKernels, hyperparameters, regression\n\nFinal Project\n\nNov 17 (Mon)\n\nDec 18 (Thu)\n\nNeural Networks (From Scratch + JAX)\n\nBackprop, autodiff, JAX ecosystem","type":"content","url":"/project-submission-guide#project-timeline","position":5},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Two-Week Project Workflow","lvl2":"Project Schedule & Deadlines"},"type":"lvl3","url":"/project-submission-guide#two-week-project-workflow","position":6},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Two-Week Project Workflow","lvl2":"Project Schedule & Deadlines"},"content":"Week 1: Understanding & Initial Implementation\n\nDay 1-2 (Mon-Tue): Read assignment thoroughly, understand requirements, review relevant JupyterBook chapter\n\nDay 3-4 (Wed-Thu): Begin implementation, focus on core functionality\n\nDay 5 (Fri): Class session - ask questions, pair programming, debug with peers\n\nDay 6-7 (Sat-Sun): Continue implementation based on class insights\n\nWeek 2: Refinement & Completion\n\nDay 8-9 (Mon-Tue): Complete base requirements, begin mandatory extensions\n\nDay 10-11 (Wed-Thu): Test edge cases, optimize performance\n\nDay 12 (Fri): Class session - final debugging, optimization discussions\n\nDay 13 (Sat-Sun): Polish code, write documentation, complete project memo\n\nDay 14 (Mon): Final review, submit by 11:59 PM","type":"content","url":"/project-submission-guide#two-week-project-workflow","position":7},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Submission Requirements"},"type":"lvl2","url":"/project-submission-guide#submission-requirements","position":8},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Submission Requirements"},"content":"","type":"content","url":"/project-submission-guide#submission-requirements","position":9},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Each Project Must Include","lvl2":"Submission Requirements"},"type":"lvl3","url":"/project-submission-guide#each-project-must-include","position":10},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Each Project Must Include","lvl2":"Submission Requirements"},"content":"","type":"content","url":"/project-submission-guide#each-project-must-include","position":11},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"1. Code Components","lvl3":"Each Project Must Include","lvl2":"Submission Requirements"},"type":"lvl4","url":"/project-submission-guide#id-1-code-components","position":12},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"1. Code Components","lvl3":"Each Project Must Include","lvl2":"Submission Requirements"},"content":"project_N/\n‚îú‚îÄ‚îÄ src/\n‚îÇ   ‚îú‚îÄ‚îÄ __init__.py\n‚îÇ   ‚îú‚îÄ‚îÄ main.py           # Entry point with clear argument parsing\n‚îÇ   ‚îú‚îÄ‚îÄ physics.py        # Physics calculations\n‚îÇ   ‚îú‚îÄ‚îÄ numerics.py       # Numerical methods\n‚îÇ   ‚îú‚îÄ‚îÄ utils.py          # Helper functions\n‚îÇ   ‚îî‚îÄ‚îÄ visualization.py  # Plotting functions\n‚îú‚îÄ‚îÄ tests/\n‚îÇ   ‚îî‚îÄ‚îÄ test_core.py      # At least basic tests\n‚îú‚îÄ‚îÄ outputs/\n‚îÇ   ‚îú‚îÄ‚îÄ figures/          # All generated plots\n‚îÇ   ‚îî‚îÄ‚îÄ data/             # Any output data files\n‚îú‚îÄ‚îÄ README.md             # Installation and usage instructions\n‚îú‚îÄ‚îÄ requirements.txt      # All dependencies with versions\n‚îú‚îÄ‚îÄ project_memo.md       # Your analysis and reflection\n‚îî‚îÄ‚îÄ .gitignore           # Properly configured\n\nCode Standards:\n\nModular design with clear separation of concerns\n\nNo God functions (functions should do one thing well)\n\nMeaningful variable names (no single letters except for indices)\n\nType hints encouraged for function signatures\n\nNo global variables unless absolutely necessary\n\nError handling for edge cases","type":"content","url":"/project-submission-guide#id-1-code-components","position":13},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"2. Project Memo (Markdown Format)","lvl3":"Each Project Must Include","lvl2":"Submission Requirements"},"type":"lvl4","url":"/project-submission-guide#id-2-project-memo-markdown-format","position":14},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"2. Project Memo (Markdown Format)","lvl3":"Each Project Must Include","lvl2":"Submission Requirements"},"content":"Your memo should be 2-5 pages and include:# Project N: [Title] - Memo\nAuthor: [Your Name]\nDate: [Submission Date]\n\n## Executive Summary\n[1-2 paragraphs summarizing what you did and key findings]\n\n## Methodology\n[How you approached the problem, key algorithmic choices]\n\n## Results\n[Key findings with embedded plots using relative paths]\n![Description](outputs/figures/plot1.png)\n\n## Computational Performance\n[Runtime analysis, bottlenecks identified, optimizations made]\n\n## Challenges & Solutions\n[What was hard, how you solved it, what you learned]\n\n## Extensions Implemented\n[Description of mandatory extensions completed]\n\n## Reflection\n[What you learned about computational physics and programming]","type":"content","url":"/project-submission-guide#id-2-project-memo-markdown-format","position":15},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"3. Documentation Requirements","lvl3":"Each Project Must Include","lvl2":"Submission Requirements"},"type":"lvl4","url":"/project-submission-guide#id-3-documentation-requirements","position":16},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"3. Documentation Requirements","lvl3":"Each Project Must Include","lvl2":"Submission Requirements"},"content":"README.md must include:# Project N: [Descriptive Title]\n\n## Description\n[Brief description of what this project does]\n\n## Installation\n```bash\nconda create -n proj_n python=3.10\nconda activate proj_n\npip install -r requirements.txt","type":"content","url":"/project-submission-guide#id-3-documentation-requirements","position":17},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Usage"},"type":"lvl2","url":"/project-submission-guide#usage","position":18},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Usage"},"content":"python src/main.py --input data.txt --output results.png","type":"content","url":"/project-submission-guide#usage","position":19},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Project Structure"},"type":"lvl2","url":"/project-submission-guide#project-structure","position":20},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Project Structure"},"content":"[Brief description of each file‚Äôs purpose]","type":"content","url":"/project-submission-guide#project-structure","position":21},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Key Results"},"type":"lvl2","url":"/project-submission-guide#key-results","position":22},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Key Results"},"content":"[Summary of main findings]","type":"content","url":"/project-submission-guide#key-results","position":23},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Dependencies"},"type":"lvl2","url":"/project-submission-guide#dependencies","position":24},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Dependencies"},"content":"Python 3.10+\n\nNumPy, SciPy, Matplotlib\n\n[Any other specific packages]\n**Function Docstrings Example:**\n```python\ndef integrate_orbit(initial_conditions, time_span, method='RK4', dt=0.01):\n    \"\"\"\n    Integrate orbital dynamics using specified numerical method.\n    \n    Parameters\n    ----------\n    initial_conditions : np.ndarray\n        Shape (6,) array of [x, y, z, vx, vy, vz]\n    time_span : tuple\n        (t_start, t_end) for integration\n    method : str, optional\n        Integration method: 'Euler', 'RK4', or 'Leapfrog'\n    dt : float, optional\n        Time step size\n    \n    Returns\n    -------\n    trajectory : np.ndarray\n        Shape (n_steps, 6) array of positions and velocities\n    times : np.ndarray\n        Shape (n_steps,) array of time points\n    \n    Raises\n    ------\n    ValueError\n        If method is not recognized or dt <= 0\n    \n    Examples\n    --------\n    >>> ic = np.array([1, 0, 0, 0, 1, 0])\n    >>> traj, t = integrate_orbit(ic, (0, 10))\n    \"\"\"\n    # Implementation here","type":"content","url":"/project-submission-guide#dependencies","position":25},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"4. GitHub Classroom Requirements","lvl2":"Dependencies"},"type":"lvl4","url":"/project-submission-guide#id-4-github-classroom-requirements","position":26},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"4. GitHub Classroom Requirements","lvl2":"Dependencies"},"content":"Commit Practices:\n\nCommit early and often (minimum 5-10 meaningful commits per project)\n\nEach commit should represent a logical unit of work\n\nCommit messages should be descriptive:\n\n‚úÖ Good: ‚ÄúAdd RK4 integration method with adaptive timestep‚Äù\n\n‚ùå Bad: ‚ÄúUpdate code‚Äù or ‚ÄúFix stuff‚Äù\n\n.gitignore must include:# Python\n__pycache__/\n*.py[cod]\n*$py.class\n*.so\n.Python\n\n# Virtual Environment\nvenv/\nenv/\nENV/\n\n# IDE\n.vscode/\n.idea/\n*.swp\n.DS_Store\n\n# Project specific\noutputs/figures/*.png\noutputs/data/*.txt\n*.log\n\n# But track\n!outputs/figures/.gitkeep\n!outputs/data/.gitkeep","type":"content","url":"/project-submission-guide#id-4-github-classroom-requirements","position":27},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Grading Rubric"},"type":"lvl2","url":"/project-submission-guide#grading-rubric","position":28},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Grading Rubric"},"content":"","type":"content","url":"/project-submission-guide#grading-rubric","position":29},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Project Grading Breakdown (100 points total)","lvl2":"Grading Rubric"},"type":"lvl3","url":"/project-submission-guide#project-grading-breakdown-100-points-total","position":30},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Project Grading Breakdown (100 points total)","lvl2":"Grading Rubric"},"content":"Component\n\nPoints\n\nCriteria\n\nCore Implementation\n\n40\n\nCorrectness, completeness, follows specifications\n\nMandatory Extensions\n\n30\n\nAll required extensions implemented and working\n\nCode Quality\n\n15\n\nStructure, readability, documentation, style\n\nProject Memo\n\n15\n\nAnalysis quality, reflection depth, visualization","type":"content","url":"/project-submission-guide#project-grading-breakdown-100-points-total","position":31},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Detailed Rubric","lvl2":"Grading Rubric"},"type":"lvl3","url":"/project-submission-guide#detailed-rubric","position":32},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Detailed Rubric","lvl2":"Grading Rubric"},"content":"","type":"content","url":"/project-submission-guide#detailed-rubric","position":33},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"Core Implementation (40 points)","lvl3":"Detailed Rubric","lvl2":"Grading Rubric"},"type":"lvl4","url":"/project-submission-guide#core-implementation-40-points","position":34},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"Core Implementation (40 points)","lvl3":"Detailed Rubric","lvl2":"Grading Rubric"},"content":"Excellent (36-40): All requirements met, code runs without errors, produces correct results, handles edge cases\n\nGood (32-35): Most requirements met, minor bugs, generally correct results\n\nSatisfactory (28-31): Core functionality works, some requirements missing, several bugs\n\nNeeds Improvement (0-27): Major functionality missing, significant bugs, incorrect results","type":"content","url":"/project-submission-guide#core-implementation-40-points","position":35},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"Mandatory Extensions (30 points)","lvl3":"Detailed Rubric","lvl2":"Grading Rubric"},"type":"lvl4","url":"/project-submission-guide#mandatory-extensions-30-points","position":36},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"Mandatory Extensions (30 points)","lvl3":"Detailed Rubric","lvl2":"Grading Rubric"},"content":"Excellent (27-30): All extensions complete, creative implementation, goes beyond minimum\n\nGood (24-26): All extensions complete, solid implementation\n\nSatisfactory (21-23): Most extensions complete, basic implementation\n\nNeeds Improvement (0-20): Extensions missing or non-functional","type":"content","url":"/project-submission-guide#mandatory-extensions-30-points","position":37},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"Code Quality (15 points)","lvl3":"Detailed Rubric","lvl2":"Grading Rubric"},"type":"lvl4","url":"/project-submission-guide#code-quality-15-points","position":38},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"Code Quality (15 points)","lvl3":"Detailed Rubric","lvl2":"Grading Rubric"},"content":"Structure (5 pts): Modular design, appropriate file organization\n\nDocumentation (5 pts): Clear docstrings, helpful comments, complete README\n\nStyle (5 pts): Consistent formatting, meaningful names, follows Python conventions","type":"content","url":"/project-submission-guide#code-quality-15-points","position":39},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"Project Memo (15 points)","lvl3":"Detailed Rubric","lvl2":"Grading Rubric"},"type":"lvl4","url":"/project-submission-guide#project-memo-15-points","position":40},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl4":"Project Memo (15 points)","lvl3":"Detailed Rubric","lvl2":"Grading Rubric"},"content":"Analysis (7 pts): Demonstrates understanding, interprets results correctly\n\nReflection (4 pts): Thoughtful discussion of challenges and learning\n\nPresentation (4 pts): Clear writing, effective visualizations, proper formatting","type":"content","url":"/project-submission-guide#project-memo-15-points","position":41},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Mandatory Extensions"},"type":"lvl2","url":"/project-submission-guide#mandatory-extensions","position":42},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Mandatory Extensions"},"content":"Each project includes required extensions that push you beyond the base implementation. These are NOT optional and constitute 30% of your project grade.","type":"content","url":"/project-submission-guide#mandatory-extensions","position":43},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Types of Extensions","lvl2":"Mandatory Extensions"},"type":"lvl3","url":"/project-submission-guide#types-of-extensions","position":44},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Types of Extensions","lvl2":"Mandatory Extensions"},"content":"Performance Extensions:\n\nOptimize algorithms for speed (vectorization, better algorithms)\n\nMemory optimization for large-scale problems\n\nParallel processing implementation\n\nScientific Extensions:\n\nParameter studies and sensitivity analysis\n\nComparison with analytical solutions where available\n\nError analysis and convergence studies\n\nMethodological Extensions:\n\nImplement alternative algorithms and compare\n\nAdd adaptive methods (timestep, resolution, etc.)\n\nExtend to more complex physics\n\nVisualization Extensions:\n\nInteractive plots\n\nAnimations of time evolution\n\n3D visualizations where appropriate\n\nSpecific extensions for each project will be detailed in the individual project assignments.","type":"content","url":"/project-submission-guide#types-of-extensions","position":45},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Common Issues & Solutions"},"type":"lvl2","url":"/project-submission-guide#common-issues-solutions","position":46},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Common Issues & Solutions"},"content":"","type":"content","url":"/project-submission-guide#common-issues-solutions","position":47},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Git/GitHub Issues","lvl2":"Common Issues & Solutions"},"type":"lvl3","url":"/project-submission-guide#git-github-issues","position":48},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Git/GitHub Issues","lvl2":"Common Issues & Solutions"},"content":"Problem: ‚ÄúI accidentally committed large files‚Äùgit rm --cached large_file.dat\ngit commit -m \"Remove large file\"\ngit push\n\nProblem: ‚ÄúI forgot to commit regularly‚Äù\n\nStart committing now! Better late than never\n\nBreak your current code into logical pieces and commit each\n\nProblem: ‚ÄúI want to undo my last commit‚Äùgit reset --soft HEAD~1  # Keeps changes\ngit reset --hard HEAD~1  # Discards changes (careful!)","type":"content","url":"/project-submission-guide#git-github-issues","position":49},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Python Issues","lvl2":"Common Issues & Solutions"},"type":"lvl3","url":"/project-submission-guide#python-issues","position":50},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl3":"Python Issues","lvl2":"Common Issues & Solutions"},"content":"Problem: ‚ÄúImportError: No module named...‚Äù\n\nCheck your virtual environment is activated\n\nVerify package is in requirements.txt\n\nInstall with: pip install package_name\n\nProblem: ‚ÄúMy code is slow‚Äù\n\nProfile first: python -m cProfile -s time your_script.py\n\nVectorize NumPy operations\n\nAvoid loops where possible\n\nConsider numba for critical sections\n\nProblem: ‚ÄúMemory error with large arrays‚Äù\n\nUse generators instead of lists where possible\n\nProcess data in chunks\n\nUse np.float32 instead of np.float64 if precision allows","type":"content","url":"/project-submission-guide#python-issues","position":51},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Submission Checklist"},"type":"lvl2","url":"/project-submission-guide#submission-checklist","position":52},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Submission Checklist"},"content":"Before submitting, verify:\n\nCode runs without errors on a clean environment\n\nAll required files are present and properly named\n\nREADME includes clear installation and usage instructions\n\nAt least 5 meaningful commits in Git history\n\nProject memo includes all required sections\n\nAll plots are generated and saved in outputs/figures/\n\nMandatory extensions are complete and documented\n\nCode follows style guidelines (no IDE AI assistance used)\n\nFinal push completed before Monday 11:59 PM deadline","type":"content","url":"/project-submission-guide#submission-checklist","position":53},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Late Policy Reminder"},"type":"lvl2","url":"/project-submission-guide#late-policy-reminder","position":54},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Late Policy Reminder"},"content":"One no-questions-asked 2-day extension per semester\n\nMust be requested at least 24 hours before deadline\n\n10% penalty per day after grace period\n\nSubmit early if complete‚Äîno bonus, but peace of mind!","type":"content","url":"/project-submission-guide#late-policy-reminder","position":55},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Getting Help"},"type":"lvl2","url":"/project-submission-guide#getting-help","position":56},{"hierarchy":{"lvl1":"ASTR 596: Project Submission Guide","lvl2":"Getting Help"},"content":"When to seek help:\n\nAfter 20-30 minutes of genuine effort on a bug\n\nWhen you don‚Äôt understand the physics/math despite reading\n\nIf you‚Äôre unsure about project requirements\n\nHow to ask for help effectively:\n\nDescribe what you‚Äôre trying to do\n\nShow what you‚Äôve tried (code snippets, error messages)\n\nExplain what you expected vs. what happened\n\nInclude minimal reproducible example if possible\n\nResources:\n\nCourse Slack (fastest response)\n\nOffice hours (for complex issues)\n\nPair programming sessions (learn from peers)\n\nAI tutors (for concepts, not code generation)\n\nRemember: Struggling is part of learning. But struggling alone for too long is inefficient. Ask for help!","type":"content","url":"/project-submission-guide#getting-help","position":57},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics"},"type":"lvl1","url":"/project1-description","position":0},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics"},"content":"Duration: 3 weeks\nWeight: 12% of course grade\nTheme: ‚ÄúFrom Observations to Blackbody Physics‚Äù","type":"content","url":"/project1-description","position":1},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Project Overview"},"type":"lvl3","url":"/project1-description#project-overview","position":2},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Project Overview"},"content":"This project establishes the computational and theoretical foundations for the entire course. You will develop essential Python programming skills, implement numerical analysis methods from scratch, and apply them to fundamental stellar physics problems. By the end, you‚Äôll have a complete toolkit for stellar analysis that will be used throughout subsequent projects.","type":"content","url":"/project1-description#project-overview","position":3},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Learning Objectives"},"type":"lvl3","url":"/project1-description#learning-objectives","position":4},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Learning Objectives"},"content":"By completing this project, you will:\n\nMaster Python fundamentals: Functions, classes, data structures, and scientific computing libraries\n\nImplement numerical methods: Integration techniques and root-finding algorithms\n\nUnderstand stellar physics: Blackbody radiation, Wien‚Äôs law, and stellar classification\n\nDevelop professional practices: Version control, testing, documentation, and code organization\n\nBuild modular software: Create reusable components for astrophysical calculations","type":"content","url":"/project1-description#learning-objectives","position":5},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"type":"lvl2","url":"/project1-description#week-1-development-environment-and-stellar-data-analysis","position":6},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"content":"","type":"content","url":"/project1-description#week-1-development-environment-and-stellar-data-analysis","position":7},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Conceptual Introduction (30 min)","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"type":"lvl3","url":"/project1-description#conceptual-introduction-30-min","position":8},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Conceptual Introduction (30 min)","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"content":"Course overview and computational astrophysics in modern research\n\nSoftware development workflow: Git, GitHub, and collaborative coding\n\nPython ecosystem for astronomy: NumPy, Matplotlib, Pandas, Astropy\n\nIntroduction to stellar observations and the Hertzsprung-Russell diagram","type":"content","url":"/project1-description#conceptual-introduction-30-min","position":9},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Lab Session Objectives","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"type":"lvl3","url":"/project1-description#lab-session-objectives","position":10},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Lab Session Objectives","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"content":"Set up professional development environment and begin astronomical data analysis.","type":"content","url":"/project1-description#lab-session-objectives","position":11},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 1: Environment Setup (30 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"type":"lvl4","url":"/project1-description#task-1-environment-setup-30-min","position":12},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 1: Environment Setup (30 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"content":"Goal: Establish reproducible computational environment\n\nInstructions:\n\nInstall Miniconda/Anaconda\n\nDownload from official site\n\nCreate course-specific environment: conda create -n astr596 python=3.11\n\nInstall essential packages: numpy matplotlib pandas jupyter astropy\n\nGit and GitHub Setup\n\nCreate GitHub account if needed\n\nConfigure Git with your name and email\n\nFork the course repository template\n\nClone your fork locally: git clone <your-repo-url>\n\nIDE Configuration\n\nInstall VS Code or preferred editor\n\nConfigure Python interpreter to use conda environment\n\nInstall useful extensions: Python, Jupyter, GitLens\n\nDeliverable: Screenshot of successful environment test","type":"content","url":"/project1-description#task-1-environment-setup-30-min","position":13},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 2: Python Fundamentals Review (60 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"type":"lvl4","url":"/project1-description#task-2-python-fundamentals-review-60-min","position":14},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 2: Python Fundamentals Review (60 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"content":"Goal: Refresh/establish core Python programming skills\n\nCore Concepts to Implement:# Data types and operations\ndef basic_arithmetic_operations():\n    \"\"\"Practice with numbers, strings, lists, dictionaries.\"\"\"\n    \n# Control structures\ndef stellar_magnitude_classifier(magnitude):\n    \"\"\"Classify stars by brightness using if/elif/else.\"\"\"\n    \n# File I/O\ndef load_stellar_catalog(filename):\n    \"\"\"Read CSV data using both built-in and pandas methods.\"\"\"\n    \n# List comprehensions and basic algorithms\ndef filter_stars_by_criteria(catalog, min_magnitude, max_magnitude):\n    \"\"\"Filter stellar data using comprehensions and boolean indexing.\"\"\"\n\nPractice Dataset: Hipparcos catalog subset (provided)\n\nValidation: Compare your results with provided reference outputs","type":"content","url":"/project1-description#task-2-python-fundamentals-review-60-min","position":15},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 3: First Astronomical Analysis (40 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"type":"lvl4","url":"/project1-description#task-3-first-astronomical-analysis-40-min","position":16},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 3: First Astronomical Analysis (40 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: Development Environment and Stellar Data Analysis"},"content":"Goal: Apply Python skills to real astronomical data\n\nImplementation Requirements:import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\ndef load_hipparcos_data(filename):\n    \"\"\"Load and clean Hipparcos stellar catalog.\"\"\"\n    # Handle missing data and outliers\n    # Convert magnitude and color data to proper types\n    # Calculate distances from parallax measurements\n    \ndef basic_stellar_statistics(catalog):\n    \"\"\"Calculate fundamental statistics of stellar sample.\"\"\"\n    # Mean, median, standard deviation of key parameters\n    # Magnitude distributions\n    # Color distributions\n    \ndef create_color_magnitude_diagram(catalog):\n    \"\"\"Generate first HR diagram.\"\"\"\n    # Plot B-V color vs absolute magnitude\n    # Add proper axis labels and title\n    # Include error bars where appropriate\n\nAnalysis Questions:\n\nWhat is the range of stellar magnitudes in the sample?\n\nHow many stars have reliable parallax measurements?\n\nWhat patterns do you observe in the color-magnitude diagram?\n\nWeek 1 Deliverable: Jupyter notebook with environment setup, Python exercises, and basic stellar analysis","type":"content","url":"/project1-description#task-3-first-astronomical-analysis-40-min","position":17},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"type":"lvl2","url":"/project1-description#week-2-numerical-integration-and-blackbody-physics","position":18},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"content":"","type":"content","url":"/project1-description#week-2-numerical-integration-and-blackbody-physics","position":19},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Conceptual Introduction (25 min)","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"type":"lvl3","url":"/project1-description#conceptual-introduction-25-min","position":20},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Conceptual Introduction (25 min)","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"content":"Blackbody radiation and the Planck function\n\nStefan-Boltzmann law and Wien‚Äôs displacement law\n\nNumerical integration: why and when we need it\n\nTrapezoidal rule, Simpson‚Äôs rule, and Gaussian quadrature","type":"content","url":"/project1-description#conceptual-introduction-25-min","position":21},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Lab Session Objectives","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"type":"lvl3","url":"/project1-description#lab-session-objectives-1","position":22},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Lab Session Objectives","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"content":"Implement numerical integration methods and apply them to stellar radiation calculations.","type":"content","url":"/project1-description#lab-session-objectives-1","position":23},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 1: Numerical Integration Library (45 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"type":"lvl4","url":"/project1-description#task-1-numerical-integration-library-45-min","position":24},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 1: Numerical Integration Library (45 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"content":"Goal: Build integration toolkit from first principles\n\nRequired Implementations:import numpy as np\n\ndef trapezoid_rule(func, a, b, n_points):\n    \"\"\"\n    Implement trapezoidal rule integration.\n    \n    Parameters:\n    -----------\n    func : callable\n        Function to integrate\n    a, b : float\n        Integration limits\n    n_points : int\n        Number of grid points\n        \n    Returns:\n    --------\n    integral : float\n        Numerical approximation of integral\n    \"\"\"\n    # YOUR IMPLEMENTATION HERE\n    # Calculate spacing: h = (b-a)/(n_points-1)\n    # Create grid points\n    # Apply trapezoidal rule formula\n    \ndef simpson_rule(func, a, b, n_points):\n    \"\"\"\n    Implement Simpson's rule (requires odd number of points).\n    More accurate than trapezoidal rule for smooth functions.\n    \"\"\"\n    # YOUR IMPLEMENTATION HERE\n    # Ensure n_points is odd\n    # Apply Simpson's 1/3 rule\n    \ndef gaussian_quadrature(func, a, b, n_points):\n    \"\"\"\n    Implement Gaussian quadrature for high accuracy.\n    Use numpy.polynomial.legendre.leggauss for weights and nodes.\n    \"\"\"\n    # YOUR IMPLEMENTATION HERE\n    # Transform from [-1,1] to [a,b]\n    # Apply Gaussian quadrature formula\n\nValidation Tests:\n\nTest on functions with known integrals: x¬≤, sin(x), exp(x)\n\nCompare accuracy vs computational cost\n\nPlot convergence as function of n_points","type":"content","url":"/project1-description#task-1-numerical-integration-library-45-min","position":25},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 2: Blackbody Radiation Functions (60 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"type":"lvl4","url":"/project1-description#task-2-blackbody-radiation-functions-60-min","position":26},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 2: Blackbody Radiation Functions (60 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"content":"Goal: Implement Planck function and related stellar physics\n\nCore Physics Implementation:# Physical constants (use astropy.constants for precision)\nh = 6.626e-34      # Planck constant [J‚ãÖs]\nc = 2.998e8        # Speed of light [m/s]\nk_B = 1.381e-23    # Boltzmann constant [J/K]\nsigma_SB = 5.67e-8 # Stefan-Boltzmann constant [W/m¬≤/K‚Å¥]\n\ndef planck_function_frequency(nu, T):\n    \"\"\"\n    Planck function B_ŒΩ(T) in frequency units.\n    \n    Parameters:\n    -----------\n    nu : float or array\n        Frequency [Hz]\n    T : float\n        Temperature [K]\n        \n    Returns:\n    --------\n    B_nu : float or array\n        Spectral radiance [W/m¬≤/Hz/sr]\n    \"\"\"\n    # B_ŒΩ(T) = (2hŒΩ¬≥/c¬≤) √ó 1/(exp(hŒΩ/kT) - 1)\n    # Handle numerical issues for small and large arguments\n    \ndef planck_function_wavelength(wavelength, T):\n    \"\"\"\n    Planck function B_Œª(T) in wavelength units.\n    \n    Note: B_Œª dŒª = B_ŒΩ dŒΩ, so B_Œª = B_ŒΩ √ó (dŒΩ/dŒª) = B_ŒΩ √ó (c/Œª¬≤)\n    \"\"\"\n    # Convert wavelength to frequency and apply conversion\n    \ndef stellar_luminosity_integral(T_eff, R_star):\n    \"\"\"\n    Calculate stellar luminosity by integrating Planck function.\n    \n    L = 4œÄR¬≤ ‚à´ œÄ B_ŒΩ(T) dŒΩ = 4œÄR¬≤ œÉT‚Å¥\n    \n    Verify Stefan-Boltzmann law numerically.\n    \"\"\"\n    # Integrate Planck function over all frequencies\n    # Compare with analytical Stefan-Boltzmann result\n    # Calculate relative error\n\nStellar Applications:def frequency_integrated_intensity(T_eff, nu_min, nu_max):\n    \"\"\"\n    Integrate Planck function over frequency range.\n    Critical for radiation pressure calculations in Project 3.\n    \"\"\"\n    \ndef stellar_flux_at_distance(L_star, distance):\n    \"\"\"\n    Calculate observed flux: F = L/(4œÄd¬≤)\n    \"\"\"\n    \ndef main_sequence_relations():\n    \"\"\"\n    Implement empirical mass-luminosity and mass-temperature relations.\n    L ‚àù M¬≥‚ãÖ‚Åµ for M > 1 M‚òâ\n    T_eff ‚àù M‚Å∞‚ãÖ‚Åµ for main sequence stars\n    \"\"\"","type":"content","url":"/project1-description#task-2-blackbody-radiation-functions-60-min","position":27},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 3: Integration Method Comparison (30 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"type":"lvl4","url":"/project1-description#task-3-integration-method-comparison-30-min","position":28},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 3: Integration Method Comparison (30 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Numerical Integration and Blackbody Physics"},"content":"Goal: Understand computational trade-offs in numerical methods\n\nAnalysis Requirements:\n\nAccuracy Study: For each integration method, plot error vs n_points\n\nPerformance Study: Time each method for various n_points\n\nFunction Sensitivity: How do methods perform on oscillatory vs smooth functions?\n\nTest Functions:\n\nSmooth: Planck function at various temperatures\n\nOscillatory: Wien displacement law integral\n\nSharp features: Planck function at low temperatures\n\nWeek 2 Deliverable: Integration library with comprehensive testing and stellar luminosity calculations","type":"content","url":"/project1-description#task-3-integration-method-comparison-30-min","position":29},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"type":"lvl2","url":"/project1-description#week-3-root-finding-and-object-oriented-design","position":30},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"content":"","type":"content","url":"/project1-description#week-3-root-finding-and-object-oriented-design","position":31},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Conceptual Introduction (25 min)","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"type":"lvl3","url":"/project1-description#conceptual-introduction-25-min-1","position":32},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Conceptual Introduction (25 min)","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"content":"Root-finding problems in astrophysics\n\nBisection method: guaranteed convergence\n\nNewton-Raphson method: fast convergence with derivatives\n\nSecant method: fast convergence without derivatives\n\nObject-oriented programming: when and why to use classes","type":"content","url":"/project1-description#conceptual-introduction-25-min-1","position":33},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Lab Session Objectives","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"type":"lvl3","url":"/project1-description#lab-session-objectives-2","position":34},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Lab Session Objectives","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"content":"Implement root-finding algorithms and design object-oriented stellar analysis framework.","type":"content","url":"/project1-description#lab-session-objectives-2","position":35},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 1: Root-Finding Algorithm Library (45 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"type":"lvl4","url":"/project1-description#task-1-root-finding-algorithm-library-45-min","position":36},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 1: Root-Finding Algorithm Library (45 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"content":"Goal: Build robust root-finding toolkit\n\nRequired Implementations:def bisection_method(func, a, b, tolerance=1e-6, max_iterations=100):\n    \"\"\"\n    Find root using bisection method.\n    \n    Guaranteed to converge if func(a) and func(b) have opposite signs.\n    Slow but robust.\n    \"\"\"\n    # Check preconditions: func(a) * func(b) < 0\n    # Implement bisection algorithm\n    # Return root, number of iterations, convergence status\n    \ndef newton_raphson(func, func_derivative, x0, tolerance=1e-6, max_iterations=50):\n    \"\"\"\n    Find root using Newton-Raphson method.\n    \n    Fast convergence but requires derivative and good initial guess.\n    \"\"\"\n    # Implement Newton-Raphson: x_{n+1} = x_n - f(x_n)/f'(x_n)\n    # Handle cases where derivative is zero\n    # Return root, number of iterations, convergence status\n    \ndef secant_method(func, x0, x1, tolerance=1e-6, max_iterations=50):\n    \"\"\"\n    Find root using secant method.\n    \n    Fast convergence without requiring derivative.\n    \"\"\"\n    # Implement secant method using finite difference approximation\n    # Handle cases where function values are too close\n    # Return root, number of iterations, convergence status","type":"content","url":"/project1-description#task-1-root-finding-algorithm-library-45-min","position":37},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 2: Wien‚Äôs Law and Stellar Physics Applications (60 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"type":"lvl4","url":"/project1-description#task-2-wiens-law-and-stellar-physics-applications-60-min","position":38},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 2: Wien‚Äôs Law and Stellar Physics Applications (60 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"content":"Goal: Apply root-finding to solve transcendental equations in stellar physics\n\nWien‚Äôs Displacement Law Implementation:def wien_displacement_equation(x):\n    \"\"\"\n    Wien's law equation: 5 - x = 5*exp(-x)\n    where x = hc/(Œª_max * k_B * T)\n    \n    Root occurs at x ‚âà 4.965114\n    \"\"\"\n    return 5 - x - 5*np.exp(-x)\n\ndef wien_displacement_derivative(x):\n    \"\"\"Analytical derivative for Newton-Raphson method.\"\"\"\n    return -1 + 5*np.exp(-x)\n\ndef find_peak_wavelength(temperature):\n    \"\"\"\n    Find wavelength of peak emission for given temperature.\n    \n    Uses root-finding to solve Wien's displacement law.\n    \"\"\"\n    # Solve Wien equation for x\n    # Convert to wavelength: Œª_max = hc/(x * k_B * T)\n    # Validate with Wien's constant: Œª_max * T = 2.898e-3 m‚ãÖK\n    \ndef temperature_from_color_index(color_bv, color_system='Johnson'):\n    \"\"\"\n    Invert empirical color-temperature relations using root-finding.\n    \n    Example relation: log(T_eff) = 3.979 - 0.654*log(B-V + 1.334)\n    \"\"\"\n    # Define equation to solve: observed_color - predicted_color(T) = 0\n    # Use appropriate root-finding method\n    # Handle edge cases and invalid inputs","type":"content","url":"/project1-description#task-2-wiens-law-and-stellar-physics-applications-60-min","position":39},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 3: Object-Oriented Stellar Analysis Framework (30 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"type":"lvl4","url":"/project1-description#task-3-object-oriented-stellar-analysis-framework-30-min","position":40},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Task 3: Object-Oriented Stellar Analysis Framework (30 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Root-Finding and Object-Oriented Design"},"content":"Goal: Design clean, extensible code architecture\n\nClass Design:class Star:\n    \"\"\"\n    Represents individual star with physical and observational properties.\n    \"\"\"\n    \n    def __init__(self, name=None, mass=None, temperature=None, radius=None, \n                 magnitude_v=None, color_bv=None, parallax=None):\n        \"\"\"Initialize star with observational or theoretical data.\"\"\"\n        self.name = name\n        self.mass = mass  # Solar masses\n        self.temperature = temperature  # Kelvin\n        self.radius = radius  # Solar radii\n        self.magnitude_v = magnitude_v  # Apparent V magnitude\n        self.color_bv = color_bv  # B-V color index\n        self.parallax = parallax  # arcseconds\n        \n    def distance(self):\n        \"\"\"Calculate distance from parallax [pc].\"\"\"\n        if self.parallax is None or self.parallax <= 0:\n            return None\n        return 1.0 / self.parallax\n    \n    def absolute_magnitude(self):\n        \"\"\"Calculate absolute magnitude.\"\"\"\n        d = self.distance()\n        if d is None or self.magnitude_v is None:\n            return None\n        return self.magnitude_v - 5*np.log10(d/10)\n    \n    def luminosity(self):\n        \"\"\"Calculate luminosity using Stefan-Boltzmann law.\"\"\"\n        if self.temperature is None or self.radius is None:\n            return None\n        return 4*np.pi*(self.radius*R_sun)**2 * sigma_SB * self.temperature**4\n    \n    def estimate_temperature_from_color(self):\n        \"\"\"Estimate temperature from B-V color using root-finding.\"\"\"\n        if self.color_bv is None:\n            return None\n        return temperature_from_color_index(self.color_bv)\n    \n    def stellar_type(self):\n        \"\"\"Classify star based on temperature or color.\"\"\"\n        # Implement spectral classification (O, B, A, F, G, K, M)\n        \n    def radiation_pressure_luminosity(self):\n        \"\"\"\n        Calculate luminosity for radiation pressure calculations.\n        This method will be used in Project 3.\n        \"\"\"\n        return self.luminosity()\n\nclass StellarCatalog:\n    \"\"\"\n    Collection of stars with analysis capabilities.\n    \"\"\"\n    \n    def __init__(self, stars=None):\n        \"\"\"Initialize with list of Star objects.\"\"\"\n        self.stars = stars if stars is not None else []\n    \n    @classmethod\n    def from_file(cls, filename):\n        \"\"\"Load catalog from CSV file.\"\"\"\n        # Read data and create Star objects\n        \n    def filter_by_criteria(self, **criteria):\n        \"\"\"Filter stars based on various criteria.\"\"\"\n        # magnitude_range, color_range, distance_range, etc.\n        \n    def create_hr_diagram(self, save_path=None):\n        \"\"\"\n        Generate publication-quality HR diagram.\n        \"\"\"\n        # Plot absolute magnitude vs color or temperature\n        # Add theoretical main sequence track\n        # Include stellar classification regions\n        \n    def statistical_summary(self):\n        \"\"\"Generate comprehensive statistical analysis.\"\"\"\n        # Distributions of key parameters\n        # Correlations between observables\n\nWeek 3 Deliverable: Complete stellar analysis package with object-oriented design, root-finding applications, and advanced HR diagram analysis","type":"content","url":"/project1-description#task-3-object-oriented-stellar-analysis-framework-30-min","position":41},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl2":"Assessment and Grading"},"type":"lvl2","url":"/project1-description#assessment-and-grading","position":42},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl2":"Assessment and Grading"},"content":"","type":"content","url":"/project1-description#assessment-and-grading","position":43},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Grading Breakdown","lvl2":"Assessment and Grading"},"type":"lvl3","url":"/project1-description#grading-breakdown","position":44},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Grading Breakdown","lvl2":"Assessment and Grading"},"content":"Week 1: Environment setup and Python fundamentals (30%)\n\nWeek 2: Numerical integration and blackbody physics (35%)\n\nWeek 3: Root-finding and OOP implementation (35%)","type":"content","url":"/project1-description#grading-breakdown","position":45},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"type":"lvl3","url":"/project1-description#evaluation-criteria","position":46},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"content":"","type":"content","url":"/project1-description#evaluation-criteria","position":47},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Technical Implementation (60%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"type":"lvl4","url":"/project1-description#technical-implementation-60","position":48},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Technical Implementation (60%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"content":"Correctness: Do algorithms produce accurate results?\n\nEfficiency: Are implementations reasonably optimized?\n\nRobustness: Does code handle edge cases and errors gracefully?\n\nTesting: Are functions validated against known results?","type":"content","url":"/project1-description#technical-implementation-60","position":49},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Code Quality (25%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"type":"lvl4","url":"/project1-description#code-quality-25","position":50},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Code Quality (25%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"content":"Documentation: Clear docstrings and comments\n\nOrganization: Logical file structure and function design\n\nStyle: Follows Python conventions (PEP 8)\n\nVersion Control: Meaningful commit messages and regular commits","type":"content","url":"/project1-description#code-quality-25","position":51},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Scientific Understanding (15%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"type":"lvl4","url":"/project1-description#scientific-understanding-15","position":52},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Scientific Understanding (15%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"content":"Physics: Correct implementation of stellar physics\n\nValidation: Appropriate comparison with analytical results\n\nInterpretation: Understanding of numerical method trade-offs","type":"content","url":"/project1-description#scientific-understanding-15","position":53},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Deliverables","lvl2":"Assessment and Grading"},"type":"lvl3","url":"/project1-description#deliverables","position":54},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Deliverables","lvl2":"Assessment and Grading"},"content":"","type":"content","url":"/project1-description#deliverables","position":55},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Final Submission Requirements","lvl3":"Deliverables","lvl2":"Assessment and Grading"},"type":"lvl4","url":"/project1-description#final-submission-requirements","position":56},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl4":"Final Submission Requirements","lvl3":"Deliverables","lvl2":"Assessment and Grading"},"content":"Complete Python Package:\n\nstellar_physics.py: Blackbody and stellar property functions\n\nnumerical_methods.py: Integration and root-finding algorithms\n\nstellar_analysis.py: Star and StellarCatalog classes\n\ntests/: Comprehensive test suite\n\nREADME.md: Installation and usage instructions\n\nAnalysis Notebooks:\n\nweek1_python_fundamentals.ipynb: Environment setup and basic analysis\n\nweek2_numerical_integration.ipynb: Integration methods and stellar applications\n\nweek3_stellar_classification.ipynb: Advanced HR diagram analysis\n\nValidation Report: Document comparing your results with literature values","type":"content","url":"/project1-description#final-submission-requirements","position":57},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Connection to Future Projects","lvl2":"Assessment and Grading"},"type":"lvl3","url":"/project1-description#connection-to-future-projects","position":58},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Connection to Future Projects","lvl2":"Assessment and Grading"},"content":"This project establishes foundations used throughout the course:\n\nProject 2: Stellar mass-luminosity relations for realistic N-body clusters\n\nProject 3: Blackbody stellar spectra for radiation heating calculations\n\nProject 4: Numerical integration techniques translated to JAX\n\nFinal Project: Object-oriented design principles for research-grade software","type":"content","url":"/project1-description#connection-to-future-projects","position":59},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Getting Help","lvl2":"Assessment and Grading"},"type":"lvl3","url":"/project1-description#getting-help","position":60},{"hierarchy":{"lvl1":"ASTR 596 Project 1: Python Fundamentals + Numerical Analysis + Stellar Physics","lvl3":"Getting Help","lvl2":"Assessment and Grading"},"content":"Office Hours: Use for conceptual questions and debugging assistance\n\nPair Programming: Collaborate during lab sessions but submit individual work\n\nDiscussion Forum: Share general questions and solutions to common issues\n\nOnline Resources: Python documentation, NumPy tutorials, Astropy guides\n\nThis project sets the stage for sophisticated computational astrophysics while ensuring students master fundamental programming and numerical analysis skills.","type":"content","url":"/project1-description#getting-help","position":61},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems"},"type":"lvl1","url":"/project2-description","position":0},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems"},"content":"Duration: 3 weeks\nWeight: 15% of course grade\nTheme: ‚ÄúRealistic Stellar Clusters with Gravitational Dynamics‚Äù","type":"content","url":"/project2-description","position":1},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Project Overview"},"type":"lvl3","url":"/project2-description#project-overview","position":2},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Project Overview"},"content":"This project builds sophisticated N-body gravitational dynamics simulations with realistic stellar populations. You will implement multiple ODE integration schemes, master statistical sampling from astrophysical distributions, and create evolving stellar clusters that serve as input for radiation calculations in Project 3. The emphasis is on vectorization, performance optimization, and adaptive numerical methods.","type":"content","url":"/project2-description#project-overview","position":3},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Learning Objectives"},"type":"lvl3","url":"/project2-description#learning-objectives","position":4},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Learning Objectives"},"content":"By completing this project, you will:\n\nMaster ODE integration: Implement and compare multiple numerical integration schemes\n\nUnderstand gravitational dynamics: N-body physics, energy conservation, and cluster evolution\n\nLearn statistical sampling: Sample from Initial Mass Function and spatial distributions\n\nDevelop vectorization skills: Efficient NumPy operations for computational performance\n\nImplement adaptive methods: Energy-controlled timestep adjustment\n\nGenerate realistic astrophysical data: Stellar clusters for radiation modeling","type":"content","url":"/project2-description#learning-objectives","position":5},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Prerequisites from Project 1"},"type":"lvl3","url":"/project2-description#prerequisites-from-project-1","position":6},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Prerequisites from Project 1"},"content":"Numerical integration techniques (trapezoid, Simpson‚Äôs, Gaussian quadrature)\n\nRoot-finding methods (Newton-Raphson for energy balance)\n\nObject-oriented programming (Star class design)\n\nBlackbody physics and stellar luminosity calculations","type":"content","url":"/project2-description#prerequisites-from-project-1","position":7},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"type":"lvl2","url":"/project2-description#week-1-ode-solvers-and-energy-conservation","position":8},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"content":"","type":"content","url":"/project2-description#week-1-ode-solvers-and-energy-conservation","position":9},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Conceptual Introduction (25 min)","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"type":"lvl3","url":"/project2-description#conceptual-introduction-25-min","position":10},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Conceptual Introduction (25 min)","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"content":"Newton‚Äôs laws and gravitational force in astrophysical contexts\n\nConverting 2nd order ODEs to 1st order systems\n\nIntegration methods: explicit vs implicit, stability vs accuracy\n\nSymplectic integrators for Hamiltonian systems\n\nEnergy and angular momentum conservation in gravitational systems","type":"content","url":"/project2-description#conceptual-introduction-25-min","position":11},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Lab Session Objectives","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"type":"lvl3","url":"/project2-description#lab-session-objectives","position":12},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Lab Session Objectives","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"content":"Build comprehensive ODE solver library and validate on two-body dynamics.","type":"content","url":"/project2-description#lab-session-objectives","position":13},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 1: ODE Solver Framework (45 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"type":"lvl4","url":"/project2-description#task-1-ode-solver-framework-45-min","position":14},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 1: ODE Solver Framework (45 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"content":"Goal: Create abstract base class and implement multiple integration methods\n\nFramework Design:from abc import ABC, abstractmethod\nimport numpy as np\n\nclass ODESolver(ABC):\n    \"\"\"\n    Abstract base class for ODE integration methods.\n    \n    Solves system: dy/dt = f(t, y) where y can be vector-valued\n    \"\"\"\n    \n    def __init__(self, derivatives_func, initial_conditions, initial_time=0.0):\n        \"\"\"\n        Parameters:\n        -----------\n        derivatives_func : callable\n            Function f(t, y) returning dy/dt\n        initial_conditions : array_like\n            Initial values y(t0)\n        initial_time : float\n            Initial time t0\n        \"\"\"\n        self.f = derivatives_func\n        self.y = np.array(initial_conditions, dtype=float)\n        self.t = initial_time\n        self.history = {'t': [initial_time], 'y': [self.y.copy()]}\n    \n    @abstractmethod\n    def step(self, dt):\n        \"\"\"Take single integration step of size dt.\"\"\"\n        pass\n    \n    def evolve(self, t_final, dt):\n        \"\"\"Evolve system from current time to t_final.\"\"\"\n        while self.t < t_final:\n            step_size = min(dt, t_final - self.t)\n            self.step(step_size)\n            self.history['t'].append(self.t)\n            self.history['y'].append(self.y.copy())\n        return np.array(self.history['t']), np.array(self.history['y'])\n\nclass EulerSolver(ODESolver):\n    \"\"\"First-order Euler method: y_{n+1} = y_n + dt * f(t_n, y_n)\"\"\"\n    \n    def step(self, dt):\n        \"\"\"Implement Euler step.\"\"\"\n        dydt = self.f(self.t, self.y)\n        self.y += dt * dydt\n        self.t += dt\n\nclass RungeKutta4Solver(ODESolver):\n    \"\"\"Fourth-order Runge-Kutta method.\"\"\"\n    \n    def step(self, dt):\n        \"\"\"Implement RK4 step with four evaluations.\"\"\"\n        k1 = self.f(self.t, self.y)\n        k2 = self.f(self.t + dt/2, self.y + dt*k1/2)\n        k3 = self.f(self.t + dt/2, self.y + dt*k2/2)\n        k4 = self.f(self.t + dt, self.y + dt*k3)\n        \n        self.y += dt * (k1 + 2*k2 + 2*k3 + k4) / 6\n        self.t += dt\n\nclass LeapfrogSolver(ODESolver):\n    \"\"\"\n    Leapfrog integrator for Hamiltonian systems.\n    Particularly good for gravitational dynamics.\n    \"\"\"\n    \n    def __init__(self, force_func, positions, velocities, masses, initial_time=0.0):\n        \"\"\"\n        Specialized for N-body problems.\n        \n        Parameters:\n        -----------\n        force_func : callable\n            Function returning accelerations given (positions, masses)\n        positions : array\n            Initial positions [N, 3]\n        velocities : array  \n            Initial velocities [N, 3]\n        masses : array\n            Particle masses [N]\n        \"\"\"\n        self.force_func = force_func\n        self.positions = np.array(positions)\n        self.velocities = np.array(velocities)\n        self.masses = np.array(masses)\n        self.t = initial_time\n        self.history = {\n            't': [initial_time],\n            'positions': [self.positions.copy()],\n            'velocities': [self.velocities.copy()]\n        }\n    \n    def step(self, dt):\n        \"\"\"Leapfrog integration step.\"\"\"\n        # Kick: v_{1/2} = v_0 + (dt/2) * a_0\n        accelerations = self.force_func(self.positions, self.masses)\n        self.velocities += 0.5 * dt * accelerations\n        \n        # Drift: x_1 = x_0 + dt * v_{1/2}\n        self.positions += dt * self.velocities\n        \n        # Kick: v_1 = v_{1/2} + (dt/2) * a_1\n        accelerations = self.force_func(self.positions, self.masses)\n        self.velocities += 0.5 * dt * accelerations\n        \n        self.t += dt\n        self.history['t'].append(self.t)\n        self.history['positions'].append(self.positions.copy())\n        self.history['velocities'].append(self.velocities.copy())","type":"content","url":"/project2-description#task-1-ode-solver-framework-45-min","position":15},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 2: Two-Body Gravitational Dynamics (60 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"type":"lvl4","url":"/project2-description#task-2-two-body-gravitational-dynamics-60-min","position":16},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 2: Two-Body Gravitational Dynamics (60 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"content":"Goal: Validate integrators on Kepler problem with known analytical solution\n\nImplementation Requirements:def gravitational_derivatives(t, state):\n    \"\"\"\n    Derivatives for two-body problem.\n    \n    state = [x1, y1, z1, vx1, vy1, vz1, x2, y2, z2, vx2, vy2, vz2]\n    \"\"\"\n    # Extract positions and velocities\n    pos1 = state[0:3]\n    vel1 = state[3:6]\n    pos2 = state[6:9]\n    vel2 = state[9:12]\n    \n    # Calculate separation and force\n    r_vec = pos2 - pos1\n    r_mag = np.linalg.norm(r_vec)\n    \n    # Gravitational acceleration\n    G = 6.674e-11  # m¬≥/kg/s¬≤\n    m1, m2 = 1.0, 1.0  # masses\n    \n    acc_magnitude = G * (m1 + m2) / r_mag**3\n    acc1 = acc_magnitude * r_vec\n    acc2 = -acc_magnitude * r_vec\n    \n    # Return derivatives: [vel1, acc1, vel2, acc2]\n    return np.concatenate([vel1, acc1, vel2, acc2])\n\ndef kepler_orbit_validation():\n    \"\"\"\n    Test integrators on Earth-Sun system.\n    Compare with analytical solution for energy and angular momentum.\n    \"\"\"\n    # Earth-Sun system (simplified units)\n    AU = 1.496e11  # m\n    year = 365.25 * 24 * 3600  # s\n    \n    # Initial conditions: Earth at aphelion\n    initial_state = [\n        1.017*AU, 0, 0,      # Earth position\n        0, 29.29e3, 0,       # Earth velocity\n        0, 0, 0,             # Sun position (at origin)\n        0, 0, 0              # Sun velocity\n    ]\n    \n    # Test each integrator\n    methods = {\n        'Euler': EulerSolver,\n        'RK4': RungeKutta4Solver\n    }\n    \n    results = {}\n    for name, SolverClass in methods.items():\n        solver = SolverClass(gravitational_derivatives, initial_state)\n        t_vals, y_vals = solver.evolve(t_final=year, dt=year/1000)\n        results[name] = {'t': t_vals, 'y': y_vals}\n    \n    return results\n\ndef calculate_orbital_energy(positions, velocities, masses):\n    \"\"\"Calculate total energy: kinetic + potential.\"\"\"\n    # Kinetic energy: (1/2) * m * v¬≤\n    ke = 0.5 * np.sum(masses * np.sum(velocities**2, axis=1))\n    \n    # Potential energy: -G * m1 * m2 / r\n    G = 6.674e-11\n    pe = 0\n    for i in range(len(masses)):\n        for j in range(i+1, len(masses)):\n            r_ij = np.linalg.norm(positions[i] - positions[j])\n            pe -= G * masses[i] * masses[j] / r_ij\n    \n    return ke + pe\n\ndef orbital_validation_analysis(results):\n    \"\"\"\n    Analyze energy conservation and orbital accuracy.\n    Plot energy drift and orbital trajectories.\n    \"\"\"\n    # Calculate energy conservation for each method\n    # Plot trajectories and energy vs time\n    # Compare with analytical orbital period","type":"content","url":"/project2-description#task-2-two-body-gravitational-dynamics-60-min","position":17},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 3: Error Analysis and Method Comparison (30 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"type":"lvl4","url":"/project2-description#task-3-error-analysis-and-method-comparison-30-min","position":18},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 3: Error Analysis and Method Comparison (30 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: ODE Solvers and Energy Conservation"},"content":"Goal: Understand trade-offs between accuracy, stability, and computational cost\n\nAnalysis Requirements:\n\nConvergence Study: Plot error vs timestep for each method\n\nEnergy Conservation: Track relative energy drift over multiple orbits\n\nComputational Cost: Time each method for various timestep sizes\n\nLong-term Stability: Run for 10+ orbital periods\n\nWeek 1 Deliverable: ODE solver library with comprehensive validation on Kepler orbits","type":"content","url":"/project2-description#task-3-error-analysis-and-method-comparison-30-min","position":19},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"type":"lvl2","url":"/project2-description#week-2-statistical-sampling-and-multi-body-systems","position":20},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"content":"","type":"content","url":"/project2-description#week-2-statistical-sampling-and-multi-body-systems","position":21},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Conceptual Introduction (25 min)","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"type":"lvl3","url":"/project2-description#conceptual-introduction-25-min-1","position":22},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Conceptual Introduction (25 min)","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"content":"Stellar Initial Mass Function: Salpeter, Kroupa, Chabrier prescriptions\n\nSpatial distributions in star clusters: Plummer sphere, King profiles\n\nStatistical sampling techniques: inverse transform, rejection sampling\n\nVirial equilibrium and cluster dynamics","type":"content","url":"/project2-description#conceptual-introduction-25-min-1","position":23},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Lab Session Objectives","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"type":"lvl3","url":"/project2-description#lab-session-objectives-1","position":24},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Lab Session Objectives","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"content":"Implement realistic stellar cluster initialization and scale to many-body systems.","type":"content","url":"/project2-description#lab-session-objectives-1","position":25},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 1: Initial Mass Function Implementation (50 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"type":"lvl4","url":"/project2-description#task-1-initial-mass-function-implementation-50-min","position":26},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 1: Initial Mass Function Implementation (50 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"content":"Goal: Sample realistic stellar mass distributions\n\nIMF Theory and Implementation:class StellarIMF:\n    \"\"\"\n    Stellar Initial Mass Function implementation.\n    \n    Supports multiple functional forms used in astrophysics.\n    \"\"\"\n    \n    def __init__(self, imf_type='kroupa', mass_range=(0.08, 120)):\n        \"\"\"\n        Parameters:\n        -----------\n        imf_type : str\n            'salpeter', 'kroupa', or 'chabrier'\n        mass_range : tuple\n            (minimum_mass, maximum_mass) in solar masses\n        \"\"\"\n        self.imf_type = imf_type\n        self.m_min, self.m_max = mass_range\n        self.normalization = self._calculate_normalization()\n    \n    def pdf(self, mass):\n        \"\"\"\n        Probability density function dN/dM.\n        \n        Salpeter (1955): dN/dM ‚àù M^(-2.35)\n        Kroupa (2001): dN/dM ‚àù M^(-1.3) for M < 0.5 M‚òâ\n                               M^(-2.3) for M > 0.5 M‚òâ\n        \"\"\"\n        mass = np.asarray(mass)\n        \n        if self.imf_type == 'salpeter':\n            return mass**(-2.35)\n        \n        elif self.imf_type == 'kroupa':\n            # Broken power law\n            result = np.zeros_like(mass)\n            low_mass = mass < 0.5\n            high_mass = mass >= 0.5\n            \n            result[low_mass] = mass[low_mass]**(-1.3)\n            # Ensure continuity at M = 0.5\n            normalization = 0.5**(-1.3 + 2.3)\n            result[high_mass] = normalization * mass[high_mass]**(-2.3)\n            \n            return result\n        \n        elif self.imf_type == 'chabrier':\n            # Log-normal for low masses + power law for high masses\n            # Implementation left as advanced exercise\n            pass\n    \n    def cdf(self, mass):\n        \"\"\"Cumulative distribution function.\"\"\"\n        # Analytical when possible, numerical integration otherwise\n        if self.imf_type == 'salpeter':\n            # CDF ‚àù M^(-1.35)\n            return (mass**(-1.35) - self.m_min**(-1.35)) / \\\n                   (self.m_max**(-1.35) - self.m_min**(-1.35))\n    \n    def sample_rejection(self, n_stars):\n        \"\"\"Sample using rejection method.\"\"\"\n        masses = []\n        max_pdf = self.pdf(self.m_min)  # Maximum of PDF\n        \n        while len(masses) < n_stars:\n            # Propose random mass in range\n            m_proposal = self.m_min + (self.m_max - self.m_min) * np.random.random()\n            \n            # Accept with probability proportional to PDF\n            if np.random.random() < self.pdf(m_proposal) / max_pdf:\n                masses.append(m_proposal)\n        \n        return np.array(masses)\n    \n    def sample_inverse_transform(self, n_stars):\n        \"\"\"Sample using inverse CDF (when available).\"\"\"\n        if self.imf_type == 'salpeter':\n            u = np.random.random(n_stars)\n            # Invert CDF analytically\n            return (self.m_min**(-1.35) + u * (self.m_max**(-1.35) - self.m_min**(-1.35)))**(-1/1.35)\n        else:\n            # Fall back to rejection sampling\n            return self.sample_rejection(n_stars)\n    \n    def validate_distribution(self, masses, n_bins=50):\n        \"\"\"Compare sampled masses with theoretical IMF.\"\"\"\n        # Create histogram and compare with PDF\n        # Plot and calculate goodness-of-fit statistics\n        pass\n\ndef mass_to_stellar_properties(masses):\n    \"\"\"\n    Convert stellar masses to observable properties.\n    Uses Project 1 stellar physics relationships.\n    \"\"\"\n    # Mass-luminosity relation\n    luminosities = np.where(masses > 1.0, \n                           masses**3.5,  # High mass: L ‚àù M^3.5\n                           masses**4.0)  # Low mass: L ‚àù M^4.0\n    \n    # Mass-temperature relation (main sequence)\n    temperatures = 5778 * (masses)**0.5  # Rough approximation\n    \n    # Mass-radius relation\n    radii = np.where(masses > 1.0,\n                    masses**0.8,   # High mass\n                    masses**0.9)   # Low mass\n    \n    return {\n        'luminosities': luminosities,\n        'temperatures': temperatures,\n        'radii': radii\n    }","type":"content","url":"/project2-description#task-1-initial-mass-function-implementation-50-min","position":27},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 2: Plummer Sphere Spatial Distribution (45 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"type":"lvl4","url":"/project2-description#task-2-plummer-sphere-spatial-distribution-45-min","position":28},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 2: Plummer Sphere Spatial Distribution (45 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"content":"Goal: Sample realistic 3D stellar cluster geometry\n\nPlummer Model Implementation:class PlummerSphere:\n    \"\"\"\n    Plummer sphere model for stellar cluster spatial distribution.\n    \n    Density profile: œÅ(r) = (3M/4œÄa¬≥) * (1 + r¬≤/a¬≤)^(-5/2)\n    where a is the scale radius.\n    \"\"\"\n    \n    def __init__(self, total_mass=1000, scale_radius=1.0):\n        \"\"\"\n        Parameters:\n        -----------\n        total_mass : float\n            Total cluster mass [M‚òâ]\n        scale_radius : float\n            Plummer scale radius [pc]\n        \"\"\"\n        self.M = total_mass\n        self.a = scale_radius\n    \n    def density(self, r):\n        \"\"\"Density at radius r.\"\"\"\n        return (3*self.M/(4*np.pi*self.a**3)) * (1 + (r/self.a)**2)**(-5/2)\n    \n    def mass_enclosed(self, r):\n        \"\"\"Mass within radius r.\"\"\"\n        return self.M * (r/self.a)**3 / (1 + (r/self.a)**2)**(3/2)\n    \n    def sample_radial_positions(self, n_stars):\n        \"\"\"\n        Sample radial distances using inverse CDF method.\n        \n        CDF: M(r)/M_total = (r/a)¬≥ / (1 + (r/a)¬≤)^(3/2)\n        Inverse: r = a / sqrt(u^(-2/3) - 1)\n        \"\"\"\n        u = np.random.random(n_stars)\n        # Prevent u=0 which gives infinite radius\n        u = np.clip(u, 1e-10, 1-1e-10)\n        \n        radii = self.a / np.sqrt(u**(-2/3) - 1)\n        return radii\n    \n    def sample_positions(self, n_stars):\n        \"\"\"Sample 3D positions from Plummer distribution.\"\"\"\n        radii = self.sample_radial_positions(n_stars)\n        \n        # Sample isotropic directions\n        cos_theta = 2*np.random.random(n_stars) - 1  # cos(Œ∏) uniform in [-1,1]\n        phi = 2*np.pi*np.random.random(n_stars)      # œÜ uniform in [0,2œÄ]\n        \n        sin_theta = np.sqrt(1 - cos_theta**2)\n        \n        # Convert to Cartesian coordinates\n        x = radii * sin_theta * np.cos(phi)\n        y = radii * sin_theta * np.sin(phi)\n        z = radii * cos_theta\n        \n        return np.column_stack([x, y, z])\n    \n    def calculate_virial_velocities(self, positions, masses):\n        \"\"\"\n        Calculate velocities for virial equilibrium.\n        \n        Uses virial theorem: 2T + U = 0 for bound system\n        where T = kinetic energy, U = potential energy\n        \"\"\"\n        n_stars = len(masses)\n        velocities = np.zeros_like(positions)\n        \n        # Calculate potential energy\n        U = 0\n        for i in range(n_stars):\n            for j in range(i+1, n_stars):\n                r_ij = np.linalg.norm(positions[i] - positions[j])\n                U -= G * masses[i] * masses[j] / r_ij\n        \n        # Virial theorem: total kinetic energy = -U/2\n        T_total = -U / 2\n        \n        # Distribute kinetic energy among particles\n        # Simple approach: assume isotropic velocity dispersion\n        for i in range(n_stars):\n            # Individual kinetic energy proportional to mass\n            T_i = T_total * masses[i] / np.sum(masses)\n            v_mag = np.sqrt(2 * T_i / masses[i])\n            \n            # Random direction\n            cos_theta = 2*np.random.random() - 1\n            phi = 2*np.pi*np.random.random()\n            sin_theta = np.sqrt(1 - cos_theta**2)\n            \n            velocities[i] = v_mag * np.array([\n                sin_theta * np.cos(phi),\n                sin_theta * np.sin(phi),\n                cos_theta\n            ])\n        \n        return velocities","type":"content","url":"/project2-description#task-2-plummer-sphere-spatial-distribution-45-min","position":29},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 3: Vectorized N-Body Force Calculation (40 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"type":"lvl4","url":"/project2-description#task-3-vectorized-n-body-force-calculation-40-min","position":30},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 3: Vectorized N-Body Force Calculation (40 min)","lvl3":"Lab Session Objectives","lvl2":"Week 2: Statistical Sampling and Multi-Body Systems"},"content":"Goal: Implement efficient O(N¬≤) force computation\n\nVectorized Implementation:def gravitational_forces_vectorized(positions, masses, softening=0.01):\n    \"\"\"\n    Calculate gravitational forces between all particle pairs.\n    \n    Parameters:\n    -----------\n    positions : array [N, 3]\n        Particle positions\n    masses : array [N]\n        Particle masses\n    softening : float\n        Softening parameter to avoid singularities\n        \n    Returns:\n    --------\n    forces : array [N, 3]\n        Gravitational forces on each particle\n    \"\"\"\n    N = len(masses)\n    G = 4.3e-3  # pc¬≥/M‚òâ/Myr¬≤ (convenient units)\n    \n    # Calculate all pairwise separations using broadcasting\n    # positions[i,j] - positions[k,j] for all i,k pairs\n    r_vectors = positions[:, np.newaxis, :] - positions[np.newaxis, :, :]  # [N, N, 3]\n    \n    # Distance magnitudes with softening\n    r_magnitudes = np.sqrt(np.sum(r_vectors**2, axis=2) + softening**2)  # [N, N]\n    \n    # Avoid self-interaction\n    np.fill_diagonal(r_magnitudes, np.inf)\n    \n    # Force magnitudes: F = G*m1*m2/r¬≤\n    mass_products = masses[:, np.newaxis] * masses[np.newaxis, :]  # [N, N]\n    force_magnitudes = G * mass_products / r_magnitudes**2  # [N, N]\n    \n    # Force directions: unit vectors\n    r_unit = r_vectors / r_magnitudes[:, :, np.newaxis]  # [N, N, 3]\n    \n    # Total forces: sum over all other particles\n    forces = np.sum(force_magnitudes[:, :, np.newaxis] * r_unit, axis=1)  # [N, 3]\n    \n    return forces\n\ndef performance_comparison():\n    \"\"\"Compare vectorized vs nested loop implementations.\"\"\"\n    import time\n    \n    # Test different cluster sizes\n    N_values = [10, 50, 100, 200, 500]\n    \n    for N in N_values:\n        # Generate test data\n        positions = np.random.randn(N, 3)\n        masses = np.random.uniform(0.1, 10, N)\n        \n        # Time vectorized version\n        start = time.time()\n        forces_vec = gravitational_forces_vectorized(positions, masses)\n        time_vec = time.time() - start\n        \n        # Time nested loop version (for comparison)\n        start = time.time()\n        forces_loop = gravitational_forces_nested_loops(positions, masses)\n        time_loop = time.time() - start\n        \n        print(f\"N={N}: Vectorized={time_vec:.4f}s, Loops={time_loop:.4f}s, \"\n              f\"Speedup={time_loop/time_vec:.1f}x\")\n\nWeek 2 Deliverable: Realistic stellar cluster initialization with IMF masses and Plummer positions, plus efficient force calculations","type":"content","url":"/project2-description#task-3-vectorized-n-body-force-calculation-40-min","position":31},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"type":"lvl2","url":"/project2-description#week-3-adaptive-timestepping-and-cluster-evolution","position":32},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"content":"","type":"content","url":"/project2-description#week-3-adaptive-timestepping-and-cluster-evolution","position":33},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Conceptual Introduction (25 min)","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"type":"lvl3","url":"/project2-description#conceptual-introduction-25-min-2","position":34},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Conceptual Introduction (25 min)","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"content":"Energy conservation as accuracy criterion\n\nAdaptive timestep algorithms\n\nMulti-mass cluster dynamics: mass segregation, two-body relaxation\n\nStellar escape and cluster dissolution\n\nComputational complexity and optimization strategies","type":"content","url":"/project2-description#conceptual-introduction-25-min-2","position":35},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Lab Session Objectives","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"type":"lvl3","url":"/project2-description#lab-session-objectives-2","position":36},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Lab Session Objectives","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"content":"Implement energy-controlled adaptive integration and study realistic cluster evolution.","type":"content","url":"/project2-description#lab-session-objectives-2","position":37},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 1: Adaptive Timestep Control (50 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"type":"lvl4","url":"/project2-description#task-1-adaptive-timestep-control-50-min","position":38},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 1: Adaptive Timestep Control (50 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"content":"Goal: Implement robust adaptive timestep algorithm based on energy conservation\n\nAdaptive Integration Framework:class AdaptiveNBodySimulator:\n    \"\"\"\n    N-body simulator with adaptive timestep control.\n    \n    Uses energy conservation to monitor accuracy and adjust timestep.\n    \"\"\"\n    \n    def __init__(self, positions, velocities, masses, initial_dt=0.01, \n                 energy_tolerance=1e-6):\n        \"\"\"\n        Parameters:\n        -----------\n        positions : array [N, 3]\n            Initial positions [pc]\n        velocities : array [N, 3] \n            Initial velocities [km/s]\n        masses : array [N]\n            Particle masses [M‚òâ]\n        initial_dt : float\n            Initial timestep [Myr]\n        energy_tolerance : float\n            Relative energy error tolerance\n        \"\"\"\n        self.positions = np.array(positions)\n        self.velocities = np.array(velocities) \n        self.masses = np.array(masses)\n        self.dt = initial_dt\n        self.tolerance = energy_tolerance\n        \n        # Calculate initial energy\n        self.initial_energy = self.total_energy()\n        \n        # Statistics tracking\n        self.n_accepted = 0\n        self.n_rejected = 0\n        self.energy_errors = []\n        self.timesteps = []\n        \n        # History storage\n        self.time = 0.0\n        self.history = {\n            'time': [0.0],\n            'positions': [self.positions.copy()],\n            'velocities': [self.velocities.copy()],\n            'energy': [self.initial_energy],\n            'timestep': [self.dt]\n        }\n    \n    def total_energy(self):\n        \"\"\"Calculate total energy: kinetic + potential.\"\"\"\n        # Kinetic energy\n        ke = 0.5 * np.sum(self.masses * np.sum(self.velocities**2, axis=1))\n        \n        # Potential energy\n        pe = 0\n        for i in range(len(self.masses)):\n            for j in range(i+1, len(self.masses)):\n                r_ij = np.linalg.norm(self.positions[i] - self.positions[j])\n                pe -= G * self.masses[i] * self.masses[j] / r_ij\n        \n        return ke + pe\n    \n    def energy_error(self):\n        \"\"\"Calculate relative energy error from initial value.\"\"\"\n        current_energy = self.total_energy()\n        return abs((current_energy - self.initial_energy) / self.initial_energy)\n    \n    def leapfrog_step(self, dt):\n        \"\"\"Take single leapfrog integration step.\"\"\"\n        # Store initial state for potential rollback\n        old_positions = self.positions.copy()\n        old_velocities = self.velocities.copy()\n        \n        # Leapfrog integration\n        forces = gravitational_forces_vectorized(self.positions, self.masses)\n        accelerations = forces / self.masses[:, np.newaxis]\n        \n        # Kick-drift-kick\n        self.velocities += 0.5 * dt * accelerations\n        self.positions += dt * self.velocities\n        \n        forces = gravitational_forces_vectorized(self.positions, self.masses)\n        accelerations = forces / self.masses[:, np.newaxis]\n        self.velocities += 0.5 * dt * accelerations\n        \n        return old_positions, old_velocities\n    \n    def adaptive_step(self):\n        \"\"\"\n        Take adaptive timestep with error control.\n        \n        Algorithm:\n        1. Attempt step with current timestep\n        2. Check energy conservation\n        3. If error too large: reduce timestep and retry\n        4. If error acceptable: possibly increase timestep for next step\n        \"\"\"\n        max_attempts = 5\n        \n        for attempt in range(max_attempts):\n            # Store state before step\n            old_positions, old_velocities = self.leapfrog_step(self.dt)\n            \n            # Check energy conservation\n            error = self.energy_error()\n            \n            if error <= self.tolerance:\n                # Step accepted\n                self.time += self.dt\n                self.n_accepted += 1\n                \n                # Store results\n                self.history['time'].append(self.time)\n                self.history['positions'].append(self.positions.copy())\n                self.history['velocities'].append(self.velocities.copy())\n                self.history['energy'].append(self.total_energy())\n                self.history['timestep'].append(self.dt)\n                \n                self.energy_errors.append(error)\n                self.timesteps.append(self.dt)\n                \n                # Possibly increase timestep for next step\n                if error < self.tolerance / 10:\n                    self.dt = min(self.dt * 1.1, 0.1)  # Don't let it grow too large\n                \n                return True\n            \n            else:\n                # Step rejected - restore state and reduce timestep\n                self.positions = old_positions\n                self.velocities = old_velocities\n                self.dt *= 0.5\n                self.n_rejected += 1\n                \n                if attempt == max_attempts - 1:\n                    print(f\"Warning: Max attempts reached at t={self.time:.3f}\")\n                    return False\n        \n        return False\n    \n    def evolve(self, t_final, max_steps=10000):\n        \"\"\"Evolve system to final time using adaptive timesteps.\"\"\"\n        step_count = 0\n        \n        while self.time < t_final and step_count < max_steps:\n            success = self.adaptive_step()\n            if not success:\n                print(\"Simulation failed - energy errors too large\")\n                break\n            \n            step_count += 1\n            \n            # Progress reporting\n            if step_count % 100 == 0:\n                acceptance_rate = self.n_accepted / (self.n_accepted + self.n_rejected)\n                print(f\"t={self.time:.2f}, dt={self.dt:.4f}, \"\n                      f\"E_error={self.energy_errors[-1]:.2e}, \"\n                      f\"acceptance={acceptance_rate:.2f}\")\n        \n        return self.get_results()\n    \n    def get_results(self):\n        \"\"\"Return simulation results as arrays.\"\"\"\n        return {\n            'time': np.array(self.history['time']),\n            'positions': np.array(self.history['positions']),\n            'velocities': np.array(self.history['velocities']),\n            'energy': np.array(self.history['energy']),\n            'timesteps': np.array(self.history['timestep'])\n        }","type":"content","url":"/project2-description#task-1-adaptive-timestep-control-50-min","position":39},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 2: Cluster Physics and Evolution (55 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"type":"lvl4","url":"/project2-description#task-2-cluster-physics-and-evolution-55-min","position":40},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 2: Cluster Physics and Evolution (55 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"content":"Goal: Study realistic stellar cluster evolution phenomena\n\nMass Segregation Analysis:def analyze_mass_segregation(positions, masses, times):\n    \"\"\"\n    Track mass segregation: massive stars sink to cluster center.\n    \n    Quantify using mass-weighted radial distribution.\n    \"\"\"\n    segregation_ratios = []\n    \n    for i, pos in enumerate(positions):\n        # Calculate distance from cluster center\n        center = np.average(pos, weights=masses, axis=0)\n        distances = np.linalg.norm(pos - center, axis=1)\n        \n        # Sort by mass\n        mass_order = np.argsort(masses)[::-1]  # Heaviest first\n        \n        # Compare radial distribution of most vs least massive stars\n        n_heavy = len(masses) // 10  # Top 10%\n        n_light = len(masses) // 10  # Bottom 10%\n        \n        r_heavy = np.mean(distances[mass_order[:n_heavy]])\n        r_light = np.mean(distances[mass_order[-n_light:]])\n        \n        segregation_ratios.append(r_light / r_heavy)\n    \n    return segregation_ratios\n\ndef calculate_virial_ratio(positions, velocities, masses):\n    \"\"\"\n    Calculate virial ratio: 2T/|U|\n    \n    For bound system in equilibrium, should equal 1.\n    \"\"\"\n    # Kinetic energy\n    T = 0.5 * np.sum(masses * np.sum(velocities**2, axis=1))\n    \n    # Potential energy\n    U = 0\n    for i in range(len(masses)):\n        for j in range(i+1, len(masses)):\n            r_ij = np.linalg.norm(positions[i] - positions[j])\n            U -= G * masses[i] * masses[j] / r_ij\n    \n    return 2 * T / abs(U)\n\ndef identify_escaping_stars(positions, velocities, masses, escape_criterion=2.0):\n    \"\"\"\n    Identify stars with velocities exceeding escape velocity.\n    \n    v_escape = sqrt(2 * |U| / m) at each star's location\n    \"\"\"\n    escaping_stars = []\n    \n    for i in range(len(masses)):\n        # Calculate potential at star i due to all other stars\n        phi_i = 0\n        for j in range(len(masses)):\n            if i != j:\n                r_ij = np.linalg.norm(positions[i] - positions[j])\n                phi_i -= G * masses[j] / r_ij\n        \n        # Escape velocity at this location\n        v_escape = np.sqrt(-2 * phi_i)\n        v_star = np.linalg.norm(velocities[i])\n        \n        if v_star > escape_criterion * v_escape:\n            escaping_stars.append(i)\n    \n    return escaping_stars\n\nCluster Snapshot Generation for Project 3:def generate_cluster_snapshots(cluster_mass=1000, n_stars=200, \n                              evolution_times=[0, 5, 20, 50]):\n    \"\"\"\n    Generate stellar cluster at multiple evolutionary phases.\n    These snapshots will be used in Project 3 for radiation calculations.\n    \n    Parameters:\n    -----------\n    cluster_mass : float\n        Total cluster mass [M‚òâ]\n    n_stars : int\n        Number of stars in cluster\n    evolution_times : list\n        Times to save snapshots [Myr]\n        \n    Returns:\n    --------\n    snapshots : list of dict\n        Each dict contains stellar properties at one time\n    \"\"\"\n    # Initialize cluster\n    imf = StellarIMF(imf_type='kroupa')\n    masses = imf.sample_inverse_transform(n_stars)\n    masses = masses * (cluster_mass / np.sum(masses))  # Normalize total mass\n    \n    plummer = PlummerSphere(total_mass=cluster_mass, scale_radius=1.0)\n    positions = plummer.sample_positions(n_stars)\n    velocities = plummer.calculate_virial_velocities(positions, masses)\n    \n    # Calculate stellar properties for radiation (from Project 1)\n    stellar_props = mass_to_stellar_properties(masses)\n    \n    # Set up adaptive simulator\n    simulator = AdaptiveNBodySimulator(\n        positions, velocities, masses,\n        initial_dt=0.01, energy_tolerance=1e-6\n    )\n    \n    snapshots = []\n    \n    for t_target in evolution_times:\n        if t_target == 0:\n            # Initial conditions\n            snapshot = create_snapshot(\n                time=0, \n                positions=simulator.positions,\n                velocities=simulator.velocities,\n                masses=masses,\n                stellar_props=stellar_props\n            )\n        else:\n            # Evolve to target time\n            results = simulator.evolve(t_target)\n            \n            # Extract final state\n            final_positions = results['positions'][-1]\n            final_velocities = results['velocities'][-1]\n            \n            snapshot = create_snapshot(\n                time=t_target,\n                positions=final_positions,\n                velocities=final_velocities,\n                masses=masses,\n                stellar_props=stellar_props\n            )\n        \n        snapshots.append(snapshot)\n        print(f\"Snapshot created at t = {t_target} Myr\")\n    \n    return snapshots\n\ndef create_snapshot(time, positions, velocities, masses, stellar_props):\n    \"\"\"Create comprehensive cluster snapshot.\"\"\"\n    # Calculate cluster center and properties\n    center = np.average(positions, weights=masses, axis=0)\n    centered_positions = positions - center\n    \n    # Structural parameters\n    distances = np.linalg.norm(centered_positions, axis=1)\n    half_mass_radius = np.median(distances)\n    \n    # Core radius (radius containing 10% of mass)\n    mass_order = np.argsort(distances)\n    core_mass_index = int(0.1 * len(masses))\n    core_radius = distances[mass_order[core_mass_index]]\n    \n    snapshot = {\n        'time': time,\n        'n_stars': len(masses),\n        'total_mass': np.sum(masses),\n        \n        # Stellar properties\n        'positions': centered_positions,  # Centered on cluster\n        'velocities': velocities,\n        'masses': masses,\n        'luminosities': stellar_props['luminosities'],\n        'temperatures': stellar_props['temperatures'],\n        'radii': stellar_props['radii'],\n        \n        # Cluster structure\n        'center': center,\n        'half_mass_radius': half_mass_radius,\n        'core_radius': core_radius,\n        'virial_ratio': calculate_virial_ratio(positions, velocities, masses),\n        \n        # Evolution diagnostics\n        'mass_segregation_ratio': analyze_mass_segregation([positions], masses, [time])[0],\n        'escaping_stars': identify_escaping_stars(positions, velocities, masses)\n    }\n    \n    return snapshot\n\ndef save_snapshots_for_project3(snapshots, filename='cluster_evolution.pkl'):\n    \"\"\"Save snapshots in format suitable for Project 3.\"\"\"\n    import pickle\n    \n    with open(filename, 'wb') as f:\n        pickle.dump(snapshots, f)\n    \n    print(f\"Saved {len(snapshots)} cluster snapshots to {filename}\")\n    print(\"These will be used as radiation sources in Project 3\")","type":"content","url":"/project2-description#task-2-cluster-physics-and-evolution-55-min","position":41},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 3: Performance Analysis and Optimization (30 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"type":"lvl4","url":"/project2-description#task-3-performance-analysis-and-optimization-30-min","position":42},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Task 3: Performance Analysis and Optimization (30 min)","lvl3":"Lab Session Objectives","lvl2":"Week 3: Adaptive Timestepping and Cluster Evolution"},"content":"Goal: Analyze computational efficiency and identify optimization opportunities\n\nPerformance Studies:def scaling_analysis():\n    \"\"\"Study how computational cost scales with cluster size.\"\"\"\n    import time\n    \n    N_values = [50, 100, 200, 400]\n    times_force = []\n    times_integration = []\n    \n    for N in N_values:\n        # Generate test cluster\n        masses = np.random.uniform(0.1, 10, N)\n        positions = np.random.randn(N, 3)\n        velocities = np.random.randn(N, 3)\n        \n        # Time force calculation\n        start = time.time()\n        for _ in range(10):  # Multiple iterations for averaging\n            forces = gravitational_forces_vectorized(positions, masses)\n        times_force.append((time.time() - start) / 10)\n        \n        # Time full integration step\n        simulator = AdaptiveNBodySimulator(positions, velocities, masses)\n        start = time.time()\n        for _ in range(10):\n            simulator.adaptive_step()\n        times_integration.append((time.time() - start) / 10)\n    \n    # Analyze scaling: should be O(N¬≤) for force calculation\n    print(\"Scaling Analysis:\")\n    for i, N in enumerate(N_values):\n        print(f\"N={N}: Force={times_force[i]:.4f}s, Integration={times_integration[i]:.4f}s\")\n\ndef memory_optimization_analysis():\n    \"\"\"Analyze memory usage and suggest optimizations.\"\"\"\n    # Profile memory usage during simulation\n    # Identify opportunities for optimization\n    pass\n\nWeek 3 Deliverable: Complete adaptive N-body simulator with realistic cluster evolution and snapshots for Project 3","type":"content","url":"/project2-description#task-3-performance-analysis-and-optimization-30-min","position":43},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl2":"Assessment and Grading"},"type":"lvl2","url":"/project2-description#assessment-and-grading","position":44},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl2":"Assessment and Grading"},"content":"","type":"content","url":"/project2-description#assessment-and-grading","position":45},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Grading Breakdown","lvl2":"Assessment and Grading"},"type":"lvl3","url":"/project2-description#grading-breakdown","position":46},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Grading Breakdown","lvl2":"Assessment and Grading"},"content":"Week 1: ODE solvers and validation (30%)\n\nWeek 2: Statistical sampling and vectorization (35%)\n\nWeek 3: Adaptive methods and cluster evolution (35%)","type":"content","url":"/project2-description#grading-breakdown","position":47},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"type":"lvl3","url":"/project2-description#evaluation-criteria","position":48},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"content":"","type":"content","url":"/project2-description#evaluation-criteria","position":49},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Technical Implementation (60%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"type":"lvl4","url":"/project2-description#technical-implementation-60","position":50},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Technical Implementation (60%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"content":"Algorithm Correctness: Do integrators conserve energy appropriately?\n\nSampling Accuracy: Do distributions match theoretical expectations?\n\nVectorization Efficiency: Significant speedup over naive implementations\n\nAdaptive Control: Proper timestep adjustment based on energy errors","type":"content","url":"/project2-description#technical-implementation-60","position":51},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Scientific Understanding (25%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"type":"lvl4","url":"/project2-description#scientific-understanding-25","position":52},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Scientific Understanding (25%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"content":"Physics Validation: Energy conservation, virial equilibrium, orbital mechanics\n\nStatistical Analysis: IMF and spatial distribution validation\n\nCluster Evolution: Understanding of mass segregation and stellar escape","type":"content","url":"/project2-description#scientific-understanding-25","position":53},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Code Quality and Performance (15%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"type":"lvl4","url":"/project2-description#code-quality-and-performance-15","position":54},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Code Quality and Performance (15%)","lvl3":"Evaluation Criteria","lvl2":"Assessment and Grading"},"content":"Documentation: Clear docstrings and code organization\n\nTesting: Validation against analytical solutions\n\nOptimization: Efficient use of NumPy vectorization\n\nReproducibility: Proper random seed handling","type":"content","url":"/project2-description#code-quality-and-performance-15","position":55},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Connection to Project 3","lvl2":"Assessment and Grading"},"type":"lvl3","url":"/project2-description#connection-to-project-3","position":56},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Connection to Project 3","lvl2":"Assessment and Grading"},"content":"The stellar cluster snapshots generated in this project become the radiation sources for Project 3:\n\nStellar positions: Spatial distribution for radiation field calculations\n\nStellar masses and luminosities: Heating source strengths\n\nCluster evolution: How radiation field changes with time\n\nRealistic populations: IMF-sampled masses give proper luminosity functions","type":"content","url":"/project2-description#connection-to-project-3","position":57},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Deliverables","lvl2":"Assessment and Grading"},"type":"lvl3","url":"/project2-description#deliverables","position":58},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl3":"Deliverables","lvl2":"Assessment and Grading"},"content":"","type":"content","url":"/project2-description#deliverables","position":59},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Final Submission","lvl3":"Deliverables","lvl2":"Assessment and Grading"},"type":"lvl4","url":"/project2-description#final-submission","position":60},{"hierarchy":{"lvl1":"ASTR 596 Project 2: N-Body Dynamics + Statistical Sampling + Stellar Systems","lvl4":"Final Submission","lvl3":"Deliverables","lvl2":"Assessment and Grading"},"content":"N-Body Simulation Library:\n\node_solvers.py: Integration method implementations\n\nstellar_sampling.py: IMF and Plummer sphere classes\n\nnbody_simulator.py: Complete adaptive N-body framework\n\ncluster_analysis.py: Evolution analysis tools\n\nValidation Notebooks:\n\norbital_mechanics_validation.ipynb: Two-body problem tests\n\nsampling_validation.ipynb: IMF and spatial distribution verification\n\ncluster_evolution_analysis.ipynb: Mass segregation and dynamics\n\nProject 3 Interface:\n\ncluster_snapshots.pkl: Saved stellar cluster evolution data\n\nsnapshot_format.md: Documentation of data structure\n\nThis project establishes the realistic stellar systems needed for sophisticated radiation calculations while teaching essential computational physics skills: numerical integration, statistical sampling, vectorization, and adaptive methods.","type":"content","url":"/project2-description#final-submission","position":61},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics"},"type":"lvl1","url":"/project3-description","position":0},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics"},"content":"Duration: 4 weeks\nWeight: 18% of course grade\nTheme: ‚ÄúRosen (2016) Direct Radiation + Deep Bayesian Inference‚Äù","type":"content","url":"/project3-description","position":1},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl3":"Project Overview"},"type":"lvl3","url":"/project3-description#project-overview","position":2},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl3":"Project Overview"},"content":"This project implements sophisticated Monte Carlo radiative transfer following the Rosen (2016) methodology for direct stellar radiation, combined with comprehensive Bayesian parameter estimation. You will build a complete pipeline from stellar cluster heating calculations to statistical inference of dust properties. This project emphasizes both physical understanding of radiative processes and modern statistical methods.","type":"content","url":"/project3-description#project-overview","position":3},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl3":"Learning Objectives"},"type":"lvl3","url":"/project3-description#learning-objectives","position":4},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl3":"Learning Objectives"},"content":"By completing this project, you will:\n\nMaster radiative transfer physics: Direct radiation field calculation and dust heating\n\nImplement Monte Carlo methods: Photon transport and statistical sampling\n\nUnderstand Bayesian statistics: Priors, likelihoods, posteriors, and model comparison\n\nDevelop MCMC expertise: Multiple sampling algorithms with convergence diagnostics\n\nApply advanced inference: Parameter estimation for complex astrophysical models\n\nConnect theory to observations: Synthetic observational data analysis","type":"content","url":"/project3-description#learning-objectives","position":5},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl3":"Prerequisites from Previous Projects"},"type":"lvl3","url":"/project3-description#prerequisites-from-previous-projects","position":6},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl3":"Prerequisites from Previous Projects"},"content":"Project 1: Numerical integration (Planck function), root-finding (temperature balance), blackbody physics\n\nProject 2: Stellar cluster snapshots with realistic mass/luminosity distributions\n\nMathematical Tools: Statistical sampling, error analysis, performance optimization","type":"content","url":"/project3-description#prerequisites-from-previous-projects","position":7},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl2":"Week 1: Direct Radiation Monte Carlo Framework"},"type":"lvl2","url":"/project3-description#week-1-direct-radiation-monte-carlo-framework","position":8},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl2":"Week 1: Direct Radiation Monte Carlo Framework"},"content":"","type":"content","url":"/project3-description#week-1-direct-radiation-monte-carlo-framework","position":9},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl3":"Conceptual Introduction (30 min)","lvl2":"Week 1: Direct Radiation Monte Carlo Framework"},"type":"lvl3","url":"/project3-description#conceptual-introduction-30-min","position":10},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl3":"Conceptual Introduction (30 min)","lvl2":"Week 1: Direct Radiation Monte Carlo Framework"},"content":"Radiative Transfer Theory: Detailed mathematical foundation (see extended theory section)\n\nRosen (2016) Innovation: Direct radiation field vs diffusion approximation\n\nMonte Carlo Philosophy: Statistical approach to complex integral equations\n\nDust Physics: Absorption, scattering, and thermal re-emission processes","type":"content","url":"/project3-description#conceptual-introduction-30-min","position":11},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl3":"Lab Session Objectives","lvl2":"Week 1: Direct Radiation Monte Carlo Framework"},"type":"lvl3","url":"/project3-description#lab-session-objectives","position":12},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl3":"Lab Session Objectives","lvl2":"Week 1: Direct Radiation Monte Carlo Framework"},"content":"Implement direct radiation field calculation using Project 2 stellar clusters.","type":"content","url":"/project3-description#lab-session-objectives","position":13},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl4":"Task 1: Direct Radiation Physics Implementation (60 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: Direct Radiation Monte Carlo Framework"},"type":"lvl4","url":"/project3-description#task-1-direct-radiation-physics-implementation-60-min","position":14},{"hierarchy":{"lvl1":"ASTR 596 Project 3: Monte Carlo Radiative Transfer + MCMC + Bayesian Statistics","lvl4":"Task 1: Direct Radiation Physics Implementation (60 min)","lvl3":"Lab Session Objectives","lvl2":"Week 1: Direct Radiation Monte Carlo Framework"},"content":"Goal: Build foundation for accurate stellar heating calculations\n\nCore Physics Modules:import numpy as np\nfrom scipy.optimize import brentq\nimport pickle\n\n# Load stellar cluster data from Project 2\ndef load_cluster_snapshot(filename, snapshot_index=0):\n    \"\"\"Load stellar cluster from Project 2.\"\"\"","type":"content","url":"/project3-description#task-1-direct-radiation-physics-implementation-60-min","position":15},{"hierarchy":{"lvl1":"Short Projects Overview"},"type":"lvl1","url":"/index-1","position":0},{"hierarchy":{"lvl1":"Short Projects Overview"},"content":"This section contains the core programming projects for ASTR 596: Modeling the Universe.","type":"content","url":"/index-1","position":1},{"hierarchy":{"lvl1":"Short Projects Overview","lvl2":"Project Philosophy"},"type":"lvl2","url":"/index-1#project-philosophy","position":2},{"hierarchy":{"lvl1":"Short Projects Overview","lvl2":"Project Philosophy"},"content":"Each project implements fundamental algorithms from scratch using our ‚Äúglass box‚Äù approach. You‚Äôll build understanding through manual implementation before leveraging modern frameworks.","type":"content","url":"/index-1#project-philosophy","position":3},{"hierarchy":{"lvl1":"Short Projects Overview","lvl2":"Project Structure"},"type":"lvl2","url":"/index-1#project-structure","position":4},{"hierarchy":{"lvl1":"Short Projects Overview","lvl2":"Project Structure"},"content":"The three short projects progress from foundations to advanced methods:","type":"content","url":"/index-1#project-structure","position":5},{"hierarchy":{"lvl1":"Short Projects Overview","lvl3":"üêç Project 1: Python Foundations & Stellar Physics","lvl2":"Project Structure"},"type":"lvl3","url":"/index-1#id-project-1-python-foundations-stellar-physics","position":6},{"hierarchy":{"lvl1":"Short Projects Overview","lvl3":"üêç Project 1: Python Foundations & Stellar Physics","lvl2":"Project Structure"},"content":"Duration: 2 weeks | Focus: OOP design and stellar evolution modeling\n\nProfessional development environment setup\n\nObject-oriented programming principles\n\nStellar physics implementation\n\nGit workflow and documentation\n\n‚Üí Project 1 Details","type":"content","url":"/index-1#id-project-1-python-foundations-stellar-physics","position":7},{"hierarchy":{"lvl1":"Short Projects Overview","lvl3":"ü™ê Project 2: N-Body Dynamics & Monte Carlo","lvl2":"Project Structure"},"type":"lvl3","url":"/index-1#id-project-2-n-body-dynamics-monte-carlo","position":8},{"hierarchy":{"lvl1":"Short Projects Overview","lvl3":"ü™ê Project 2: N-Body Dynamics & Monte Carlo","lvl2":"Project Structure"},"content":"Duration: 2 weeks | Focus: Gravitational systems and statistical sampling\n\nNumerical integration methods\n\nN-body gravitational dynamics\n\nMonte Carlo sampling techniques\n\nPerformance optimization\n\n‚Üí Project 2 Details","type":"content","url":"/index-1#id-project-2-n-body-dynamics-monte-carlo","position":9},{"hierarchy":{"lvl1":"Short Projects Overview","lvl3":"üìà Project 3: Linear Regression & Machine Learning","lvl2":"Project Structure"},"type":"lvl3","url":"/index-1#id-project-3-linear-regression-machine-learning","position":10},{"hierarchy":{"lvl1":"Short Projects Overview","lvl3":"üìà Project 3: Linear Regression & Machine Learning","lvl2":"Project Structure"},"content":"Duration: 2 weeks | Focus: Statistical modeling from first principles\n\nLinear regression implementation\n\nGradient descent optimization\n\nCross-validation and model selection\n\nAstronomical data analysis\n\n‚Üí Project 3 Details","type":"content","url":"/index-1#id-project-3-linear-regression-machine-learning","position":11},{"hierarchy":{"lvl1":"Short Projects Overview","lvl2":"Submission Guidelines"},"type":"lvl2","url":"/index-1#submission-guidelines","position":12},{"hierarchy":{"lvl1":"Short Projects Overview","lvl2":"Submission Guidelines"},"content":"All projects follow consistent submission requirements designed to build professional development skills:\n\nModular .py scripts (no Jupyter notebooks after Project 1)\n\nGitHub version control with meaningful commit history\n\nProfessional documentation with clear README files\n\nProject memos explaining methodology and results\n\n‚Üí Complete Submission Guide","type":"content","url":"/index-1#submission-guidelines","position":13},{"hierarchy":{"lvl1":"Short Projects Overview","lvl2":"Skills Development"},"type":"lvl2","url":"/index-1#skills-development","position":14},{"hierarchy":{"lvl1":"Short Projects Overview","lvl2":"Skills Development"},"content":"Through these projects, you‚Äôll develop:\n\nComputational thinking for complex astrophysical problems\n\nProfessional coding practices used in research and industry\n\nMathematical intuition behind numerical methods\n\nScientific communication through documentation and reports","type":"content","url":"/index-1#skills-development","position":15},{"hierarchy":{"lvl1":"Short Projects Overview","lvl2":"Getting Help"},"type":"lvl2","url":"/index-1#getting-help","position":16},{"hierarchy":{"lvl1":"Short Projects Overview","lvl2":"Getting Help"},"content":"Pair programming sessions during Friday lab time\n\nOffice hours for conceptual guidance and debugging\n\nCourse Slack for quick questions and peer support\n\nAI tools integration following our three-phase policy\n\nEach project builds the foundation for the final neural networks project where you‚Äôll apply these skills to cutting-edge machine learning implementations.","type":"content","url":"/index-1#getting-help","position":17}]}